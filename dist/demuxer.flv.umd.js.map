{"version":3,"file":"demuxer.flv.umd.js","sources":["../src/enum/events.ts","../src/util/event-emitter.ts","../src/types/globals.ts","../src/util/is.ts","../src/util/cache-buffer.ts","../src/util/multi-map.ts","../src/util/event-manager.ts","../src/util/global.ts","../src/util/logger.ts","../src/util/stream.ts","../src/demux-facade.ts","../src/mux-error-code.ts","../src/flv/flv-const.ts","../src/util/dv.ts","../src/enum/flv-tag-types.ts","../src/flv/structs/flv-tag.ts","../src/flv/streams/body.ts","../src/flv/structs/flv-amf.ts","../src/flv/types/av-context.ts","../src/codec/aac/aac.ts","../src/flv/structs/flv-tag-aac-audio-data.ts","../src/flv/structs/flv-tag-audio-data.ts","../src/codec/avc/ep3b.ts","../src/util/exp-golumb.ts","../src/codec/avc/sps.ts","../src/codec/avc/pps.ts","../src/codec/avc/sei.ts","../src/codec/avc/nalu.ts","../src/codec/avc.ts","../src/flv/structs/flv-tag-avc-video-packet.ts","../src/flv/structs/flv-tag-video-data.ts","../src/flv/streams/tag.ts","../src/flv/structs/flv-head.ts","../src/flv/demux.ts"],"sourcesContent":["/**\n * @file= events.js, created at Monday, 23rd December 2019 3=47=23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nexport enum Events {\n\tERROR = 'ERROR',\n\tINFO = 'INFO',\n\tDATA = 'DATA',\n\tDEMUX_DATA = 'DEMUX_DATA',\n\tDONE = 'DONE'\n}\n","/**\n * @copyright https://github.com/nodejs/node/blob/master/lib/events.js\n */\n/* eslint-disable */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill;\nvar objectKeys = Object.keys || objectKeysPolyfill;\nvar bind = Function.prototype.bind || functionBindPolyfill;\n\n// By default Dispatchers will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nlet defaultMaxListeners = 10;\n\nexport default class EventEmitter {\n\tstatic listenerCount(emitter, type) {\n\t\tif (typeof emitter.listenerCount === 'function') {\n\t\t\treturn emitter.listenerCount(type);\n\t\t} else {\n\t\t\treturn listenerCount.call(emitter, type);\n\t\t}\n\t}\n\n\tstatic defaultMaxListeners: number;\n\n\t_maxListeners?: number;\n\t_eventsCount: number;\n\t_events: any;\n\n\tconstructor() {\n\t\tif (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n\t\t\tthis._events = objectCreate(null);\n\t\t\tthis._eventsCount = 0;\n\t\t}\n\n\t\tthis._maxListeners = this._maxListeners || undefined;\n\t}\n\n\t// // Obviously not all Emitters should be limited to 10. This function allows\n\t// // that to be increased. Set to zero for unlimited.\n\t// setMaxListeners(n) {\n\t//     if (typeof n !== 'number' || n < 0 || isNaN(n))\n\t//         throw new TypeError('\"n\" argument must be a positive number');\n\t//     this._maxListeners = n;\n\t//     return this;\n\t// }\n\t//\n\t// getMaxListeners() {\n\t//     return $getMaxListeners(this);\n\t// }\n\n\temit(type: string, ...rest) {\n\t\tvar er, handler, len, args, i, events;\n\t\tvar doError = type === 'error';\n\n\t\tevents = this._events;\n\t\tif (events) doError = doError && events.error == null;\n\t\telse if (!doError) return false;\n\n\t\t// If there is no 'error' event listener then throw.\n\t\tif (doError) {\n\t\t\tif (arguments.length > 1) er = arguments[1];\n\t\t\tif (er instanceof Error) {\n\t\t\t\tthrow er; // Unhandled 'error' event\n\t\t\t} else {\n\t\t\t\t// At least give some kind of context to the user\n\t\t\t\tvar err = new Error('Unhandled \"error\" event. (' + er + ')');\n\t\t\t\terr['context'] = er;\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\n\t\thandler = events[type];\n\n\t\tif (!handler) return false;\n\n\t\tvar isFn = typeof handler === 'function';\n\t\tlen = arguments.length;\n\t\tswitch (len) {\n\t\t\t// fast cases\n\t\t\tcase 1:\n\t\t\t\temitNone(handler, isFn, this);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\temitOne(handler, isFn, this, arguments[1]);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\temitTwo(handler, isFn, this, arguments[1], arguments[2]);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\temitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n\t\t\t\tbreak;\n\t\t\t// slower\n\t\t\tdefault:\n\t\t\t\targs = new Array(len - 1);\n\t\t\t\tfor (i = 1; i < len; i++) args[i - 1] = arguments[i];\n\t\t\t\temitMany(handler, isFn, this, args);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\ton(type: string, listener: Function) {\n\t\treturn _addListener(this, type, listener);\n\t}\n\n\tonce(type, listener) {\n\t\tif (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\t\tthis.on(type, _onceWrap(this, type, listener));\n\t\treturn this;\n\t}\n\n\toff(type, listener) {\n\t\treturn _removeListener.call(this, type, listener);\n\t}\n\n\tremoveAllListeners(type) {\n\t\tvar listeners, events, i;\n\n\t\tevents = this._events;\n\t\tif (!events) return this;\n\n\t\t// not listening for off, no need to emit\n\t\tif (!events.off) {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\tthis._events = objectCreate(null);\n\t\t\t\tthis._eventsCount = 0;\n\t\t\t} else if (events[type]) {\n\t\t\t\tif (--this._eventsCount === 0) this._events = objectCreate(null);\n\t\t\t\telse delete events[type];\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t// emit off for all listeners on all events\n\t\tif (arguments.length === 0) {\n\t\t\tvar keys = objectKeys(events);\n\t\t\tvar key;\n\t\t\tfor (i = 0; i < keys.length; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tif (key === 'off') continue;\n\t\t\t\tthis.removeAllListeners(key);\n\t\t\t}\n\t\t\tthis.removeAllListeners('off');\n\t\t\tthis._events = objectCreate(null);\n\t\t\tthis._eventsCount = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tlisteners = events[type];\n\n\t\tif (typeof listeners === 'function') {\n\t\t\tthis.off(type, listeners);\n\t\t} else if (listeners) {\n\t\t\t// LIFO order\n\t\t\tfor (i = listeners.length - 1; i >= 0; i--) {\n\t\t\t\tthis.off(type, listeners[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tlisteners(type) {\n\t\treturn _listeners(this, type, true);\n\t}\n\n\trawListeners(type) {\n\t\treturn _listeners(this, type, false);\n\t}\n\n\tlistenerCount() {\n\t\treturn EventEmitter.listenerCount.apply(this, arguments);\n\t}\n}\n\nlet hasDefineProperty;\ntry {\n\tvar o = {};\n\tif (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n\thasDefineProperty = o['x'] === 0;\n} catch (err) {\n\thasDefineProperty = false;\n}\nif (hasDefineProperty) {\n\tObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn defaultMaxListeners;\n\t\t},\n\t\tset: function (arg) {\n\t\t\t// check whether the input is a positive number (whose value is zero or\n\t\t\t// greater and not a NaN).\n\t\t\tif (typeof arg !== 'number' || arg < 0 || arg !== arg)\n\t\t\t\tthrow new TypeError('\"defaultMaxListeners\" must be a positive number');\n\t\t\tdefaultMaxListeners = arg;\n\t\t}\n\t});\n} else {\n\tEventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\nfunction $getMaxListeners(that) {\n\tif (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n\treturn that._maxListeners;\n}\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n\tif (isFn) handler.call(self);\n\telse {\n\t\tvar len = handler.length;\n\t\tvar listeners = arrayClone(handler, len);\n\t\tfor (var i = 0; i < len; ++i) {\n\t\t\ttry {\n\t\t\t\tlisteners[i].call(self);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction emitOne(handler, isFn, self, arg1) {\n\tif (isFn) handler.call(self, arg1);\n\telse {\n\t\tvar len = handler.length;\n\t\tvar listeners = arrayClone(handler, len);\n\t\tfor (var i = 0; i < len; ++i) {\n\t\t\ttry {\n\t\t\t\tlisteners[i].call(self, arg1);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n\tif (isFn) handler.call(self, arg1, arg2);\n\telse {\n\t\tvar len = handler.length;\n\t\tvar listeners = arrayClone(handler, len);\n\t\tfor (var i = 0; i < len; ++i) {\n\t\t\ttry {\n\t\t\t\tlisteners[i].call(self, arg1, arg2);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n\tif (isFn) handler.call(self, arg1, arg2, arg3);\n\telse {\n\t\tvar len = handler.length;\n\t\tvar listeners = arrayClone(handler, len);\n\t\tfor (var i = 0; i < len; ++i) {\n\t\t\ttry {\n\t\t\t\tlisteners[i].call(self, arg1, arg2, arg3);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction emitMany(handler, isFn, self, args) {\n\tif (isFn) handler.apply(self, args);\n\telse {\n\t\tvar len = handler.length;\n\t\tvar listeners = arrayClone(handler, len);\n\t\tfor (var i = 0; i < len; ++i) {\n\t\t\ttry {\n\t\t\t\tlisteners[i].apply(self, args);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction _addListener(target: EventEmitter, type, listener: Function) {\n\tvar m;\n\tvar events;\n\tvar existing;\n\n\tif (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\n\tevents = target._events;\n\tif (!events) {\n\t\tevents = target._events = objectCreate(null);\n\t\ttarget._eventsCount = 0;\n\t} else {\n\t\t// To avoid recursion in the case that type === \"newListener\"! Before\n\t\t// adding it to the listeners, first emit \"newListener\".\n\t\tif (events.newListener) {\n\t\t\ttarget.emit('newListener', type, listener['listener'] ? listener['listener'] : listener);\n\n\t\t\t// Re-assign `events` because a newListener handler could have caused the\n\t\t\t// this._events to be assigned to a new object\n\t\t\tevents = target._events;\n\t\t}\n\t\texisting = events[type];\n\t}\n\n\tif (!existing) {\n\t\t// Optimize the case of one listener. Don't need the extra array object.\n\t\texisting = events[type] = listener;\n\t\t++target._eventsCount;\n\t} else {\n\t\tif (typeof existing === 'function') {\n\t\t\t// Adding the second element, need to change to array.\n\t\t\texisting = events[type] = [existing, listener];\n\t\t} else {\n\t\t\texisting.push(listener);\n\t\t}\n\n\t\t// Check for listener leak\n\t\tif (!existing.warned) {\n\t\t\tm = $getMaxListeners(target);\n\t\t\tif (m && m > 0 && existing.length > m) {\n\t\t\t\texisting.warned = true;\n\n\t\t\t\tclass CustomError extends Error {\n\t\t\t\t\temitter: any;\n\t\t\t\t\ttype: string;\n\t\t\t\t\tcount: number;\n\t\t\t\t}\n\t\t\t\tlet w: CustomError = new CustomError(\n\t\t\t\t\t'Possible Dispatcher memory leak detected. ' +\n\t\t\t\t\t\texisting.length +\n\t\t\t\t\t\t' \"' +\n\t\t\t\t\t\tString(type) +\n\t\t\t\t\t\t'\" listeners ' +\n\t\t\t\t\t\t'added. Use emitter.setMaxListeners() to ' +\n\t\t\t\t\t\t'increase limit.'\n\t\t\t\t);\n\t\t\t\tw.name = 'MaxListenersExceededWarning';\n\t\t\t\tw.emitter = target;\n\t\t\t\tw.type = type;\n\t\t\t\tw.count = existing.length;\n\n\t\t\t\tif (typeof console === 'object' && console.warn) {\n\t\t\t\t\tconsole.warn('%s: %s', w.name, w.message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn target;\n}\n\nfunction _removeListener(type, listener) {\n\tvar list, events, position, i, originalListener;\n\n\tif (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\n\tevents = this._events;\n\tif (!events) return this;\n\n\tlist = events[type];\n\tif (!list) return this;\n\n\tif (list === listener || list.listener === listener) {\n\t\tif (--this._eventsCount === 0) this._events = objectCreate(null);\n\t\telse {\n\t\t\tdelete events[type];\n\t\t\tif (events.off) this.emit('off', type, list.listener || listener);\n\t\t}\n\t} else if (typeof list !== 'function') {\n\t\tposition = -1;\n\n\t\tfor (i = list.length - 1; i >= 0; i--) {\n\t\t\tif (list[i] === listener || list[i].listener === listener) {\n\t\t\t\toriginalListener = list[i].listener;\n\t\t\t\tposition = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (position < 0) return this;\n\n\t\tif (position === 0) list.shift();\n\t\telse spliceOne(list, position);\n\n\t\tif (list.length === 1) events[type] = list[0];\n\n\t\tif (events.off) this.emit('off', type, originalListener || listener);\n\t}\n\n\treturn this;\n}\n\nfunction onceWrapper() {\n\tif (!this.fired) {\n\t\tthis.target.off(this.type, this.wrapFn);\n\t\tthis.fired = true;\n\t\tswitch (arguments.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this.listener.call(this.target);\n\t\t\tcase 1:\n\t\t\t\treturn this.listener.call(this.target, arguments[0]);\n\t\t\tcase 2:\n\t\t\t\treturn this.listener.call(this.target, arguments[0], arguments[1]);\n\t\t\tcase 3:\n\t\t\t\treturn this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);\n\t\t\tdefault:\n\t\t\t\tvar args = new Array(arguments.length);\n\t\t\t\tfor (var i = 0; i < args.length; ++i) args[i] = arguments[i];\n\t\t\t\tthis.listener.apply(this.target, args);\n\t\t}\n\t}\n}\n\nfunction _onceWrap(target, type, listener) {\n\tvar state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n\tvar wrapped = bind.call(onceWrapper, state);\n\twrapped.listener = listener;\n\tstate.wrapFn = wrapped;\n\treturn wrapped;\n}\n\nfunction _listeners(target, type, unwrap) {\n\tvar events = target._events;\n\n\tif (!events) return [];\n\n\tvar evlistener = events[type];\n\tif (!evlistener) return [];\n\n\tif (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n\treturn unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nfunction listenerCount(type) {\n\tvar events = this._events;\n\n\tif (events) {\n\t\tvar evlistener = events[type];\n\n\t\tif (typeof evlistener === 'function') {\n\t\t\treturn 1;\n\t\t} else if (evlistener) {\n\t\t\treturn evlistener.length;\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n\tfor (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) list[i] = list[k];\n\tlist.pop();\n}\n\nfunction arrayClone(arr, n) {\n\tvar copy = new Array(n);\n\tfor (var i = 0; i < n; ++i) copy[i] = arr[i];\n\treturn copy;\n}\n\nfunction unwrapListeners(arr) {\n\tvar ret = new Array(arr.length);\n\tfor (var i = 0; i < ret.length; ++i) {\n\t\tret[i] = arr[i].listener || arr[i];\n\t}\n\treturn ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n\tvar F = function () {};\n\tF.prototype = proto;\n\treturn new F();\n}\n\nfunction objectKeysPolyfill(obj) {\n\tvar keys = [];\n\tfor (var k in obj)\n\t\tif (Object.prototype.hasOwnProperty.call(obj, k)) {\n\t\t\tkeys.push(k);\n\t\t}\n\treturn k;\n}\n\nfunction functionBindPolyfill(context) {\n\tvar fn = this;\n\treturn function () {\n\t\treturn fn.apply(context, arguments);\n\t};\n}\n","import EventEmitter from '../util/event-emitter';\n\nexport class Context extends EventEmitter {}\n\nexport type PushConf = Partial<{\n\tdone: boolean;\n\tstubTime: number;\n\toffsetPos: number; // Represents the start byte of the pushed data relative to the entire file\n}>;\n\nexport type GlobalOptions = Partial<{\n\tdebug: boolean;\n\tdecodeCodec: boolean;\n\tconfig: PushConf;\n}>;\n\nexport interface IDemux {\n\t/**\n\t * Pipe the arrayBuffer to the demuxer.\n\t * @param buf\n\t * @param conf\n\t */\n\tpush(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\n\n\treset(): void;\n\n\tdestroy(): void;\n}\n","/**\n * @file: is.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = Object.prototype.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nexport function isObjectLike(value: any): boolean {\n\treturn !!value && typeof value == 'object';\n}\n\nexport function isEmptyObject(obj: object): boolean {\n\tfor (var prop in obj) {\n\t\tif (obj.hasOwnProperty(prop)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn JSON.stringify(obj) === JSON.stringify({});\n}\n\n/**\n * @param url\n */\nexport function isHttps(url?: string): boolean {\n\treturn /^https/gi.test(url || window.location.protocol);\n}\n\n/**\n * @param num\n */\nexport function isNumber(num: any): boolean {\n\treturn typeof num === 'number' && !isNaN(num);\n}\n\n/**\n * @param value\n */\nexport function isArrayBuffer(value: any): boolean {\n\treturn isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object arraybuffer]';\n}\n\n/**\n * @param value\n */\nexport function isUint8Array(value: any): boolean {\n\treturn isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object uint8array]';\n}\n","/**\n * @file: cache-buffer.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport { isNumber } from './is';\n\n/**\n * Cache Buffer util.\n * It's applicable for streaming data cutting and retaining the data,\n * the algorithm minimizes memory application as much as possible.\n */\n\nexport default class CacheBuffer {\n\tget byteLength(): number {\n\t\tif (!isNumber(this.byteLength_)) {\n\t\t\tlet len = 0;\n\n\t\t\tfor (let i = 0, item: Uint8Array; i < this.list_.length; i++) {\n\t\t\t\titem = this.list_[i];\n\t\t\t\tlen += item.byteLength;\n\t\t\t}\n\t\t\tthis.byteLength_ = len;\n\t\t}\n\n\t\treturn this.byteLength_;\n\t}\n\n\t/**\n\t * maybe return new allocated memory or original memory\n\t */\n\tget bytes(): Uint8Array | null {\n\t\tconst { bufferList } = this;\n\t\tlet bytes = null;\n\n\t\tif (bufferList.length > 0) {\n\t\t\tif (bufferList.length === 0) {\n\t\t\t\tbytes = bufferList[0];\n\t\t\t} else {\n\t\t\t\tbytes = this.toNewBytes();\n\t\t\t}\n\t\t}\n\n\t\treturn bytes;\n\t}\n\n\tget empty() {\n\t\treturn this.list_.length === 0;\n\t}\n\n\tget bufferList() {\n\t\treturn this.list_;\n\t}\n\n\t/**\n\t * Used to cache calculations, reduce the number of CPU calculations.\n\t * When internal data changes, the value needs to be cleared and recalculated.\n\t */\n\tprivate byteLength_: number | null;\n\n\tprivate list_: Array<Uint8Array> = [];\n\n\tclear() {\n\t\tlet len = this.list_.length;\n\t\tif (len > 0) {\n\t\t\tthis.list_.splice(0, len);\n\t\t}\n\t\tthis.byteLength_ = null;\n\t}\n\n\ttoNewBytes(): Uint8Array | null {\n\t\tlet bytes = null;\n\t\tlet tryCount: number = 0;\n\t\tlet maxTryCount: number = 50;\n\n\t\t// The following retry strategies are provided for failed memory applications\n\t\t// In terms of a better strategy, a failed memory application retry should be\n\t\t// an asynchronous process, which does not return until the application succeeds.\n\t\t// But the original design of the library is synchronous.\n\t\twhile (bytes === null) {\n\t\t\ttry {\n\t\t\t\ttryCount++;\n\t\t\t\tbytes = new Uint8Array(this.byteLength);\n\t\t\t} catch (e) {\n\t\t\t\tif (tryCount > maxTryCount) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0, offset = 0; i < this.list_.length; i++) {\n\t\t\tlet payload = this.list_[i];\n\n\t\t\tbytes.set(payload, offset);\n\t\t\toffset += payload.byteLength;\n\t\t}\n\n\t\treturn bytes;\n\t}\n\n\tappend(newBuffer: Uint8Array | CacheBuffer): void {\n\t\tif (newBuffer instanceof CacheBuffer) {\n\t\t\tthis.list_ = this.list_.concat(newBuffer.bufferList);\n\t\t} else {\n\t\t\tthis.list_.push(newBuffer);\n\t\t}\n\n\t\tthis.byteLength_ = null;\n\t}\n\n\t/**\n\t * This function cuts a complete TypedArray from CacheBuffer and retains the remainder of CacheBuffer.\n\t * The following points should be noted when using this function:\n\t * 1. If the cut needs to return the cut-out part, the cut length should be as small as possible to reduce the errors in memory application.\n\t * 2. If the cutting is only to preserve the remaining parts, the cutting size is within the total number of bytes, without considering memory applications.\n\t * @param {number} fixedLength\n\t * @param {boolean} [needCutResult] - If not, just retain the remaining parts after cutting.\n\t */\n\tcut(fixedLength: number, needCutResult: boolean = true): Uint8Array {\n\t\tlet chunk = null;\n\n\t\tif (fixedLength > 0 && !this.empty) {\n\t\t\tlet list = this.list_;\n\n\t\t\tlet offset = 0;\n\t\t\tlet loopIndex = 0;\n\n\t\t\twhile (list.length > 0) {\n\t\t\t\tlet cur = list.shift();\n\n\t\t\t\tif (loopIndex === 0) {\n\t\t\t\t\tif (cur.byteLength >= fixedLength) {\n\t\t\t\t\t\tif (needCutResult) {\n\t\t\t\t\t\t\t// Here is the key point for optimize memory alloc\n\t\t\t\t\t\t\tchunk = cur.subarray(0, fixedLength);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (cur.byteLength > fixedLength) {\n\t\t\t\t\t\t\tcur = cur.subarray(fixedLength);\n\t\t\t\t\t\t\tlist.unshift(cur);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (needCutResult) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tchunk = new Uint8Array(fixedLength);\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tthrow `alloc_memory_error@ cache buffer: ${fixedLength} ${e.message}`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tchunk.set(cur, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset += cur.byteLength;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet subLen = fixedLength - offset;\n\n\t\t\t\t\tif (cur.byteLength >= subLen) {\n\t\t\t\t\t\tif (needCutResult) {\n\t\t\t\t\t\t\tchunk.set(cur.subarray(0, subLen), offset);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcur = cur.subarray(subLen);\n\n\t\t\t\t\t\tif (cur.byteLength > 0) {\n\t\t\t\t\t\t\tlist.unshift(cur);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (needCutResult) {\n\t\t\t\t\t\t\tchunk.set(cur, offset);\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset += cur.byteLength;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tloopIndex++;\n\t\t\t}\n\n\t\t\tthis.byteLength_ = null;\n\t\t}\n\n\t\treturn chunk;\n\t}\n}\n","/**\n * @fileOverview A simple multimap template.\n */\n\ninterface MapData {\n\t[index: string]: Array<any>;\n}\n\nexport default class MultiMap {\n\tprivate map_: MapData;\n\n\tconstructor() {\n\t\tthis.map_ = {};\n\t}\n\n\t/**\n\t * Add a key, value pair to the map.\n\t * @param key\n\t * @param value\n\t */\n\tpush(key: string, value: any) {\n\t\tif (this.map_.hasOwnProperty(key)) {\n\t\t\tthis.map_[key].push(value);\n\t\t} else {\n\t\t\tthis.map_[key] = [value];\n\t\t}\n\t}\n\n\t/**\n\t * Get a list of values by key.\n\t * @param key\n\t */\n\tget(key: string): Array<any> {\n\t\tlet list = this.map_[key];\n\t\t// slice() clones the list so that it and the map can each be modified\n\t\t// without affecting the other.\n\t\treturn list ? list.slice() : null;\n\t}\n\n\t/**\n\t * Get a list of all values.\n\t */\n\tgetAll(): Array<any> {\n\t\tlet list = [];\n\t\tfor (let key in this.map_) {\n\t\t\tlist.push.apply(list, this.map_[key]);\n\t\t}\n\t\treturn list;\n\t}\n\n\t/**\n\t * Remove a specific value, if it exists.\n\t * @param key\n\t * @param value\n\t */\n\tremove(key: string, value: any): void {\n\t\tlet list = this.map_[key];\n\t\tif (list) {\n\t\t\tfor (let i = 0; i < list.length; ++i) {\n\t\t\t\tif (list[i] == value) {\n\t\t\t\t\tlist.splice(i, 1);\n\t\t\t\t\t--i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Clear all keys and values from the multimap.\n\t */\n\tclear(): void {\n\t\tthis.map_ = {};\n\t}\n\n\t/**\n\t * @param callback\n\t */\n\tforEach(callback: Function): void {\n\t\tfor (let key in this.map_) {\n\t\t\tcallback(key, this.map_[key]);\n\t\t}\n\t}\n}\n","import MultiMap from './multi-map';\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n */\nclass Binding_ {\n\ttarget: any;\n\ttype: string;\n\tlistener: Function;\n\n\t/**\n\t * @param target - The event target.\n\t * @param type - The event type.\n\t * @param listener - The event listener.\n\t */\n\tconstructor(target: any, type: string, listener: Function) {\n\t\tthis.target = target;\n\t\tthis.type = type;\n\t\tthis.listener = listener;\n\n\t\tif (this.target.addEventListener) {\n\t\t\tthis.target.addEventListener(type, listener, false);\n\t\t} else if (this.target.on) {\n\t\t\tthis.target.on(type, listener, false);\n\t\t}\n\t}\n\n\t/**\n\t * Detaches the event listener from the event target.\n\t * This does nothing if the event listener is already detached.\n\t */\n\toff() {\n\t\tif (this.target.removeEventListener) {\n\t\t\tthis.target.removeEventListener(this.type, this.listener, false);\n\t\t} else if (this.target.off) {\n\t\t\tthis.target.off(this.type, this.listener, false);\n\t\t}\n\n\t\tthis.target = null;\n\t\tthis.listener = null;\n\t}\n}\n\n/**\n * Creates a new EventManager.\n * An EventManager maintains a collection of \"event bindings\" between event targets and event listeners.\n */\nexport default class EventManager {\n\tprivate bindingMap_: MultiMap;\n\t// static Binding_: Binding;\n\n\tconstructor() {\n\t\t/**\n\t\t * Maps an event type to an array of event bindings.\n\t\t */\n\t\tthis.bindingMap_ = new MultiMap();\n\t}\n\n\t/**\n\t * Detaches all event listeners.\n\t * @override\n\t */\n\tdestroy(): void {\n\t\tthis.removeAll();\n\t\tthis.bindingMap_ = null;\n\t}\n\n\t/**\n\t * Attaches an event listener to an event target.\n\t * @param target - The event target.\n\t * @param type  - The event type.\n\t * @param listener  - The event listener.\n\t */\n\ton(target: any, type: string, listener: Function): EventManager {\n\t\tif (!this.bindingMap_) return;\n\n\t\tlet binding = new Binding_(target, type, listener);\n\t\tthis.bindingMap_.push(type, binding);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Attaches an event listener to an event target.\n\t * The listener will be removed when the first instance of the event is fired.\n\t * @param {EventTarget} target The event target.\n\t * @param {string} type The event type.\n\t * @param {function} listener The event listener.\n\t */\n\tonce(target: any, type: string, listener: Function) {\n\t\t// Install a shim listener that will stop listening after the first event.\n\t\tthis.on(\n\t\t\ttarget,\n\t\t\ttype,\n\t\t\tfunction (event: any) {\n\t\t\t\t// Stop listening to this event.\n\t\t\t\tthis.off(target, type);\n\t\t\t\t// Call the original listener.\n\t\t\t\tlistener(event);\n\t\t\t}.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * Detaches an event listener from an event target.\n\t * @param {EventTarget} target The event target.\n\t * @param {string} type The event type.\n\t */\n\toff(target: any, type: string): void {\n\t\tif (!this.bindingMap_) return;\n\n\t\tlet list = this.bindingMap_.get(type) || [];\n\n\t\tfor (let i = 0; i < list.length; ++i) {\n\t\t\tlet binding = list[i];\n\n\t\t\tif (binding.target == target) {\n\t\t\t\tbinding.off();\n\t\t\t\tthis.bindingMap_.remove(type, binding);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Detaches all event listeners from all targets.\n\t */\n\tremoveAll(): void {\n\t\tif (!this.bindingMap_) return;\n\n\t\tlet list = this.bindingMap_.getAll();\n\n\t\tfor (let i = 0; i < list.length; ++i) {\n\t\t\tlist[i].off();\n\t\t}\n\n\t\tthis.bindingMap_.clear();\n\t}\n}\n\n// EventManager.Binding_ = Binding;\n","/**\n * @file: global.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * @description provide global scope.\n */\nlet global: any;\n\n// see https://stackoverflow.com/a/11237259/589493\nif (typeof window === 'undefined') {\n\t/* eslint-disable-next-line no-undef */\n\tglobal = self;\n} else {\n\tglobal = window;\n}\n\nexport default global;\n","/**\n * @file: logger.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * utils - logger\n */\n/* global WorkerGlobalScope */\nimport global from './global';\nimport EventEmitter from './event-emitter';\n\nlet console = global.console;\nconst isWorker =\n\ttypeof WorkerGlobalScope !== 'undefined' &&\n\tself instanceof WorkerGlobalScope &&\n\ttypeof importScripts != 'undefined';\nconst prefix = '>>>';\n\nclass Logger extends EventEmitter {\n\tprivate MSG_NAME: string;\n\tprivate _enable: boolean;\n\n\tget enable() {\n\t\treturn this._enable;\n\t}\n\n\tset enable(value: boolean) {\n\t\tthis._enable = value;\n\n\t\tthis.MSG_NAME = '__log__';\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._enable = false;\n\t}\n\n\tlog(...restArgs: any) {\n\t\tif (isWorker) {\n\t\t\tlogger.emit(this.MSG_NAME, 'log', [...arguments].join(''));\n\t\t} else {\n\t\t\tif (this._enable) {\n\t\t\t\tconsole.log.call(console, prefix, ...arguments);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(...restArgs: any) {\n\t\tif (isWorker) {\n\t\t\tlogger.emit(this.MSG_NAME, 'debug', [...arguments].join(''));\n\t\t} else {\n\t\t\tif (this._enable && console.debug) {\n\t\t\t\tconsole.debug.call(console, prefix, ...arguments);\n\t\t\t}\n\t\t}\n\t}\n\n\tassert(...restArgs: any) {\n\t\tif (this._enable && console.assert) {\n\t\t\tlet condition = arguments[0];\n\t\t\tlet sliceArgs = Array.prototype.slice.call(arguments, 1);\n\t\t\tsliceArgs.unshift(prefix);\n\n\t\t\tconsole.assert.call(console, condition, ...sliceArgs);\n\t\t}\n\t}\n\n\twarn(...restArgs: any) {\n\t\tif (isWorker) {\n\t\t\tlogger.emit(this.MSG_NAME, 'warn', [...arguments].join(''));\n\t\t} else {\n\t\t\tif (this._enable) {\n\t\t\t\tconsole.warn.call(console, prefix, ...arguments);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(...restArgs: any) {\n\t\tif (isWorker) {\n\t\t\tlogger.emit(this.MSG_NAME, 'error', [...arguments].join(''));\n\t\t} else {\n\t\t\tif (this._enable) {\n\t\t\t\tconsole.error.call(console, prefix, ...arguments);\n\t\t\t}\n\t\t}\n\t}\n}\n\nlet logger = new Logger();\n\n/**\n * @param {Object} obj - custom logger\n */\nexport function setLogger(obj) {\n\tconsole = obj;\n}\n\nexport function getLogger() {\n\treturn logger;\n}\n\nexport default logger;\n","/**\n * @file: stream.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * simple stream implementation.\n */\n\nimport { PushConf } from '../types/globals';\nimport EventEmitter from './event-emitter';\n\nclass Stream extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * connect to the next pipeline stream.\n\t * @param destination\n\t */\n\tpipe(destination: Stream): Stream {\n\t\tthis.on('reset', function () {\n\t\t\tdestination.reset();\n\t\t});\n\n\t\tthis.on('data', function (data) {\n\t\t\tdestination.push(data);\n\t\t});\n\n\t\tthis.on('done', function (flushSource) {\n\t\t\tdestination.flush(flushSource);\n\t\t});\n\n\t\treturn destination;\n\t}\n\n\t/**\n\t * detaches the next pipeline stream previously attached.\n\t */\n\tunpipe(): Stream {\n\t\tthis.removeAllListeners('reset');\n\t\tthis.removeAllListeners('data');\n\t\tthis.removeAllListeners('done');\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * push data to current pipeline.\n\t * @param data\n\t */\n\tpush(data: any, conf?: PushConf): void {\n\t\tthis.emit('data', data);\n\t}\n\n\t/**\n\t * flush current pipeline.\n\t * @param flushSource\n\t */\n\tflush(flushSource: Stream): void {\n\t\tthis.emit('done', flushSource);\n\t}\n\n\treset(): void {\n\t\tthis.emit('reset');\n\t}\n}\n\nexport default Stream;\n","/**\n * @file: demuxer.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\nimport { Events } from './enum/events';\nimport { Context, GlobalOptions, IDemux, PushConf } from './types/globals';\nimport CacheBuffer from './util/cache-buffer';\nimport EventManager from './util/event-manager';\nimport { isArrayBuffer, isUint8Array } from './util/is';\nimport logger from './util/logger';\nimport Stream from './util/stream';\n\nexport default abstract class DemuxFacade extends Stream implements IDemux {\n\treadonly endStream?: Stream;\n\tprotected eventManager_: EventManager;\n\tprotected ctx_: Context;\n\tprotected options_: GlobalOptions;\n\tprotected cache_buffer_: CacheBuffer;\n\n\tprotected listenEndStream_(): void {\n\t\tthis.eventManager_ = new EventManager();\n\n\t\tthis.eventManager_\n\t\t\t.on(this.endStream, 'data', (data) => {\n\t\t\t\tthis.emit(Events.DEMUX_DATA, data);\n\t\t\t})\n\t\t\t.on(this.endStream, 'done', (data) => {\n\t\t\t\tthis.emit(Events.DONE, data);\n\t\t\t})\n\t\t\t.on(this.ctx_, 'error', (data) => {\n\t\t\t\tthis.emit(Events.ERROR, data);\n\t\t\t});\n\t}\n\n\tconstructor(options: GlobalOptions = {}) {\n\t\tsuper();\n\n\t\tif (options.debug) {\n\t\t\tlogger.enable = true;\n\t\t}\n\n\t\tthis.ctx_ = new Context();\n\t\tthis.options_ = options;\n\t\tthis.cache_buffer_ = new CacheBuffer();\n\t}\n\n\t/**\n\t * Pipe the arrayBuffer to the demuxer.\n\t * @param buf\n\t * @param conf\n\t */\n\tabstract push(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\n\n\t/**\n\t * transfer data to Uint8Array\n\t * @param buf\n\t */\n\tprotected constraintPushData_(buf: ArrayBuffer | Uint8Array): Uint8Array | null {\n\t\tlet newBuf = null;\n\t\tif (!isArrayBuffer(buf) && !isUint8Array(buf)) {\n\t\t\treturn newBuf;\n\t\t}\n\n\t\tif (isArrayBuffer(buf)) {\n\t\t\tnewBuf = new Uint8Array(buf);\n\t\t}\n\n\t\treturn newBuf;\n\t}\n\n\treset(): void {}\n\n\tdestroy(): void {\n\t\tthis.unpipe();\n\t\tthis.endStream.unpipe();\n\n\t\tthis.eventManager_.removeAll();\n\t}\n}\n","/**\n * @file: mux-error-code.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * @readonly\n * @enum {Number}\n */\nenum codes {\n\tWORKER_EXCEPTION = 0,\n\tWORKER_MSG_EXCEPTION,\n\tTS_SYNC_BYTE,\n\tFLV_HEAD_SIGNATURE,\n\tFLV_NOT_EXPECTED_ADJACENT_DATA\n}\n\nexport default codes;\n","/**\n * @file: created at Wednesday, 13th May 2020 4:15:40 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nexport const HEAD_LEN = 9;\nexport const MIN_BODY_LEN = 4;\nexport const PREVIOUS_TAG_SIZE = 4;\nexport const MIN_TAG_LEN = PREVIOUS_TAG_SIZE;\n\nexport enum FLVParseStage {\n\tHEAD = 0,\n\tBODY\n}\n","/**\n * @file: dv.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Bit buffer reader like DataView.\n */\n\nfunction read(buf: ArrayBuffer | Uint8Array): DataView {\n\tlet byteOffset = 0;\n\n\tif (ArrayBuffer.isView(buf)) {\n\t\tbyteOffset = buf.byteOffset;\n\t\tbuf = buf.buffer;\n\t}\n\n\treturn new DataView(buf, byteOffset);\n}\n\nclass DataViewReader {\n\tconstructor() {}\n\n\t/**\n\t * Gets an unsigned 8-bit integer (unsigned byte).\n\t * @param buffer\n\t * @param byteOffset    The offset, in byte, from the start of the view where to read the data.\n\t * @returns {number}    An unsigned 8-bit integer number.\n\t */\n\treadUint8(buffer: ArrayBuffer | Uint8Array, byteOffset: number): number {\n\t\treturn read(buffer).getUint8(byteOffset);\n\t}\n\n\t/**\n\t * Gets an unsigned 16-bit integer (unsigned long).\n\t * @param buffer\n\t * @param byteOffset     The offset, in byte, from the start of the view where to read the data.\n\t * @param littleEndian   Indicates whether the 16-bit int is stored in little- or big-endian format.\n\t * @returns {number}     An unsigned 16-bit integer number.\n\t */\n\treadUint16(buffer: ArrayBuffer | Uint8Array, byteOffset, littleEndian: boolean = false): number {\n\t\treturn read(buffer).getUint16(byteOffset, littleEndian);\n\t}\n\n\t/**\n\t * Gets an unsigned 32-bit integer (unsigned long).\n\t * @param buffer\n\t * @param byteOffset        The offset, in byte, from the start of the view where to read the data.\n\t * @param littleEndian      Indicates whether the 32-bit int is stored in little- or big-endian format.\n\t * @returns {number}        An unsigned 32-bit integer number.\n\t */\n\treadUint32(buffer: ArrayBuffer | Uint8Array, byteOffset: number, littleEndian: boolean = false): number {\n\t\treturn read(buffer).getUint32(byteOffset, littleEndian);\n\t}\n}\n\nexport default DataViewReader;\n","/**\n * @file: created at Saturday, 23rd May 2020 11:46:18 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nenum FlvTagTypes {\n\tSCRIPT_DATA = 18,\n\tVIDEO = 9,\n\tAUDIO = 8\n}\n\nexport default FlvTagTypes;\n","/**\n * @file: tag.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * tag structure.\n */\nimport DataViewReader from '../../util/dv';\nimport FlvTagTypes from '../../enum/flv-tag-types';\n\n/**\n * @extends DataViewReader\n */\nexport default class FlvTag extends DataViewReader {\n\ttagType: number;\n\tdataSize: number;\n\ttimestamp: number;\n\ttimestampExtended: number;\n\tstreamId: number;\n\tpayload: Uint8Array;\n\tpreviousTagSize: number;\n\ttotalSize: number;\n\n\t/**\n\t * @param buffer\n\t */\n\tconstructor(buffer: Uint8Array) {\n\t\tsuper();\n\n\t\tthis.tagType = buffer[0];\n\n\t\tthis.dataSize = this.readUint32(buffer, 0) & 0x00ffffff;\n\n\t\tlet timestamp = this.readUint32(buffer, 3) & 0x00ffffff; // the lower 24 bits of the timestamp\n\t\tlet timestampExtended = buffer[7]; // This field represents the upper 8 bits of timestamp\n\n\t\tthis.timestamp = (timestampExtended << 24) + timestamp;\n\n\t\tthis.streamId = this.readUint32(buffer, 8) & 0x00ffffff; // Always 0\n\n\t\tthis.payload = buffer.subarray(11, 11 + this.dataSize);\n\n\t\tthis.previousTagSize = this.readUint32(buffer, 11 + this.dataSize);\n\n\t\tthis.totalSize = this.previousTagSize + 4;\n\t}\n\n\tvalid(): boolean {\n\t\tlet { tagType, dataSize, previousTagSize } = this;\n\t\treturn (\n\t\t\tpreviousTagSize === 11 + dataSize &&\n\t\t\t(tagType === FlvTagTypes.SCRIPT_DATA || tagType === FlvTagTypes.VIDEO || tagType === FlvTagTypes.AUDIO)\n\t\t);\n\t}\n}\n","/**\n * @file: elementary.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport muxErrorCode from '../../mux-error-code';\nimport { Context, GlobalOptions } from '../../types/globals';\nimport CacheBuffer from '../../util/cache-buffer';\nimport logger from '../../util/logger';\nimport Stream from '../../util/stream';\nimport { HEAD_LEN, MIN_TAG_LEN, PREVIOUS_TAG_SIZE } from '../flv-const';\nimport FlvTag from '../structs/flv-tag';\nimport AVContext from '../types/av-context';\n\nclass BodyStream extends Stream {\n\tprivate ctx_: Context;\n\tprivate flv_: AVContext;\n\tprivate options_: GlobalOptions;\n\tprivate cache_buffer_: CacheBuffer;\n\n\tconstructor(ctx: Context, flvCtx: AVContext, options: GlobalOptions = {}) {\n\t\tsuper();\n\n\t\tthis.ctx_ = ctx;\n\t\tthis.flv_ = flvCtx;\n\t\tthis.options_ = options;\n\t\tthis.cache_buffer_ = new CacheBuffer();\n\t}\n\n\t/**\n\t * Push a body buffer\n\t */\n\tpush(bodyBuffer: Uint8Array): void {\n\t\tconst { ctx_, flv_, cache_buffer_ } = this;\n\t\tlet buffer: Uint8Array | null;\n\n\t\tcache_buffer_.append(bodyBuffer);\n\n\t\tif (flv_.pos === HEAD_LEN) {\n\t\t\tif (cache_buffer_.byteLength > PREVIOUS_TAG_SIZE + MIN_TAG_LEN) {\n\t\t\t\t// drop PreviousTagSize0\n\t\t\t\tcache_buffer_.cut(PREVIOUS_TAG_SIZE);\n\n\t\t\t\tflv_.pos += PREVIOUS_TAG_SIZE;\n\t\t\t}\n\t\t}\n\n\t\twhile (cache_buffer_.byteLength > 0) {\n\t\t\t// buffer start with tag\n\t\t\tbuffer = cache_buffer_.bytes;\n\n\t\t\tif (buffer.length >= MIN_TAG_LEN) {\n\t\t\t\tlet tagHeadSize = 11; // 10 is tag header\n\t\t\t\tlet tagPayloadSize = (buffer[1] << 16) + (buffer[2] << 8) + buffer[3];\n\t\t\t\tlet previousTagSize = 4;\n\t\t\t\tlet tagSize = tagHeadSize + tagPayloadSize + previousTagSize;\n\n\t\t\t\tif (buffer.length >= tagSize) {\n\t\t\t\t\tlet tagBuffer = cache_buffer_.cut(tagSize);\n\t\t\t\t\tlet tag = new FlvTag(tagBuffer);\n\n\t\t\t\t\tif (tag.valid()) {\n\t\t\t\t\t\tthis.emit('data', tag);\n\t\t\t\t\t\tflv_.pos += tag.totalSize;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet errMsg = `Encounter invalid flv tag, tag_length(${tag.previousTagSize}), cache_length(${cache_buffer_.byteLength}), data(${tagBuffer})`;\n\n\t\t\t\t\t\tlogger.error(errMsg);\n\n\t\t\t\t\t\tthis.reset();\n\n\t\t\t\t\t\tctx_.emit('error', muxErrorCode.TS_SYNC_BYTE, errMsg);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treset(): void {\n\t\tconst { cache_buffer_ } = this;\n\n\t\tcache_buffer_.clear();\n\t\tthis.emit('reset');\n\t}\n}\n\nexport default BodyStream;\n","/**\n * @file: created at Sunday, 24th May 2020 2:21:46 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\n\nexport function AMFdeSerialize(data: Uint8Array) {\n\tlet result = {};\n\tlet item = parseData_(data);\n\tresult[item.key] = item.value;\n\treturn result;\n}\n\nfunction parseData_(source: Uint8Array, isString = false) {\n\tlet key = null,\n\t\tvalue = null,\n\t\tdata = null;\n\n\tif (isString) {\n\t\ttry {\n\t\t\tdata = new Uint8Array(source.length + 1);\n\t\t} catch (e) {\n\t\t\tlogger.error(`flv parseData failed: ${e.message}`);\n\t\t}\n\t\tdata[0] = 2;\n\t\tdata.set(source, 1, source.length);\n\t} else {\n\t\tdata = source;\n\t}\n\tkey = deSerialize_(data);\n\tif (isString) {\n\t\tkey.valueLength -= 1;\n\t}\n\tlet temp = source.subarray(key.valueLength, source.byteLength);\n\tvalue = deSerialize_(temp);\n\n\treturn {\n\t\tkey: key.value,\n\t\tvalue: value.value,\n\t\tvalueLength: key.valueLength + value.valueLength\n\t};\n}\n\ntype SerializeResult = Partial<{\n\tvalue: any;\n\tvalueLength: number;\n}>;\n\nfunction deSerialize_(data: Uint8Array) {\n\tlet result: SerializeResult = {};\n\tlet valueLength = 0;\n\tlet a = new DataViewReader();\n\n\tswitch (data[0]) {\n\t\tcase 0:\n\t\t\tvalueLength = 8;\n\t\t\tresult.value = uint8ToDouble_(data.subarray(1, 9));\n\t\t\tresult.valueLength = 1 + valueLength;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tvalueLength = 1;\n\t\t\tresult.value = data[1] !== 0;\n\t\t\tresult.valueLength = 1 + valueLength;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tvalueLength = (data[1] << 8) | data[2];\n\t\t\tresult.value = uint8ToStr_(data.subarray(3, 3 + valueLength));\n\t\t\tresult.valueLength = 1 + 2 + valueLength;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tvalueLength = 1;\n\t\t\tresult.value = {};\n\t\t\twhile (data[valueLength] != 0x00 || data[valueLength + 1] != 0x00 || data[valueLength + 2] != 0x09) {\n\t\t\t\tlet objData = data.subarray(valueLength, data.byteLength);\n\t\t\t\tlet item = parseData_(objData, true);\n\t\t\t\tresult.value[item.key] = item.value;\n\t\t\t\tvalueLength += item.valueLength;\n\t\t\t\tobjData = null;\n\t\t\t}\n\t\t\tvalueLength += 3;\n\t\t\tresult.valueLength = valueLength;\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tvalueLength = (data[1] << 8) | data[2];\n\t\t\tresult.value = uint8ToStr_(data.subarray(3, 3 + valueLength));\n\t\t\tresult.valueLength = 1 + 2 + valueLength;\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tresult.value = null;\n\t\t\tvalueLength = 1;\n\t\t\tresult.valueLength = valueLength;\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tresult.value = undefined;\n\t\t\tvalueLength = 1;\n\t\t\tresult.valueLength = valueLength;\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\tresult.value = a.readUint16(data, 1);\n\t\t\tvalueLength = 2 + 1;\n\t\t\tresult.valueLength = valueLength;\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\t{\n\t\t\t\tlet arrLength = (data[1] << 24) | (data[2] << 16) | (data[3] << 8) | data[4];\n\t\t\t\tvalueLength = 1 + 4;\n\t\t\t\tresult.value = {};\n\t\t\t\tfor (let count = 0; count < arrLength; count++) {\n\t\t\t\t\tlet itemData = data.subarray(valueLength, data.byteLength);\n\t\t\t\t\tlet item2 = parseData_(itemData, true);\n\t\t\t\t\tresult.value[item2.key] = item2.value;\n\t\t\t\t\tvalueLength += item2.valueLength;\n\t\t\t\t}\n\t\t\t\tvalueLength += 3;\n\t\t\t\tresult.valueLength = valueLength;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\tbreak;\n\t\tcase 10:\n\t\t\t{\n\t\t\t\tlet arr = [];\n\t\t\t\tlet arrLength2 = a.readUint32(data, 1);\n\t\t\t\tfor (let i = 0; i < arrLength2; i++) {\n\t\t\t\t\tlet objData2 = data.subarray(i * 9 + 4 + 1, data.byteLength);\n\t\t\t\t\tarr.push(deSerialize_(objData2).value);\n\t\t\t\t}\n\t\t\t\tresult.value = arr;\n\t\t\t\tvalueLength = arr.length * 9 + 4 + 1;\n\t\t\t\tresult.valueLength = valueLength;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 11:\n\t\t\tresult.value = uint8ToDouble_(data.subarray(0, 8));\n\t\t\tvalueLength = 8 + 1 + 2;\n\t\t\tresult.valueLength = valueLength;\n\t\t\tbreak;\n\t\tcase 12:\n\t\t\tvalueLength = (data[1] << 24) | (data[2] << 16) | (data[3] << 8) | data[4];\n\t\t\tresult.value = uint8ToStr_(data.subarray(5, 5 + valueLength));\n\t\t\tresult.valueLength = 1 + 4 + valueLength;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n\ta = null;\n\treturn result;\n}\n\nfunction uint8ToStr_(data: Uint8Array) {\n\treturn String.fromCharCode.apply(null, data);\n}\n\nfunction uint8ToDouble_(data: Uint8Array) {\n\tlet temp = new Uint8Array(data);\n\tlet dv = new DataView(temp.buffer);\n\tlet str = dv.getFloat64(0);\n\tdv = null;\n\ttemp = null;\n\treturn str;\n}\n","/**\n * @file: created at Saturday, 9th May 2020 4:38:35 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport { AudioSpecificConfig } from '../../codec/aac/aac';\nimport { AVCDecoderConfigurationRecord } from '../../codec/avc';\nimport Stream from '../../util/stream';\nimport { FLVParseStage } from '../flv-const';\n\nexport enum AudioSoundFormat {\n\tAAC = 10\n}\n\nexport enum AudioSoundType {\n\tMONO = 0,\n\tSTEREO = 1 // For AAC: always 1\n}\n\nexport default class AVContext extends Stream {\n\tstage: FLVParseStage;\n\tpos: number = 0; // parse byte position relative to flv first byte;\n\n\tversion: number;\n\thasAudio: boolean;\n\thasVideo: boolean;\n\n\tkeyframeTimes: number[];\n\tkeyframeFilePositions: number[];\n\n\tdecoderConfigurationRecord: AVCDecoderConfigurationRecord;\n\taudioSpecificConfig: AudioSpecificConfig;\n\n\t// const AVClass *class; ///< Class for private options.\n\t// int trust_metadata;   ///< configure streams according onMetaData\n\t// int trust_datasize;   ///< trust data size of FLVTag\n\t// int dump_full_metadata;   ///< Dump full metadata of the onMetadata\n\t// int wrong_dts;        ///< wrong dts due to negative cts\n\t// uint8_t *new_extradata[FLV_STREAM_TYPE_NB];\n\t// int new_extradata_size[FLV_STREAM_TYPE_NB];\n\t// int last_sample_rate;\n\t// int last_channels;\n\t// struct {\n\t//     int64_t dts;\n\t//     int64_t pos;\n\t// } validate_index[2];\n\t// int validate_next;\n\t// int validate_count;\n\t// int searched_for_end;\n\t// uint8_t resync_buffer[2*RESYNC_BUFFER_SIZE];\n\t// int broken_sizes;\n\t// int sum_flv_tag_size;\n\t// int last_keyframe_stream_index;\n\t// int keyframe_count;\n\t// int64_t video_bit_rate;\n\t// int64_t audio_bit_rate;\n\t// int64_t *keyframe_times;\n\t// int64_t *keyframe_filepositions;\n\t// int missing_streams;\n\t// AVRational framerate;\n\t// int64_t last_ts;\n\t// int64_t time_offset;\n\t// int64_t time_pos;\n\n\t// videoScriptData\n}\n","/**\n * @file: created at Saturday, 9th May 2020 11:13:19 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n// The AudioSpecificConfig is explained in ISO 14496-3.\nexport interface AudioSpecificConfig {\n\taudioObjectType: number;\n\tsampleCount: number;\n\tchannelConfiguration: number;\n\tsampleRate: number;\n\tsamplingFrequencyIndex: number;\n\t// assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n}\n\nexport interface AACFrame extends Omit<AudioSpecificConfig, 'channelConfiguration'> {\n\tpts: number;\n\tdts: number;\n\tdata: Uint8Array;\n\tchannelCount: number; // equal to channelConfiguration\n\tsampleSize: number;\n}\n\nexport const AAC_SAMPLING_FREQUENCIES = [\n\t96000,\n\t88200,\n\t64000,\n\t48000,\n\t44100,\n\t32000,\n\t24000,\n\t22050,\n\t16000,\n\t12000,\n\t11025,\n\t8000,\n\t7350\n];\n","/**\n * @file: created at Monday, 25th May 2020 12:36:52 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * AVCVideoPacket structure.\n */\nimport { AudioSpecificConfig, AAC_SAMPLING_FREQUENCIES } from '../../codec/aac/aac';\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\n\n// 0: AAC sequence header\n// 1: AAC raw\nexport enum AACPacketType {\n\tSEQUENCE_HEAD = 0, // 0 : AVCDecoderConfigurationRecord（AVC sequence header）\n\tAAC_RAW = 1 // 1 : One or more NALUs (Full frames are required)\n}\n\n/**\n * ISO/IEC 14496-3 1.6.2.1 AudioSpecificConfig\n * @param buffer\n */\nexport function parseAudioSpecificConfig(buffer: Uint8Array): AudioSpecificConfig {\n\tlet LOG = 'AudioSpecificConfig';\n\n\t// ISO/IEC 14496-3 Table 1.16 – Syntax of GetAudioObjectType()\n\tlet audioObjectType = buffer[0] >> 3;\n\tif (audioObjectType == 31) {\n\t\tlogger.error(`${LOG} unsupported audioObjectType`);\n\t\t// audioObjectType = 32 + audioObjectTypeExt;\n\t}\n\n\tlet samplingFrequencyIndex = ((buffer[0] & 0x7) << 1) | (buffer[1] >> 7);\n\tif (samplingFrequencyIndex === 0xf) {\n\t\tlogger.error(`${LOG} unsupported samplingFrequencyIndex`);\n\t}\n\tlet channelConfiguration = (buffer[1] >> 3) & 0x0f;\n\tif (channelConfiguration < 0 || channelConfiguration >= 8) {\n\t\tlogger.error('${LOG} unsupported channel configuration');\n\t}\n\n\tlet sampleCount = ((buffer[1] >> 2) & 0x01) == 0 ? 1024 : 1024;\n\tlet sampleRate = AAC_SAMPLING_FREQUENCIES[samplingFrequencyIndex];\n\n\treturn {\n\t\taudioObjectType,\n\t\tsamplingFrequencyIndex,\n\t\tchannelConfiguration,\n\t\tsampleCount,\n\t\tsampleRate\n\t};\n}\n\n/**\n * @extends DataViewReader\n */\nexport default class AACAudioData extends DataViewReader {\n\tdts: number;\n\tpts: number;\n\taacPacketType: AACPacketType;\n\tpayload: Uint8Array;\n\taudioSpecificConfig?: AudioSpecificConfig;\n\n\t/**\n\t * @param buffer\n\t */\n\tconstructor(buffer: Uint8Array, timestamp: number) {\n\t\tsuper();\n\n\t\tthis.dts = timestamp;\n\t\tthis.pts = timestamp;\n\n\t\tthis.aacPacketType = buffer[0];\n\t\tthis.payload = buffer.subarray(1);\n\n\t\tif (this.aacPacketType === 0) {\n\t\t\tthis.audioSpecificConfig = parseAudioSpecificConfig(this.payload);\n\t\t}\n\t}\n}\n","/**\n * @file: created at Monday, 25th May 2020 2:51:52 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * audio data structure.\n */\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\nimport { AudioSoundFormat, AudioSoundType } from '../types/av-context';\nimport AACAudioData from './flv-tag-aac-audio-data';\n\n// 0 = Linear PCM, platform endian\n// 1 = ADPCM\n// 2 = MP3\n// 3 = Linear PCM, little endian\n// 4 = Nellymoser 16-kHz mono\n// 5 = Nellymoser 8-kHz mono\n// 6 = Nellymoser\n// 7 = G.711 A-law logarithmic PCM 8 = G.711 mu-law logarithmic PCM 9 = reserved\n// 10 = AAC\n// 11 = Speex\n// 14 = MP3 8-Khz\n// 15 = Device-specific sound\n\n/**\n * @extends DataViewReader\n */\nexport default class FlvTagAudioData extends DataViewReader {\n\tsoundFormat: AudioSoundFormat;\n\tsoundRate: number;\n\tsampleSize: number; // Size of each sample\n\tsoundType: AudioSoundType;\n\tsoundData: AACAudioData;\n\n\t/**\n\t * @param buffer\n\t */\n\tconstructor(buffer: Uint8Array, timestamp: number) {\n\t\tsuper();\n\n\t\tthis.soundFormat = (buffer[0] & 0xf0) >> 4;\n\t\tthis.soundRate = (buffer[0] & 0x0c) >> 2;\n\n\t\tlet soundSize = (buffer[0] & 0x02) >> 1;\n\n\t\tswitch (soundSize) {\n\t\t\tcase 0:\n\t\t\t\tthis.sampleSize = 8; // bit\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.sampleSize = 16; // bit\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.soundType = buffer[0] & 1;\n\n\t\tswitch (this.soundFormat) {\n\t\t\tcase AudioSoundFormat.AAC:\n\t\t\t\tthis.soundData = new AACAudioData(buffer.subarray(1), timestamp);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.error(`flv tag audioData encounter unknown soundFormat ${this.soundFormat}`);\n\t\t}\n\t}\n}\n","/**\n * @file: ep3b.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * discard the emulation_prevention_three_byte\n * @param data\n */\nexport default function discardEP3B(data: Uint8Array): Uint8Array {\n\tlet length = data.byteLength,\n\t\temulationPreventionBytesPositions = [],\n\t\ti = 1,\n\t\tnewLength: number,\n\t\tnewData = new Uint8Array(0);\n\n\t// Find all `Emulation Prevention Bytes`\n\twhile (i < length - 2) {\n\t\tif (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n\t\t\temulationPreventionBytesPositions.push(i + 2);\n\t\t\ti += 2;\n\t\t} else {\n\t\t\ti++;\n\t\t}\n\t}\n\n\t// If no Emulation Prevention Bytes were found just return the original\n\t// array\n\tif (emulationPreventionBytesPositions.length === 0) {\n\t\treturn data;\n\t}\n\n\t// Create a new array to hold the NAL unit data\n\tnewLength = length - emulationPreventionBytesPositions.length;\n\n\ttry {\n\t\tnewData = new Uint8Array(newLength);\n\t} catch (e) {\n\t\tthrow `epsb alloc mem error ${newLength}`;\n\t}\n\tlet sourceIndex = 0;\n\n\tfor (i = 0; i < newLength; sourceIndex++, i++) {\n\t\tif (sourceIndex === emulationPreventionBytesPositions[0]) {\n\t\t\t// Skip this byte\n\t\t\tsourceIndex++;\n\t\t\t// Remove this position index\n\t\t\temulationPreventionBytesPositions.shift();\n\t\t}\n\t\tnewData[i] = data[sourceIndex];\n\t}\n\n\treturn newData;\n}\n","/**\n * @file: exp-golumb.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * exp golumb algorithm.\n * codeNum = 2leadingZeroBits – 1 + read_bits( leadingZeroBits )\n * @see https://en.wikipedia.org/wiki/Exponential-Golomb_coding\n */\n\n/**\n * read n bit.\n * @param buffer\n * @param bitOffset\n * @param length\n * @private\n */\nexport function readBit(buffer: Uint8Array, bitOffset: number = 0, length: number = 1): number {\n\tlet startByte = 0;\n\tlet startByteBitPos = 0;\n\tlet val = 0;\n\tlet bitStr = '',\n\t\tbitVal = 0;\n\n\tfor (let j = bitOffset; j < bitOffset + length; j++) {\n\t\tstartByte = Math.floor(j / 8);\n\t\tstartByteBitPos = 7 - (j % 8);\n\t\tbitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\n\n\t\tbitStr += bitVal;\n\t}\n\n\tval = parseInt(bitStr, 2);\n\n\treturn val;\n}\n\n/**\n * read 1 byte.\n * @param buffer\n * @param bitOffset\n */\nexport function readByte(buffer: Uint8Array, bitOffset: number = 0) {\n\treturn readBit(buffer, bitOffset, 8);\n}\n\n/**\n * Unsigned Integer Exp-Golomb Coded.\n * @param buffer\n * @param bitOffset\n */\nexport function readUEV(buffer: Uint8Array, bitOffset: number = 0) {\n\tlet leadingZeros = [];\n\tlet bitLength = buffer.byteLength * 8;\n\tlet readBit1 = false;\n\tlet startByte = 0;\n\tlet startByteBitPos = 0;\n\tlet bitVal = 0;\n\tlet value = '';\n\n\t// 1. 计算 leadingZeros\n\tfor (let i = bitOffset; i < bitLength; i++) {\n\t\tstartByte = Math.floor(i / 8);\n\t\tstartByteBitPos = 7 - (i % 8);\n\n\t\tbitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\n\n\t\tif (!readBit1) {\n\t\t\tif (bitVal === 0) {\n\t\t\t\tleadingZeros.push(0);\n\t\t\t} else {\n\t\t\t\treadBit1 = true;\n\t\t\t\tbitOffset = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tlet codeNumLength = leadingZeros.length + 1;\n\n\t// 2. 计算有效位数值\n\tfor (let j = bitOffset; j < bitOffset + codeNumLength; j++) {\n\t\tstartByte = Math.floor(j / 8);\n\t\tstartByteBitPos = 7 - (j % 8);\n\t\tbitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\n\n\t\tvalue += bitVal;\n\t}\n\n\treturn {\n\t\tbitLength: leadingZeros.length + codeNumLength,\n\t\tvalue: parseInt(value, 2) - 1\n\t};\n}\n\n/**\n * Signed Integer Exp-Golomb Coded.\n * @param buffer\n * @param bitOffset\n */\nexport function readSEV(buffer: Uint8Array, bitOffset: number = 0) {\n\tlet uev = readUEV(buffer, bitOffset);\n\tlet codeNum = uev.value;\n\n\tlet signedValue = Math.pow(-1, codeNum + 1) * Math.ceil(codeNum / 2);\n\n\treturn {\n\t\tbitLength: uev.bitLength,\n\t\tvalue: signedValue\n\t};\n}\n\nexport default {\n\treadUEV,\n\treadSEV,\n\treadBit,\n\treadByte\n};\n","/**\n * @file: sps.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport ExpGolomb from '../../util/exp-golumb';\n\nlet bitOffset = 0;\n\nexport type SPSProps = {\n\tprofile_idc: number;\n\tprofile_compatibility: number;\n\tlevel_idc: number;\n\tsps_id: number;\n\tlog2_max_frame_num_minus4: number;\n\tpic_order_cnt_type: number;\n\tlog2_max_pic_order_cnt_lsb_minus4: number;\n\n\twidth: number;\n\theight: number;\n\n\tpixelRatio: [number, number];\n\tpayload: Uint8Array;\n\n\tvideo_format: number;\n\n\tfps: number;\n\tfixedFPS: boolean;\n};\n\n/**\n * 7.3.2.1.1.1 Scaling list syntax\n * @param scalingList\n * @param size\n */\nfunction scaling_list(scalingList, size) {\n\tlet lastScale = 8;\n\tlet nextScale = 8;\n\tlet delta_scale;\n\n\tfor (var j = 0; j < size; j++) {\n\t\tif (nextScale != 0) {\n\t\t\tdelta_scale = ExpGolomb.readUEV(scalingList, bitOffset);\n\t\t\tbitOffset += delta_scale.bitLength;\n\n\t\t\tnextScale = (lastScale + delta_scale.value + 256) % 256;\n\t\t}\n\n\t\tlastScale = scalingList[j];\n\t}\n}\n\n/**\n * decode (SPS)Sequence parameter set\n * @param payload\n */\nexport function decodeSPS(payload: Uint8Array): SPSProps {\n\tbitOffset = 0;\n\n\tlet profile_idc = payload[0];\n\tlet profile_compatibility = payload[1];\n\tlet level_idc = payload[2];\n\tlet golombBuffer = payload.subarray(3);\n\tlet separate_colour_plane_flag = 0,\n\t\tqpprime_y_zero_transform_bypass_flag = 0,\n\t\tseq_scaling_matrix_present_flag = 0;\n\tlet lmpoclmUEV;\n\tlet delta_pic_order_always_zero_flag = 0,\n\t\tofnrpSEV,\n\t\tofttbfSEV,\n\t\tnrfipoccUEV;\n\tlet pixelRatio: [number, number] = [1, 1],\n\t\tpixelScale = 1;\n\tlet video_format: number;\n\tlet fps = 0,\n\t\tnum_units_in_tick: number,\n\t\ttime_scale: number,\n\t\tfixed_frame_rate_flag: boolean = true;\n\n\t// seq_parameter_set_id\n\tlet spsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += spsUEV.bitLength;\n\n\tif (\n\t\tprofile_idc == 100 ||\n\t\tprofile_idc == 110 ||\n\t\tprofile_idc == 122 ||\n\t\tprofile_idc == 244 ||\n\t\tprofile_idc == 44 ||\n\t\tprofile_idc == 83 ||\n\t\tprofile_idc == 86 ||\n\t\tprofile_idc == 118 ||\n\t\tprofile_idc == 128\n\t) {\n\t\t// chroma_format_idc\n\t\tlet chromaFIUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += chromaFIUEV.bitLength;\n\n\t\tif (chromaFIUEV.value == 3) {\n\t\t\t// separate_colour_plane_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\t\tbitOffset += 1;\n\t\t}\n\n\t\t// bit_depth_luma_minus8\n\t\tlet bitdlmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += bitdlmUEV.bitLength;\n\n\t\t// bit_depth_chroma_minus8\n\t\tlet bitdcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += bitdcmUEV.bitLength;\n\n\t\t// qpprime_y_zero_transform_bypass_flag\n\t\t// qpprime_y_zero_transform_bypass_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\t// seq_scaling_matrix_present_flag\n\t\tseq_scaling_matrix_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\tif (seq_scaling_matrix_present_flag) {\n\t\t\tfor (let i = 0; i < (chromaFIUEV.value != 3 ? 8 : 12); i++) {\n\t\t\t\tlet seq_scaling_list_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\t\t\tbitOffset += 1;\n\n\t\t\t\tif (seq_scaling_list_present_flag) {\n\t\t\t\t\tif (i < 6) {\n\t\t\t\t\t\tscaling_list(golombBuffer, 16);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscaling_list(golombBuffer, 64);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// log2_max_frame_num_minus4\n\tlet lmfnmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += lmfnmUEV.bitLength;\n\n\t// pic_order_cnt_type\n\tlet poctUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tlet pic_order_cnt_type = poctUEV.value;\n\tbitOffset += poctUEV.bitLength;\n\n\tif (pic_order_cnt_type === 0) {\n\t\t// log2_max_pic_order_cnt_lsb_minus4\n\t\tlmpoclmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += lmpoclmUEV.bitLength;\n\t} else if (pic_order_cnt_type === 1) {\n\t\t// delta_pic_order_always_zero_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\t// offset_for_non_ref_pic\n\t\tofnrpSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n\t\tbitOffset += ofnrpSEV.bitLength;\n\n\t\t// offset_for_top_to_bottom_field\n\t\tofttbfSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n\t\tbitOffset += ofttbfSEV.bitLength;\n\n\t\t// num_ref_frames_in_pic_order_cnt_cycle\n\t\tnrfipoccUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += nrfipoccUEV.bitLength;\n\n\t\t// let offset_for_ref_frames = [];\n\t\tfor (let i = 0, item; i < nrfipoccUEV.value; i++) {\n\t\t\titem = ExpGolomb.readSEV(golombBuffer, bitOffset);\n\t\t\tbitOffset += item.bitLength;\n\n\t\t\t// offset_for_ref_frames.push(item);\n\t\t}\n\t}\n\n\t// max_num_ref_frames\n\t// 指定参考帧队列可能达到的最大长度，解码器依照这个句法元素的值开辟存储区，这个存储区用于存放已解码的参考帧，\n\t// H.264 规定最多可用 16 个参考帧，本句法元素的值最大为 16。值得注意的是这个长度以帧为单位，如果在场模式下，应该相应地扩展一倍\n\tlet mnrfUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += mnrfUEV.bitLength;\n\n\t// gaps_in_frame_num_value_allowed_flag\n\t// let gaps_in_frame_num_value_allowed_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\t// pic_width_in_mbs_minus1\n\tlet picWidthUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += picWidthUEV.bitLength;\n\n\t// pic_height_in_map_units_minus1\n\tlet picHeightUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += picHeightUEV.bitLength;\n\n\t// frame_mbs_only_flag\n\t// 本句法元素等于 1 时, 表示本序列中所有图像的编码模式都是帧编码；\n\t// 本句法元素等于 0 时, 表示本序列中图像的编码模式可能是帧，也可能是场或帧场自适应，某个图像具体是哪一种要由其他句法元素决定。\n\tlet frame_mbs_only_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\tif (!frame_mbs_only_flag) {\n\t\t// mb_adaptive_frame_field_flag (Unused, Unnecessary to read it.)\n\t\t// ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\t}\n\n\t// direct_8x8_inference_flag,  用于指明 B 片的直接 和 skip 模式下运动矢量的预测方法\n\t// let direct_8x8_inference_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\t// frame_cropping_flag, 用于指明解码器是否要将图像裁剪后输出，如果是的话，后面紧跟着的四个句法元素分别指出左右、上下裁剪的宽度\n\tlet frame_cropping_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\tlet cropLeft = 0,\n\t\tcropRight = 0,\n\t\tcropTop = 0,\n\t\tcropBottom = 0;\n\tif (frame_cropping_flag) {\n\t\tlet fcloUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += fcloUEV.bitLength;\n\t\tcropLeft = fcloUEV.value;\n\n\t\tlet fcroUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += fcroUEV.bitLength;\n\t\tcropRight = fcroUEV.value;\n\n\t\tlet fctoUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += fctoUEV.bitLength;\n\t\tcropTop = fctoUEV.value;\n\n\t\tlet fcboUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += fcboUEV.bitLength;\n\t\tcropBottom = fcboUEV.value;\n\t}\n\n\t// vui_parameters_present_flag\n\tlet vui_parameters_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\tif (vui_parameters_present_flag) {\n\t\t// Annex E, E.1.1 VUI parameters syntax\n\t\t// VUI 用以表征视频格式等额外信息\n\t\t// aspect_ratio, video_format\n\n\t\tlet aspect_ratio_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\tif (aspect_ratio_info_present_flag) {\n\t\t\tconst aspectRatioIdc = ExpGolomb.readByte(golombBuffer, bitOffset);\n\t\t\tbitOffset += 8;\n\n\t\t\tswitch (aspectRatioIdc) {\n\t\t\t\tcase 1:\n\t\t\t\t\tpixelRatio = [1, 1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tpixelRatio = [12, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tpixelRatio = [10, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tpixelRatio = [16, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tpixelRatio = [40, 33];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tpixelRatio = [24, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tpixelRatio = [20, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tpixelRatio = [32, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tpixelRatio = [80, 33];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 10:\n\t\t\t\t\tpixelRatio = [18, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 11:\n\t\t\t\t\tpixelRatio = [15, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 12:\n\t\t\t\t\tpixelRatio = [64, 33];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 13:\n\t\t\t\t\tpixelRatio = [160, 99];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 14:\n\t\t\t\t\tpixelRatio = [4, 3];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 15:\n\t\t\t\t\tpixelRatio = [3, 2];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 16:\n\t\t\t\t\tpixelRatio = [2, 1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 255: {\n\t\t\t\t\tlet width0 = ExpGolomb.readByte(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += 8;\n\t\t\t\t\tlet width1 = ExpGolomb.readByte(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += 8;\n\t\t\t\t\tlet height0 = ExpGolomb.readByte(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += 8;\n\t\t\t\t\tlet height1 = ExpGolomb.readByte(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += 8;\n\t\t\t\t\tpixelRatio = [(width0 << 8) | width1, (height0 << 8) | height1];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (pixelRatio) {\n\t\t\t\tpixelScale = pixelRatio[0] / pixelRatio[1];\n\t\t\t}\n\n\t\t\tif (aspectRatioIdc === 255) {\n\t\t\t\t// sar_width\n\t\t\t\tbitOffset += 16;\n\t\t\t\t// sar_height\n\t\t\t\tbitOffset += 16;\n\t\t\t}\n\t\t}\n\n\t\tlet overscan_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\tif (overscan_info_present_flag) {\n\t\t\tbitOffset += 1;\n\t\t\t// overscan_appropriate_flag;\n\t\t}\n\n\t\tlet video_signal_type_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\tif (video_signal_type_present_flag) {\n\t\t\t/*\n                Table E-2 – Meaning of video_format\n                video_format    Meaning\n                0               Component\n                1               PAL\n                2               NTSC\n                3               SECAM\n                4               MAC\n                5               Unspecified video format\n                6               Reserved\n                7               Reserved\n             */\n\t\t\tvideo_format = ExpGolomb.readBit(golombBuffer, bitOffset, 3);\n\t\t\tbitOffset += 3;\n\n\t\t\t// switch (video_format) {\n\t\t\t// }\n\n\t\t\t// let video_full_range_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\t\tbitOffset += 1;\n\n\t\t\tlet colour_description_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\t\tbitOffset += 1;\n\n\t\t\tif (colour_description_present_flag) {\n\t\t\t\t// colour_primaries            u(8)\n\t\t\t\t// transfer_characteristics    u(8)\n\t\t\t\t// matrix_coefficients         u(8)\n\t\t\t\tbitOffset += 24;\n\t\t\t}\n\t\t}\n\n\t\tlet chroma_loc_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\tif (chroma_loc_info_present_flag) {\n\t\t\tlet chroma_sample_loc_type_top_field = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\tbitOffset += chroma_sample_loc_type_top_field.bitLength;\n\n\t\t\tlet chroma_sample_loc_type_bottom_field = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\tbitOffset += chroma_sample_loc_type_bottom_field.bitLength;\n\t\t}\n\n\t\tlet timing_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\tif (timing_info_present_flag) {\n\t\t\tnum_units_in_tick = ExpGolomb.readBit(golombBuffer, bitOffset, 32);\n\t\t\tbitOffset += 32;\n\n\t\t\ttime_scale = ExpGolomb.readBit(golombBuffer, bitOffset, 32);\n\t\t\tbitOffset += 32;\n\n\t\t\tfixed_frame_rate_flag = !!ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\t\tbitOffset += 1;\n\n\t\t\tfps = time_scale / (num_units_in_tick * 2);\n\t\t}\n\n\t\t// There is left VUI other's parameters to be decoded ...\n\t\t// For now, it is useless, so don't pass them.\n\t}\n\n\t// let FrameHeightInMbs = (2 - frame_mbs_only_flag) * (picHeightUEV.value + 1);\n\t// PicSizeInMapUnits = PicWidthInMbs * PicHeightInMapUnits\n\n\treturn {\n\t\tpayload: golombBuffer,\n\n\t\tprofile_idc,\n\t\tprofile_compatibility,\n\t\tlevel_idc,\n\t\tsps_id: spsUEV.value, // ue(v)\n\t\tlog2_max_frame_num_minus4: poctUEV.value, // ue(v)\n\t\tpic_order_cnt_type, // ue(v)\n\t\tlog2_max_pic_order_cnt_lsb_minus4: lmpoclmUEV ? lmpoclmUEV.value : 0, // ue(v)\n\n\t\twidth: Math.ceil(((picWidthUEV.value + 1) * 16 - cropLeft * 2 - cropRight * 2) * pixelScale), // PicWidthInSamplesL = PicWidthInMbs * 16\n\t\theight: (2 - frame_mbs_only_flag) * (picHeightUEV.value + 1) * 16 - cropTop * 2 - cropBottom * 2,\n\n\t\tpixelRatio,\n\t\tvideo_format,\n\n\t\tfps,\n\t\tfixedFPS: fixed_frame_rate_flag\n\t};\n}\n","/**\n * @file: pps.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport ExpGolomb from '../../util/exp-golumb';\n\nexport type PPSProps = {\n\tsliceGroupNum: number;\n};\n\n/**\n * decode (PPS)Picture parameter set\n * @param payload\n */\nexport function decodePPS(payload: Uint8Array): PPSProps {\n\tlet bitOffset = 0;\n\n\tlet golombBuffer = payload;\n\tlet slice_group_change_direction_flag = 0,\n\t\tsliceGroupIds = [];\n\tlet sgcdfUEV, picSizeUEV;\n\tlet i = 0;\n\n\t// pic_parameter_set_id\n\tlet ppsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += ppsUEV.bitLength;\n\n\t// seq_parameter_set_id\n\tlet spsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += spsUEV.bitLength;\n\n\t// entropy_coding_mode_flag\n\t// 0: Exp-Golomb coded, see subclause 9.1 or CAVLC, see subclause 9.2\n\t// 1: CABAC, see subclause 9.3\n\tlet entropy_coding_mode_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\t// bottom_field_pic_order_in_frame_present_flag\n\tlet bottom_field_pic_order_in_frame_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\t// num_slice_groups_minus1,\n\tlet sliceGroupUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += sliceGroupUEV.bitLength;\n\n\tif (sliceGroupUEV.value > 0) {\n\t\t// slice_group_map_type\n\t\tlet sgmtUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += sgmtUEV.bitLength;\n\n\t\tlet iGroup = 0,\n\t\t\titemUev;\n\n\t\tswitch (sgmtUEV.value) {\n\t\t\tcase 0:\n\t\t\t\tfor (iGroup = 0; iGroup <= sgmtUEV.value; iGroup++) {\n\t\t\t\t\t// run_length_minus1\n\t\t\t\t\titemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += itemUev.bitLength;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tfor (iGroup = 0; iGroup <= sgmtUEV.value; iGroup++) {\n\t\t\t\t\t// top_left\n\t\t\t\t\titemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += itemUev.bitLength;\n\t\t\t\t\t// bottom_right\n\t\t\t\t\titemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += itemUev.bitLength;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\t\t// slice_group_change_direction_flag\n\t\t\t\tslice_group_change_direction_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\t\t\tbitOffset += 1;\n\t\t\t\t// slice_group_change_rate_minus1\n\t\t\t\tsgcdfUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\t\tbitOffset += sgcdfUEV.bitLength;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\t{\n\t\t\t\t\t// pic_size_in_map_units_minus1\n\t\t\t\t\tpicSizeUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += picSizeUEV.bitLength;\n\n\t\t\t\t\tlet length = Math.ceil(Math.log2(sliceGroupUEV.value + 1));\n\t\t\t\t\tfor (i = 0; i <= picSizeUEV.value; i++) {\n\t\t\t\t\t\t// pic_size_in_map_units_minus1\n\t\t\t\t\t\tsliceGroupIds.push(ExpGolomb.readBit(golombBuffer, bitOffset, length));\n\t\t\t\t\t\tbitOffset += length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// num_ref_idx_l0_default_active_minus1\n\tlet nril0dcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += nril0dcmUEV.bitLength;\n\n\t// num_ref_idx_l1_default_active_minus1\n\tlet nril1dcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += nril1dcmUEV.bitLength;\n\n\t// weighted_pred_flag\n\tlet weighted_pred_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\t// weighted_bipred_idc\n\tlet weighted_bipred_idc = ExpGolomb.readBit(golombBuffer, bitOffset, 2);\n\tbitOffset += 1;\n\n\t// pic_init_qp_minus26\n\tlet piqpSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n\tbitOffset += piqpSEV.bitLength;\n\t// pic_init_qs_minus26\n\tlet piqsSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n\tbitOffset += piqsSEV.bitLength;\n\t// chroma_qp_index_offset\n\tlet cqioSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n\tbitOffset += cqioSEV.bitLength;\n\n\tlet deblocking_filter_control_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\tlet constrained_intra_pred_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\tlet redundant_pic_cnt_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\t// if( more_rbsp_data( ) ) {\n\t//     // Unused data...\n\t// }\n\n\treturn {\n\t\tsliceGroupNum: sliceGroupUEV.value + 1\n\t};\n}\n","/**\n * @file: pps.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nexport type SEIProps = {};\n\n/**\n * decode (SEI)Supplemental enhancement information\n * @param payload\n */\nexport function decodeSEI(payload: Uint8Array): SEIProps {\n\treturn {};\n}\n","/**\n * @file: nalu.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport DataViewReader from '../../util/dv';\nimport NaluTypes from '../../enum/nalu-types';\nimport discardEP3B from './ep3b';\nimport { decodeSPS, SPSProps } from './sps';\nimport { decodePPS, PPSProps } from './pps';\nimport { decodeSEI, SEIProps } from './sei';\n\n/**\n * decode (AUD)Access unit delimiter\n * @param payload\n * @private\n */\nfunction _decodeAUD(payload: Uint8Array): number {\n\t// var primary_pic_type_table = {\n\t//     0x084, // 2, 7\n\t//     0x0a5, // 0, 2, 5, 7\n\t//     0x0e7, // 0, 1, 2, 5, 6, 7\n\t//     0x210, // 4, 9\n\t//     0x318, // 3, 4, 8, 9\n\t//     0x294, // 2, 4, 7, 9\n\t//     0x3bd, // 0, 2, 3, 4, 5, 7, 8, 9\n\t//     0x3ff, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n\t// }\n\n\treturn payload[0] >> 5;\n}\n\nexport default class NALU extends DataViewReader {\n\tforbidden_zero_bit: number;\n\tref_idc: number;\n\tunit_type: number;\n\tdata: Uint8Array;\n\trawData: Uint8Array;\n\tsps: SPSProps;\n\tpps: PPSProps;\n\tsei: SEIProps;\n\tprimary_pic_type: number;\n\tpts?: number;\n\tdts?: number;\n\n\tconstructor(buffer: Uint8Array) {\n\t\tsuper();\n\n\t\tthis.forbidden_zero_bit = buffer[0] >> 7;\n\n\t\t// nalu priority.\n\t\tthis.ref_idc = (buffer[0] >> 5) & 0x03;\n\n\t\t// specifies the type of RBSP data structure. see in mux-nalu-types.js\n\t\tthis.unit_type = buffer[0] & 0x1f;\n\n\t\tthis.data = discardEP3B(buffer.subarray(1));\n\t\tthis.rawData = buffer;\n\n\t\tswitch (this.unit_type) {\n\t\t\tcase NaluTypes.NON_IDR_SLICE:\n\t\t\t\tbreak;\n\t\t\tcase NaluTypes.DPA_SLICE:\n\t\t\tcase NaluTypes.DPB_SLICE:\n\t\t\tcase NaluTypes.DPC_SLICE:\n\t\t\t\t// TODO decode A/B/C Partition Slice.\n\t\t\t\tbreak;\n\t\t\tcase NaluTypes.IDR_SLICE:\n\t\t\t\t// this.data = decodeSlice(this.data).data;\n\t\t\t\tbreak;\n\t\t\tcase NaluTypes.SPS:\n\t\t\t\tthis.sps = decodeSPS(this.data);\n\t\t\t\tbreak;\n\t\t\tcase NaluTypes.PPS:\n\t\t\t\tthis.pps = decodePPS(this.data);\n\t\t\t\tbreak;\n\t\t\tcase NaluTypes.SEI:\n\t\t\t\tthis.sei = decodeSEI(this.data);\n\t\t\t\tbreak;\n\t\t\tcase NaluTypes.AUD:\n\t\t\t\tthis.primary_pic_type = _decodeAUD(this.data);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","/**\n * @file: avc.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * h.264/AVC codec\n */\nimport EventEmitter from '../util/event-emitter';\nimport NALUnit from './avc/nalu';\n\ninterface CachedBytes extends Uint8Array {\n\tpts?: number;\n\tdts?: number;\n\tstartCodeLength?: number;\n}\n\nexport type AVCCodecData = {\n\tpts: number;\n\tdts: number;\n\tnaluSizeLength?: number;\n\tpayload: Uint8Array;\n};\n\nexport interface AVCDecoderConfigurationRecord {\n\tversion: number;\n\tprofile: number;\n\tprofileCompatibility: number;\n\tlevel: number;\n\tnaluSizeLength: number;\n\tspsNalus: Uint8Array[];\n\tppsNalus: Uint8Array[];\n}\n\nexport class AVCCodec extends EventEmitter {\n\tprivate cachedBytes?: CachedBytes;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.cachedBytes = null;\n\t}\n\n\tpush(data: AVCCodecData) {\n\t\tlet self = this;\n\t\tlet i = 0,\n\t\t\tnaluOffset = 0,\n\t\t\tlastStartCodeLength = 0;\n\t\tlet { pts, dts, payload, naluSizeLength } = data;\n\t\tlet data_byte;\n\n\t\tif (this.cachedBytes) {\n\t\t\ttry {\n\t\t\t\tdata_byte = new Uint8Array(this.cachedBytes.byteLength + payload.byteLength);\n\t\t\t} catch (e) {\n\t\t\t\tthrow `h264 alloc mem error ${this.cachedBytes.byteLength}/${payload.byteLength}`;\n\t\t\t}\n\t\t\tdata_byte.set(this.cachedBytes);\n\t\t\tdata_byte.set(payload, this.cachedBytes.byteLength);\n\t\t} else {\n\t\t\tdata_byte = payload;\n\t\t}\n\n\t\tif (!naluSizeLength) {\n\t\t\tlet j = data_byte.byteLength - 1;\n\t\t\tlet dropZerosLength = 0;\n\n\t\t\t// Collect tailing zeros.\n\t\t\t// end with 0x000000 and more...\n\t\t\tdo {\n\t\t\t\tif (data_byte[j] === 0x00) {\n\t\t\t\t\tdropZerosLength++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tj--;\n\t\t\t} while (j > 0);\n\n\t\t\tif (dropZerosLength >= 3) {\n\t\t\t\t// drop tailing zeros.\n\t\t\t\tdata_byte = data_byte.subarray(0, j + 1);\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tlet uint32 =\n\t\t\t\t\t(data_byte[i] << 24) | (data_byte[i + 1] << 16) | (data_byte[i + 2] << 8) | data_byte[i + 3];\n\t\t\t\tlet start_code = data_byte.length - i >= 4 ? uint32 : -1;\n\t\t\t\tlet start_code_length = 0;\n\t\t\t\tlet isLastByte = i === data_byte.length - 1;\n\n\t\t\t\tif (start_code >> 8 === 1) {\n\t\t\t\t\t/*commence with 3 bytes*/\n\t\t\t\t\tstart_code_length = 3;\n\t\t\t\t} else if (start_code === 1) {\n\t\t\t\t\t/*commence with 4 bytes*/\n\t\t\t\t\tstart_code_length = 4;\n\t\t\t\t}\n\n\t\t\t\tif (start_code_length === 3 || start_code_length === 4 || isLastByte) {\n\t\t\t\t\tlet startPos = naluOffset + lastStartCodeLength;\n\t\t\t\t\tlet isNaluEndByte = isLastByte && dropZerosLength >= 3;\n\n\t\t\t\t\tif (i > naluOffset && (!isLastByte || isNaluEndByte)) {\n\t\t\t\t\t\tlet bytes = data_byte.subarray(startPos, isNaluEndByte ? i + 1 : i);\n\t\t\t\t\t\tlet nalu = new NALUnit(bytes);\n\n\t\t\t\t\t\t// PES\n\t\t\t\t\t\tnalu.pts = pts;\n\t\t\t\t\t\tnalu.dts = dts;\n\n\t\t\t\t\t\tself.emit('nalu', nalu);\n\t\t\t\t\t\tnaluOffset = i;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isLastByte) {\n\t\t\t\t\t\tif (dropZerosLength < 3) {\n\t\t\t\t\t\t\tthis.cachedBytes = data_byte.subarray(naluOffset);\n\t\t\t\t\t\t\tthis.cachedBytes.pts = pts;\n\t\t\t\t\t\t\tthis.cachedBytes.dts = dts;\n\t\t\t\t\t\t\tthis.cachedBytes.startCodeLength = lastStartCodeLength;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.cachedBytes = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === naluOffset) {\n\t\t\t\t\t\t// record last start code length.\n\t\t\t\t\t\tlastStartCodeLength = start_code_length;\n\t\t\t\t\t}\n\n\t\t\t\t\ti += start_code_length || 1;\n\t\t\t\t} else {\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t} while (i < data_byte.length);\n\t\t} else {\n\t\t\tlet startPos = 0,\n\t\t\t\tsize = 0,\n\t\t\t\tendPos = 0;\n\t\t\tdo {\n\t\t\t\tsize = 0;\n\t\t\t\tfor (let k = 0; k < naluSizeLength; k++) {\n\t\t\t\t\tsize = size | (data_byte[startPos + k] << ((naluSizeLength - k - 1) * 8));\n\t\t\t\t}\n\t\t\t\t// size = (data_byte[i] << 24) | (data_byte[i + 1] << 16) | (data_byte[i + 2] << 8) | data_byte[i + 3];\n\t\t\t\tstartPos += naluSizeLength;\n\t\t\t\tendPos = startPos + size;\n\t\t\t\tif (endPos > data_byte.length) {\n\t\t\t\t\tendPos = data_byte.length;\n\t\t\t\t}\n\n\t\t\t\tlet bytes = data_byte.subarray(startPos, endPos);\n\t\t\t\tlet nalu = new NALUnit(bytes);\n\t\t\t\t// PES\n\t\t\t\tnalu.pts = pts;\n\t\t\t\tnalu.dts = dts;\n\n\t\t\t\tself.emit('nalu', nalu);\n\t\t\t\tstartPos = endPos;\n\t\t\t} while (startPos < data_byte.length);\n\t\t}\n\n\t\tif (this.cachedBytes) {\n\t\t\tlet nalu = new NALUnit(this.cachedBytes.subarray(this.cachedBytes.startCodeLength));\n\n\t\t\tnalu.pts = this.cachedBytes.pts;\n\t\t\tnalu.dts = this.cachedBytes.dts;\n\n\t\t\tthis.emit('nalu', nalu);\n\n\t\t\tthis.cachedBytes = null;\n\t\t}\n\n\t\tthis.emit('done');\n\t}\n\n\treset() {\n\t\tthis.cachedBytes = null;\n\t}\n}\n","/**\n * @file: created at Monday, 25th May 2020 12:36:52 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * AVCVideoPacket structure.\n */\nimport { AVCDecoderConfigurationRecord, AVCCodecData, AVCCodec } from '../../codec/avc';\nimport NALU from '../../codec/avc/nalu';\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\nimport AVContext from '../types/av-context';\nimport { PipelineContext } from '../types/flv-pipeline';\n\n// 0 : AVCDecoderConfigurationRecord（AVC sequence header）\n// 1 : One or more NALUs (Full frames are required)\n// 2 : AVC end of sequence\nexport enum AVCPacketTypes {\n\tSEQUENCE_HEAD = 0, // 0 : AVCDecoderConfigurationRecord（AVC sequence header）\n\tNALU = 1, // 1 : One or more NALUs (Full frames are required)\n\tSEQUENCE_END = 2 // 2 : AVC end of sequence\n}\n\n/**\n * ISO/IEC 14496-15  5.2.4.1.1 Syntax\n * @param data\n */\nexport function parseAVCDecoderConfigurationRecord(data: Uint8Array): AVCDecoderConfigurationRecord {\n\tlet version = data[0];\n\tlet profile = data[1];\n\tlet profileCompatibility = data[2];\n\tlet level = data[3];\n\tlet naluSizeLength = 1 + (data[4] & 0x03);\n\tlet ppsNalus = [],\n\t\tspsNalus = [];\n\n\tlet pos = 5;\n\tlet numOfSPS = data[pos] & 0x1f;\n\n\tif (numOfSPS === 0) {\n\t\tlogger.error(`Flv: Invalid AVCDecoderConfigurationRecord: No SPS`);\n\t} else if (numOfSPS > 0) {\n\t\tif (numOfSPS > 1) {\n\t\t\tlogger.warn(`Flv: Strange AVCDecoderConfigurationRecord: SPS Count = ${numOfSPS}`);\n\t\t}\n\n\t\tpos++;\n\t\tfor (let i = 0; i < numOfSPS; i++) {\n\t\t\tlet spsDataLength = (data[pos] << 8) | data[pos + 1];\n\t\t\tpos += 2;\n\n\t\t\tspsNalus.push(data.subarray(pos, pos + spsDataLength));\n\t\t\tpos += spsDataLength;\n\t\t}\n\t}\n\n\tlet numOfPPS = data[pos];\n\n\tif (numOfPPS === 0) {\n\t\tlogger.error(`Flv: Invalid AVCDecoderConfigurationRecord: No PPS`);\n\t} else if (numOfPPS > 0) {\n\t\tif (numOfPPS > 1) {\n\t\t\tlogger.warn(`Flv: Strange AVCDecoderConfigurationRecord: PPS Count = ${numOfPPS}`);\n\t\t}\n\n\t\tpos++;\n\t\tfor (let i = 0; i < numOfPPS; i++) {\n\t\t\tlet ppsDataLength = (data[pos] << 8) | data[pos + 1];\n\t\t\tpos += 2;\n\n\t\t\tppsNalus.push(data.subarray(pos, pos + ppsDataLength));\n\t\t\tpos += ppsDataLength;\n\t\t}\n\t}\n\n\treturn {\n\t\tversion,\n\t\tprofile,\n\t\tprofileCompatibility,\n\t\tlevel,\n\t\tnaluSizeLength,\n\t\tspsNalus,\n\t\tppsNalus\n\t};\n}\n\nconst avcCodec = new AVCCodec();\nconst naluList_: NALU[] = [];\n\navcCodec.on('nalu', (nalu: NALU) => {\n\tnaluList_.push(nalu);\n});\n\n/**\n * @extends DataViewReader\n */\nexport default class AVCVideoPacket extends DataViewReader {\n\tavcPacketType: AVCPacketTypes;\n\tdecoderConfigurationRecord?: AVCDecoderConfigurationRecord;\n\tcts: number;\n\tpts: number;\n\tdts: number;\n\tpayload: Uint8Array;\n\tnaluList?: NALU[];\n\n\tprivate avcCodec?: AVCCodec;\n\n\t/**\n\t * @param buffer\n\t */\n\tconstructor(pipeCtx: PipelineContext, buffer: Uint8Array, timestamp: number) {\n\t\tsuper();\n\n\t\tconst { flv, options } = pipeCtx;\n\n\t\tthis.avcPacketType = buffer[0];\n\n\t\tif (this.avcPacketType === 1) {\n\t\t\tlet cts_uint32 = this.readUint32(buffer, 0) & 0x00ffffff;\n\t\t\tthis.cts = (cts_uint32 << 8) >> 8; // convert to 24-bit signed int\n\t\t} else {\n\t\t\tthis.cts = 0;\n\t\t}\n\n\t\tthis.dts = timestamp;\n\t\tthis.pts = this.dts + this.cts;\n\n\t\tthis.payload = buffer.subarray(4);\n\n\t\tif (this.avcPacketType === 0) {\n\t\t\tthis.decoderConfigurationRecord = parseAVCDecoderConfigurationRecord(this.payload);\n\n\t\t\tflv.decoderConfigurationRecord = this.decoderConfigurationRecord;\n\t\t} else {\n\t\t\tif (options.decodeCodec) {\n\t\t\t\tthis.naluList = [];\n\n\t\t\t\tlet raw: AVCCodecData = {\n\t\t\t\t\tpts: this.pts,\n\t\t\t\t\tdts: this.dts,\n\t\t\t\t\tpayload: this.payload\n\t\t\t\t};\n\n\t\t\t\tif (!this.decoderConfigurationRecord) {\n\t\t\t\t\tif (flv.decoderConfigurationRecord) {\n\t\t\t\t\t\traw.naluSizeLength = flv.decoderConfigurationRecord.naluSizeLength;\n\t\t\t\t\t}\n\n\t\t\t\t\tavcCodec.push(raw);\n\n\t\t\t\t\t// Clone nalu to videoData\n\t\t\t\t\tfor (let i = 0; i < naluList_.length; i++) {\n\t\t\t\t\t\tthis.naluList.push(naluList_[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// empty cache\n\t\t\t\t\tnaluList_.splice(0, naluList_.length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @file: tag.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * video data structure.\n */\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\nimport { PipelineContext } from '../types/flv-pipeline';\nimport AVCVideoPacket from './flv-tag-avc-video-packet';\n\n// If CodecID == 2 H263VIDEOPACKET\n// If CodecID == 3 SCREENVIDEOPACKET\n// If CodecID == 4 VP6FLVVIDEOPACKET\n// If CodecID == 5 VP6FLVALPHAVIDEOPACKET\n// If CodecID == 6 SCREENV2VIDEOPACKET\n// if CodecID == 7 AVCVIDEOPACKET\n// Video frame payload or UI8 (see note following table)\n\nexport enum VideoCodecIDs {\n\tAVC = 7 // AVC_VIDEO_PACKET\n}\n\n/**\n * @extends DataViewReader\n */\nexport default class FlvTagVideoData extends DataViewReader {\n\tframeType: number;\n\tisKeyframe: boolean;\n\tcodecId: VideoCodecIDs;\n\tvideoData: AVCVideoPacket;\n\n\t/**\n\t * @param buffer\n\t */\n\tconstructor(pipeCtx: PipelineContext, buffer: Uint8Array, timestamp: number) {\n\t\tsuper();\n\n\t\tthis.frameType = (buffer[0] >> 4) & 0x0f;\n\t\tthis.isKeyframe = this.frameType === 1;\n\t\tthis.codecId = buffer[0] & 0x0f;\n\n\t\tswitch (this.codecId) {\n\t\t\tcase VideoCodecIDs.AVC:\n\t\t\t\tthis.videoData = new AVCVideoPacket(pipeCtx, buffer.subarray(1), timestamp);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.error(`flv tag videoData encounter unknown codecId ${this.codecId}`);\n\t\t}\n\t}\n}\n","/**\n * @file: created at Saturday, 9th May 2020 3:49:22 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * FLV Tags Stream.\n */\nimport FlvTagTypes from '../../enum/flv-tag-types';\nimport { Context, GlobalOptions } from '../../types/globals';\nimport logger from '../../util/logger';\nimport Stream from '../../util/stream';\nimport { AMFdeSerialize } from '../structs/flv-amf';\nimport FlvTag from '../structs/flv-tag';\nimport FlvTagAudioData from '../structs/flv-tag-audio-data';\nimport FlvTagVideoData from '../structs/flv-tag-video-data';\nimport AVContext from '../types/av-context';\nimport { PipelineContext, TagEmitData } from '../types/flv-pipeline';\n\nclass TagsStream extends Stream {\n\tprivate flv_: AVContext;\n\tprivate options_: GlobalOptions;\n\tprivate pipeCtx: PipelineContext;\n\n\tconstructor(ctx: Context, flv: AVContext, options: GlobalOptions = {}) {\n\t\tsuper();\n\n\t\tthis.flv_ = flv;\n\t\tthis.options_ = options;\n\n\t\tthis.pipeCtx = {\n\t\t\tctx,\n\t\t\tflv,\n\t\t\toptions\n\t\t};\n\t}\n\n\tpush(tag: FlvTag) {\n\t\tswitch (tag.tagType) {\n\t\t\tcase FlvTagTypes.SCRIPT_DATA:\n\t\t\t\tthis.parseScriptData_(tag.payload);\n\t\t\t\tbreak;\n\t\t\tcase FlvTagTypes.VIDEO:\n\t\t\t\tthis.parseVideoData_(tag);\n\t\t\t\tbreak;\n\t\t\tcase FlvTagTypes.AUDIO:\n\t\t\t\tthis.parseAudioData_(tag);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.error(`still not supported flv tag type ${tag.tagType}`);\n\t\t}\n\t}\n\n\tflush() {\n\t\tconst self = this;\n\n\t\tself.emit('done');\n\t}\n\n\treset() {\n\t\tthis.emit('reset');\n\t}\n\n\tprivate parseScriptData_(buffer: Uint8Array) {\n\t\tconst { flv_ } = this;\n\t\tlet result = AMFdeSerialize(buffer);\n\n\t\tflv_.emit('data', {\n\t\t\ttype: 'tag',\n\t\t\ttagType: FlvTagTypes.SCRIPT_DATA,\n\t\t\t...result\n\t\t});\n\t}\n\n\tprivate parseVideoData_(tag: FlvTag) {\n\t\tconst { flv_ } = this;\n\t\tconst data = new FlvTagVideoData(this.pipeCtx, tag.payload, tag.timestamp);\n\n\t\tlet ret: TagEmitData = {\n\t\t\ttype: 'tag',\n\t\t\ttagType: FlvTagTypes.VIDEO,\n\t\t\ttimestamp: tag.timestamp,\n\t\t\t...data\n\t\t};\n\n\t\tflv_.emit('data', ret);\n\t}\n\n\tprivate parseAudioData_(tag: FlvTag) {\n\t\tconst { options_, flv_ } = this;\n\n\t\tconst data = new FlvTagAudioData(tag.payload, tag.timestamp);\n\t\tconst { sampleSize, soundData } = data;\n\n\t\tif (soundData.audioSpecificConfig) {\n\t\t\tflv_.audioSpecificConfig = soundData.audioSpecificConfig;\n\t\t} else {\n\t\t\t// let stubTime = options_.config.stubTime;\n\t\t\t// if (isNumber(stubTime)) {\n\t\t\t// \tlet start = soundData.pts;\n\t\t\t// \tlet duration =\n\t\t\t// \t\tsoundData.pts +\n\t\t\t// \t\tsoundData.payload.byteLength / (sampleSize / 8) / flv_.audioSpecificConfig.sampleCount;\n\t\t\t// \tlet end = start + duration;\n\t\t\t// \tif (end < stubTime) {\n\t\t\t// \t\tlogger.warn(`drop aac tag, start/end/stubTime(${start}/${end}/${stubTime})`);\n\t\t\t// \t\treturn;\n\t\t\t// \t}\n\t\t\t// }\n\t\t}\n\n\t\tlet ret: TagEmitData = {\n\t\t\ttype: 'tag',\n\t\t\ttagType: FlvTagTypes.AUDIO,\n\t\t\ttimestamp: tag.timestamp,\n\t\t\t...data\n\t\t};\n\n\t\tflv_.emit('data', ret);\n\t}\n}\n\nexport default TagsStream;\n","/**\n * @file: created at Thursday, 14th May 2020 10:18:11 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * FLV Head Structure.\n */\nimport DataViewReader from '../../util/dv';\n\n/**\n * @extends DataViewReader\n */\nclass FlvHead extends DataViewReader {\n\tsignature: string;\n\tversion: number;\n\thasAudio: boolean;\n\thasVideo: boolean;\n\toffset: number;\n\n\t/**\n\t * @param buffer\n\t */\n\tconstructor(buffer: Uint8Array) {\n\t\tsuper();\n\n\t\tthis.signature =\n\t\t\tString.fromCharCode(buffer[0]) + // F\n\t\t\tString.fromCharCode(buffer[1]) + // L\n\t\t\tString.fromCharCode(buffer[2]); //V\n\n\t\tthis.version = buffer[3];\n\t\tthis.hasAudio = (buffer[4] & 4) >>> 2 == 1;\n\t\tthis.hasVideo = (buffer[4] & 1) == 1;\n\t\tthis.offset = this.readUint32(buffer, 5);\n\t}\n\n\tvalid(): boolean {\n\t\treturn this.signature === 'FLV';\n\t}\n}\n\nexport default FlvHead;\n","/**\n * flv demuxer.\n */\nimport DemuxFacade from '../demux-facade';\nimport muxErrorCode from '../mux-error-code';\nimport { GlobalOptions, PushConf } from '../types/globals';\nimport { isNumber } from '../util/is';\nimport logger from '../util/logger';\nimport { FLVParseStage, HEAD_LEN, MIN_BODY_LEN } from './flv-const';\nimport BodyStream from './streams/body';\nimport TagsStream from './streams/tag';\nimport FlvHead from './structs/flv-head';\nimport AVContext from './types/av-context';\n\n/**\n * flv\n */\nexport class FLVDemux extends DemuxFacade {\n\t// private complex_: FlvComplex;\n\tprivate flv_: AVContext;\n\tprivate tags_: TagsStream;\n\tprivate body_: BodyStream;\n\n\tconstructor(options: GlobalOptions = {}) {\n\t\tsuper(options);\n\n\t\tthis.flv_ = new AVContext();\n\t\tthis.flv_.stage = FLVParseStage.HEAD;\n\n\t\t// this. = 0;\n\n\t\tthis.body_ = new BodyStream(this.ctx_, this.flv_, options);\n\t\tthis.tags_ = new TagsStream(this.ctx_, this.flv_, options);\n\n\t\t// Compose pipeline\n\t\tthis.pipe(this.body_);\n\t\tthis.body_.pipe(this.tags_);\n\n\t\tsuper.listenEndStream_();\n\t}\n\n\tget endStream() {\n\t\treturn this.flv_;\n\t}\n\n\t/**\n\t * @param buffer\n\t * @param conf\n\t * @param conf.offsetByte\n\t */\n\tpush(buffer: ArrayBuffer | Uint8Array, conf: PushConf = {}) {\n\t\tconst { options_, ctx_, flv_, cache_buffer_ } = this;\n\t\tconst data: Uint8Array = super.constraintPushData_(buffer);\n\t\tlet cacheByteLength = this.cache_buffer_.byteLength;\n\n\t\tlogger.log(`flv demux received ${data.byteLength} bytes, cache ${cacheByteLength} bytes.`);\n\n\t\toptions_.config = conf;\n\t\tif (isNumber(conf.offsetPos)) {\n\t\t\tif (cacheByteLength === 0) {\n\t\t\t\tif (flv_.pos !== conf.offsetPos) {\n\t\t\t\t\tctx_.emit('error', muxErrorCode.FLV_NOT_EXPECTED_ADJACENT_DATA);\n\t\t\t\t}\n\n\t\t\t\tflv_.pos = conf.offsetPos;\n\t\t\t}\n\t\t}\n\n\t\tcache_buffer_.append(data);\n\n\t\t// if file byteOffset is provided, then specify the stage of parser.\n\t\tif (flv_.pos < HEAD_LEN) {\n\t\t\tflv_.stage === FLVParseStage.HEAD;\n\t\t} else {\n\t\t\tflv_.stage === FLVParseStage.BODY;\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (flv_.stage === FLVParseStage.HEAD) {\n\t\t\t\tif (cache_buffer_.byteLength >= HEAD_LEN) {\n\t\t\t\t\t// has enough header\n\t\t\t\t\tlet chunk = cache_buffer_.cut(HEAD_LEN);\n\n\t\t\t\t\tlet head = new FlvHead(chunk);\n\n\t\t\t\t\tif (head.valid()) {\n\t\t\t\t\t\tflv_.emit('data', {\n\t\t\t\t\t\t\ttype: 'head',\n\t\t\t\t\t\t\tsignature: head.signature,\n\t\t\t\t\t\t\tversion: head.version,\n\t\t\t\t\t\t\thasAudio: head.hasAudio,\n\t\t\t\t\t\t\thasVideo: head.hasVideo,\n\t\t\t\t\t\t\toffset: head.offset\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Change parse state -> body\n\t\t\t\t\t\tflv_.stage = FLVParseStage.BODY;\n\t\t\t\t\t\tflv_.pos = HEAD_LEN;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx_.emit('error', muxErrorCode.FLV_HEAD_SIGNATURE);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (flv_.stage === FLVParseStage.BODY) {\n\t\t\t\t// At least has 4 body byte to parse\n\t\t\t\tif (cache_buffer_.byteLength >= MIN_BODY_LEN) {\n\t\t\t\t\tlet cbLen = cache_buffer_.byteLength;\n\t\t\t\t\tlet nextBytes = cache_buffer_.bytes;\n\n\t\t\t\t\tcache_buffer_.clear();\n\n\t\t\t\t\tif (nextBytes) {\n\t\t\t\t\t\tthis.emit('data', nextBytes);\n\t\t\t\t\t}\n\n\t\t\t\t\tflv_.pos += cbLen;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n"],"names":["Events","console","global","FlvTagTypes","NALUnit"],"mappings":"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"}