{"version":3,"file":"demuxer.flv.umd.js","sources":["../src/enum/events.ts","../src/util/event-emitter.ts","../src/types/globals.ts","../src/util/is.ts","../src/util/cache-buffer.ts","../src/util/multi-map.ts","../src/util/event-manager.ts","../src/util/global.ts","../src/util/logger.ts","../src/util/stream.ts","../src/demux-facade.ts","../src/mux-error-code.ts","../src/flv/flv-const.ts","../src/util/dv.ts","../src/enum/flv-tag-types.ts","../src/flv/structs/flv-tag.ts","../src/flv/streams/body.ts","../src/flv/structs/flv-amf.ts","../src/flv/types/av-context.ts","../src/codec/aac/aac.ts","../src/flv/structs/flv-tag-aac-audio-data.ts","../src/flv/structs/flv-tag-audio-data.ts","../src/codec/avc/ep3b.ts","../src/util/exp-golumb.ts","../src/codec/avc/sps.ts","../src/codec/avc/pps.ts","../src/codec/avc/sei.ts","../src/codec/avc/nalu.ts","../src/codec/avc.ts","../src/flv/structs/flv-tag-avc-video-packet.ts","../src/flv/structs/flv-tag-video-data.ts","../src/flv/streams/tag.ts","../src/flv/structs/flv-head.ts","../src/flv/demux.ts"],"sourcesContent":["/**\n * @file= events.js, created at Monday, 23rd December 2019 3=47=23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nexport enum Events {\n    ERROR = 'ERROR',\n    INFO = 'INFO',\n    DATA = 'DATA',\n    DEMUX_DATA = 'DEMUX_DATA',\n    DONE = 'DONE'\n}\n","/**\n * @copyright https://github.com/nodejs/node/blob/master/lib/events.js\n */\n/* eslint-disable */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill;\nvar objectKeys = Object.keys || objectKeysPolyfill;\nvar bind = Function.prototype.bind || functionBindPolyfill;\n\n// By default Dispatchers will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nlet defaultMaxListeners = 10;\n\nexport default class EventEmitter {\n    static listenerCount(emitter, type) {\n        if (typeof emitter.listenerCount === 'function') {\n            return emitter.listenerCount(type);\n        } else {\n            return listenerCount.call(emitter, type);\n        }\n    }\n\n    static defaultMaxListeners: number;\n\n    _maxListeners?: number;\n    _eventsCount: number;\n    _events: any;\n\n    constructor() {\n        if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n            this._events = objectCreate(null);\n            this._eventsCount = 0;\n        }\n\n        this._maxListeners = this._maxListeners || undefined;\n    }\n\n    // // Obviously not all Emitters should be limited to 10. This function allows\n    // // that to be increased. Set to zero for unlimited.\n    // setMaxListeners(n) {\n    //     if (typeof n !== 'number' || n < 0 || isNaN(n))\n    //         throw new TypeError('\"n\" argument must be a positive number');\n    //     this._maxListeners = n;\n    //     return this;\n    // }\n    //\n    // getMaxListeners() {\n    //     return $getMaxListeners(this);\n    // }\n\n    emit(type: string, ...rest) {\n        var er, handler, len, args, i, events;\n        var doError = type === 'error';\n\n        events = this._events;\n        if (events) doError = doError && events.error == null;\n        else if (!doError) return false;\n\n        // If there is no 'error' event listener then throw.\n        if (doError) {\n            if (arguments.length > 1) er = arguments[1];\n            if (er instanceof Error) {\n                throw er; // Unhandled 'error' event\n            } else {\n                // At least give some kind of context to the user\n                var err = new Error('Unhandled \"error\" event. (' + er + ')');\n                err['context'] = er;\n                throw err;\n            }\n        }\n\n        handler = events[type];\n\n        if (!handler) return false;\n\n        var isFn = typeof handler === 'function';\n        len = arguments.length;\n        switch (len) {\n            // fast cases\n            case 1:\n                emitNone(handler, isFn, this);\n                break;\n            case 2:\n                emitOne(handler, isFn, this, arguments[1]);\n                break;\n            case 3:\n                emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n                break;\n            case 4:\n                emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n                break;\n            // slower\n            default:\n                args = new Array(len - 1);\n                for (i = 1; i < len; i++) args[i - 1] = arguments[i];\n                emitMany(handler, isFn, this, args);\n        }\n\n        return true;\n    }\n\n    on(type: string, listener: Function) {\n        return _addListener(this, type, listener);\n    }\n\n    once(type, listener) {\n        if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n        this.on(type, _onceWrap(this, type, listener));\n        return this;\n    }\n\n    off(type, listener) {\n        return _removeListener.call(this, type, listener);\n    }\n\n    removeAllListeners(type) {\n        var listeners, events, i;\n\n        events = this._events;\n        if (!events) return this;\n\n        // not listening for off, no need to emit\n        if (!events.off) {\n            if (arguments.length === 0) {\n                this._events = objectCreate(null);\n                this._eventsCount = 0;\n            } else if (events[type]) {\n                if (--this._eventsCount === 0) this._events = objectCreate(null);\n                else delete events[type];\n            }\n            return this;\n        }\n\n        // emit off for all listeners on all events\n        if (arguments.length === 0) {\n            var keys = objectKeys(events);\n            var key;\n            for (i = 0; i < keys.length; ++i) {\n                key = keys[i];\n                if (key === 'off') continue;\n                this.removeAllListeners(key);\n            }\n            this.removeAllListeners('off');\n            this._events = objectCreate(null);\n            this._eventsCount = 0;\n            return this;\n        }\n\n        listeners = events[type];\n\n        if (typeof listeners === 'function') {\n            this.off(type, listeners);\n        } else if (listeners) {\n            // LIFO order\n            for (i = listeners.length - 1; i >= 0; i--) {\n                this.off(type, listeners[i]);\n            }\n        }\n\n        return this;\n    }\n\n    listeners(type) {\n        return _listeners(this, type, true);\n    }\n\n    rawListeners(type) {\n        return _listeners(this, type, false);\n    }\n\n    listenerCount() {\n        return EventEmitter.listenerCount.apply(this, arguments);\n    }\n}\n\nlet hasDefineProperty;\ntry {\n    var o = {};\n    if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n    hasDefineProperty = o['x'] === 0;\n} catch (err) {\n    hasDefineProperty = false;\n}\nif (hasDefineProperty) {\n    Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n        enumerable: true,\n        get: function () {\n            return defaultMaxListeners;\n        },\n        set: function (arg) {\n            // check whether the input is a positive number (whose value is zero or\n            // greater and not a NaN).\n            if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n                throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n            defaultMaxListeners = arg;\n        }\n    });\n} else {\n    EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\nfunction $getMaxListeners(that) {\n    if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n    return that._maxListeners;\n}\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n    if (isFn) handler.call(self);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].call(self);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction emitOne(handler, isFn, self, arg1) {\n    if (isFn) handler.call(self, arg1);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].call(self, arg1);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n    if (isFn) handler.call(self, arg1, arg2);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].call(self, arg1, arg2);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n    if (isFn) handler.call(self, arg1, arg2, arg3);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].call(self, arg1, arg2, arg3);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n    if (isFn) handler.apply(self, args);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].apply(self, args);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction _addListener(target: EventEmitter, type, listener: Function) {\n    var m;\n    var events;\n    var existing;\n\n    if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\n    events = target._events;\n    if (!events) {\n        events = target._events = objectCreate(null);\n        target._eventsCount = 0;\n    } else {\n        // To avoid recursion in the case that type === \"newListener\"! Before\n        // adding it to the listeners, first emit \"newListener\".\n        if (events.newListener) {\n            target.emit('newListener', type, listener['listener'] ? listener['listener'] : listener);\n\n            // Re-assign `events` because a newListener handler could have caused the\n            // this._events to be assigned to a new object\n            events = target._events;\n        }\n        existing = events[type];\n    }\n\n    if (!existing) {\n        // Optimize the case of one listener. Don't need the extra array object.\n        existing = events[type] = listener;\n        ++target._eventsCount;\n    } else {\n        if (typeof existing === 'function') {\n            // Adding the second element, need to change to array.\n            existing = events[type] = [existing, listener];\n        } else {\n            existing.push(listener);\n        }\n\n        // Check for listener leak\n        if (!existing.warned) {\n            m = $getMaxListeners(target);\n            if (m && m > 0 && existing.length > m) {\n                existing.warned = true;\n\n                class CustomError extends Error {\n                    emitter: any;\n                    type: string;\n                    count: number;\n                }\n                let w: CustomError = new CustomError(\n                    'Possible Dispatcher memory leak detected. ' +\n                        existing.length +\n                        ' \"' +\n                        String(type) +\n                        '\" listeners ' +\n                        'added. Use emitter.setMaxListeners() to ' +\n                        'increase limit.'\n                );\n                w.name = 'MaxListenersExceededWarning';\n                w.emitter = target;\n                w.type = type;\n                w.count = existing.length;\n\n                if (typeof console === 'object' && console.warn) {\n                    console.warn('%s: %s', w.name, w.message);\n                }\n            }\n        }\n    }\n\n    return target;\n}\n\nfunction _removeListener(type, listener) {\n    var list, events, position, i, originalListener;\n\n    if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\n    events = this._events;\n    if (!events) return this;\n\n    list = events[type];\n    if (!list) return this;\n\n    if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0) this._events = objectCreate(null);\n        else {\n            delete events[type];\n            if (events.off) this.emit('off', type, list.listener || listener);\n        }\n    } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n            if (list[i] === listener || list[i].listener === listener) {\n                originalListener = list[i].listener;\n                position = i;\n                break;\n            }\n        }\n\n        if (position < 0) return this;\n\n        if (position === 0) list.shift();\n        else spliceOne(list, position);\n\n        if (list.length === 1) events[type] = list[0];\n\n        if (events.off) this.emit('off', type, originalListener || listener);\n    }\n\n    return this;\n}\n\nfunction onceWrapper() {\n    if (!this.fired) {\n        this.target.off(this.type, this.wrapFn);\n        this.fired = true;\n        switch (arguments.length) {\n            case 0:\n                return this.listener.call(this.target);\n            case 1:\n                return this.listener.call(this.target, arguments[0]);\n            case 2:\n                return this.listener.call(this.target, arguments[0], arguments[1]);\n            case 3:\n                return this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);\n            default:\n                var args = new Array(arguments.length);\n                for (var i = 0; i < args.length; ++i) args[i] = arguments[i];\n                this.listener.apply(this.target, args);\n        }\n    }\n}\n\nfunction _onceWrap(target, type, listener) {\n    var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n    var wrapped = bind.call(onceWrapper, state);\n    wrapped.listener = listener;\n    state.wrapFn = wrapped;\n    return wrapped;\n}\n\nfunction _listeners(target, type, unwrap) {\n    var events = target._events;\n\n    if (!events) return [];\n\n    var evlistener = events[type];\n    if (!evlistener) return [];\n\n    if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n    return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nfunction listenerCount(type) {\n    var events = this._events;\n\n    if (events) {\n        var evlistener = events[type];\n\n        if (typeof evlistener === 'function') {\n            return 1;\n        } else if (evlistener) {\n            return evlistener.length;\n        }\n    }\n\n    return 0;\n}\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n    for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) list[i] = list[k];\n    list.pop();\n}\n\nfunction arrayClone(arr, n) {\n    var copy = new Array(n);\n    for (var i = 0; i < n; ++i) copy[i] = arr[i];\n    return copy;\n}\n\nfunction unwrapListeners(arr) {\n    var ret = new Array(arr.length);\n    for (var i = 0; i < ret.length; ++i) {\n        ret[i] = arr[i].listener || arr[i];\n    }\n    return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n    var F = function () {};\n    F.prototype = proto;\n    return new F();\n}\n\nfunction objectKeysPolyfill(obj) {\n    var keys = [];\n    for (var k in obj)\n        if (Object.prototype.hasOwnProperty.call(obj, k)) {\n            keys.push(k);\n        }\n    return k;\n}\n\nfunction functionBindPolyfill(context) {\n    var fn = this;\n    return function () {\n        return fn.apply(context, arguments);\n    };\n}\n","import EventEmitter from '../util/event-emitter';\n\nexport class Context extends EventEmitter {}\n\nexport type PushConf = Partial<{\n    done: boolean;\n    stubTime: number;\n    offsetPos: number; // Represents the start byte of the pushed data relative to the entire file\n}>;\n\nexport type GlobalOptions = Partial<{\n    debug: boolean;\n    decodeCodec: boolean;\n    config: PushConf;\n}>;\n\nexport interface IDemux {\n    /**\n     * Pipe the arrayBuffer to the demuxer.\n     * @param buf\n     * @param conf\n     */\n    push(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\n\n    reset(): void;\n\n    destroy(): void;\n}\n","/**\n * @file: is.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = Object.prototype.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nexport function isObjectLike(value: any): boolean {\n    return !!value && typeof value == 'object';\n}\n\nexport function isEmptyObject(obj: object): boolean {\n    for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n            return false;\n        }\n    }\n    return JSON.stringify(obj) === JSON.stringify({});\n}\n\n/**\n * @param url\n */\nexport function isHttps(url?: string): boolean {\n    return /^https/gi.test(url || window.location.protocol);\n}\n\n/**\n * @param num\n */\nexport function isNumber(num: any): boolean {\n    return typeof num === 'number' && !isNaN(num);\n}\n\n/**\n * @param value\n */\nexport function isArrayBuffer(value: any): boolean {\n    return isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object arraybuffer]';\n}\n\n/**\n * @param value\n */\nexport function isUint8Array(value: any): boolean {\n    return isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object uint8array]';\n}\n","/**\n * @file: cache-buffer.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport { isNumber } from './is';\n\n/**\n * Cache Buffer util.\n * It's applicable for streaming data cutting and retaining the data,\n * the algorithm minimizes memory application as much as possible.\n */\n\nexport default class CacheBuffer {\n    get byteLength(): number {\n        if (!isNumber(this.byteLength_)) {\n            let len = 0;\n\n            for (let i = 0, item: Uint8Array; i < this.list_.length; i++) {\n                item = this.list_[i];\n                len += item.byteLength;\n            }\n            this.byteLength_ = len;\n        }\n\n        return this.byteLength_;\n    }\n\n    /**\n     * maybe return new allocated memory or original memory\n     */\n    get bytes(): Uint8Array | null {\n        const { bufferList } = this;\n        let bytes = null;\n\n        if (bufferList.length > 0) {\n            if (bufferList.length === 0) {\n                bytes = bufferList[0];\n            } else {\n                bytes = this.toNewBytes();\n            }\n        }\n\n        return bytes;\n    }\n\n    get empty() {\n        return this.list_.length === 0;\n    }\n\n    get bufferList() {\n        return this.list_;\n    }\n\n    /**\n     * Used to cache calculations, reduce the number of CPU calculations.\n     * When internal data changes, the value needs to be cleared and recalculated.\n     */\n    private byteLength_: number | null;\n\n    private list_: Array<Uint8Array> = [];\n\n    clear() {\n        let len = this.list_.length;\n        if (len > 0) {\n            this.list_.splice(0, len);\n        }\n        this.byteLength_ = null;\n    }\n\n    toNewBytes(): Uint8Array | null {\n        let bytes = null;\n        let tryCount: number = 0;\n        let maxTryCount: number = 50;\n\n        // The following retry strategies are provided for failed memory applications\n        // In terms of a better strategy, a failed memory application retry should be\n        // an asynchronous process, which does not return until the application succeeds.\n        // But the original design of the library is synchronous.\n        while (bytes === null) {\n            try {\n                tryCount++;\n                bytes = new Uint8Array(this.byteLength);\n            } catch (e) {\n                if (tryCount > maxTryCount) {\n                    throw e;\n                }\n            }\n        }\n\n        for (let i = 0, offset = 0; i < this.list_.length; i++) {\n            let payload = this.list_[i];\n\n            bytes.set(payload, offset);\n            offset += payload.byteLength;\n        }\n\n        return bytes;\n    }\n\n    append(newBuffer: Uint8Array | CacheBuffer): void {\n        if (newBuffer instanceof CacheBuffer) {\n            this.list_ = this.list_.concat(newBuffer.bufferList);\n        } else {\n            this.list_.push(newBuffer);\n        }\n\n        this.byteLength_ = null;\n    }\n\n    /**\n     * This function cuts a complete TypedArray from CacheBuffer and retains the remainder of CacheBuffer.\n     * The following points should be noted when using this function:\n     * 1. If the cut needs to return the cut-out part, the cut length should be as small as possible to reduce the errors in memory application.\n     * 2. If the cutting is only to preserve the remaining parts, the cutting size is within the total number of bytes, without considering memory applications.\n     * @param {number} fixedLength\n     * @param {boolean} [needCutResult] - If not, just retain the remaining parts after cutting.\n     */\n    cut(fixedLength: number, needCutResult: boolean = true): Uint8Array {\n        let chunk = null;\n\n        if (fixedLength > 0 && !this.empty) {\n            let list = this.list_;\n\n            let offset = 0;\n            let loopIndex = 0;\n\n            while (list.length > 0) {\n                let cur = list.shift();\n\n                if (loopIndex === 0) {\n                    if (cur.byteLength >= fixedLength) {\n                        if (needCutResult) {\n                            // Here is the key point for optimize memory alloc\n                            chunk = cur.subarray(0, fixedLength);\n                        }\n\n                        if (cur.byteLength > fixedLength) {\n                            cur = cur.subarray(fixedLength);\n                            list.unshift(cur);\n                        }\n                        break;\n                    } else {\n                        if (needCutResult) {\n                            try {\n                                chunk = new Uint8Array(fixedLength);\n                            } catch (e) {\n                                throw `alloc_memory_error@ cache buffer: ${fixedLength} ${e.message}`;\n                            }\n\n                            chunk.set(cur, 0);\n                        }\n                        offset += cur.byteLength;\n                    }\n                } else {\n                    let subLen = fixedLength - offset;\n\n                    if (cur.byteLength >= subLen) {\n                        if (needCutResult) {\n                            chunk.set(cur.subarray(0, subLen), offset);\n                        }\n\n                        cur = cur.subarray(subLen);\n\n                        if (cur.byteLength > 0) {\n                            list.unshift(cur);\n                        }\n\n                        break;\n                    } else {\n                        if (needCutResult) {\n                            chunk.set(cur, offset);\n                        }\n                        offset += cur.byteLength;\n                        break;\n                    }\n                }\n\n                loopIndex++;\n            }\n\n            this.byteLength_ = null;\n        }\n\n        return chunk;\n    }\n}\n","/**\n * @fileOverview A simple multimap template.\n */\n\ninterface MapData {\n    [index: string]: Array<any>;\n}\n\nexport default class MultiMap {\n    private map_: MapData;\n\n    constructor() {\n        this.map_ = {};\n    }\n\n    /**\n     * Add a key, value pair to the map.\n     * @param key\n     * @param value\n     */\n    push(key: string, value: any) {\n        if (Object.prototype.hasOwnProperty.call(this.map_, key)) {\n            this.map_[key].push(value);\n        } else {\n            this.map_[key] = [value];\n        }\n    }\n\n    /**\n     * Get a list of values by key.\n     * @param key\n     */\n    get(key: string): Array<any> {\n        let list = this.map_[key];\n        // slice() clones the list so that it and the map can each be modified\n        // without affecting the other.\n        return list ? list.slice() : null;\n    }\n\n    /**\n     * Get a list of all values.\n     */\n    getAll(): Array<any> {\n        let list = [];\n        for (let key in this.map_) {\n            list.push.apply(list, this.map_[key]);\n        }\n        return list;\n    }\n\n    /**\n     * Remove a specific value, if it exists.\n     * @param key\n     * @param value\n     */\n    remove(key: string, value: any): void {\n        let list = this.map_[key];\n        if (list) {\n            for (let i = 0; i < list.length; ++i) {\n                if (list[i] == value) {\n                    list.splice(i, 1);\n                    --i;\n                }\n            }\n        }\n    }\n\n    /**\n     * Clear all keys and values from the multimap.\n     */\n    clear(): void {\n        this.map_ = {};\n    }\n\n    /**\n     * @param callback\n     */\n    forEach(callback: Function): void {\n        for (let key in this.map_) {\n            callback(key, this.map_[key]);\n        }\n    }\n}\n","import MultiMap from './multi-map';\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n */\nclass Binding_ {\n    target: any;\n    type: string;\n    listener: Function;\n\n    /**\n     * @param target - The event target.\n     * @param type - The event type.\n     * @param listener - The event listener.\n     */\n    constructor(target: any, type: string, listener: Function) {\n        this.target = target;\n        this.type = type;\n        this.listener = listener;\n\n        if (this.target.addEventListener) {\n            this.target.addEventListener(type, listener, false);\n        } else if (this.target.on) {\n            this.target.on(type, listener, false);\n        }\n    }\n\n    /**\n     * Detaches the event listener from the event target.\n     * This does nothing if the event listener is already detached.\n     */\n    off() {\n        if (this.target.removeEventListener) {\n            this.target.removeEventListener(this.type, this.listener, false);\n        } else if (this.target.off) {\n            this.target.off(this.type, this.listener, false);\n        }\n\n        this.target = null;\n        this.listener = null;\n    }\n}\n\n/**\n * Creates a new EventManager.\n * An EventManager maintains a collection of \"event bindings\" between event targets and event listeners.\n */\nexport default class EventManager {\n    private bindingMap_: MultiMap;\n    // static Binding_: Binding;\n\n    constructor() {\n        /**\n         * Maps an event type to an array of event bindings.\n         */\n        this.bindingMap_ = new MultiMap();\n    }\n\n    /**\n     * Detaches all event listeners.\n     * @override\n     */\n    destroy(): void {\n        this.removeAll();\n        this.bindingMap_ = null;\n    }\n\n    /**\n     * Attaches an event listener to an event target.\n     * @param target - The event target.\n     * @param type  - The event type.\n     * @param listener  - The event listener.\n     */\n    on(target: any, type: string, listener: Function): EventManager {\n        if (!this.bindingMap_) return;\n\n        let binding = new Binding_(target, type, listener);\n        this.bindingMap_.push(type, binding);\n\n        return this;\n    }\n\n    /**\n     * Attaches an event listener to an event target.\n     * The listener will be removed when the first instance of the event is fired.\n     * @param {EventTarget} target The event target.\n     * @param {string} type The event type.\n     * @param {function} listener The event listener.\n     */\n    once(target: any, type: string, listener: Function) {\n        // Install a shim listener that will stop listening after the first event.\n        this.on(\n            target,\n            type,\n            function (event: any) {\n                // Stop listening to this event.\n                this.off(target, type);\n                // Call the original listener.\n                listener(event);\n            }.bind(this)\n        );\n    }\n\n    /**\n     * Detaches an event listener from an event target.\n     * @param {EventTarget} target The event target.\n     * @param {string} type The event type.\n     */\n    off(target: any, type: string): void {\n        if (!this.bindingMap_) return;\n\n        let list = this.bindingMap_.get(type) || [];\n\n        for (let i = 0; i < list.length; ++i) {\n            let binding = list[i];\n\n            if (binding.target == target) {\n                binding.off();\n                this.bindingMap_.remove(type, binding);\n            }\n        }\n    }\n\n    /**\n     * Detaches all event listeners from all targets.\n     */\n    removeAll(): void {\n        if (!this.bindingMap_) return;\n\n        let list = this.bindingMap_.getAll();\n\n        for (let i = 0; i < list.length; ++i) {\n            list[i].off();\n        }\n\n        this.bindingMap_.clear();\n    }\n}\n\n// EventManager.Binding_ = Binding;\n","/**\n * @file: global.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * @description provide global scope.\n */\nlet global: any;\n\n// see https://stackoverflow.com/a/11237259/589493\nif (typeof window === 'undefined') {\n    /* eslint-disable-next-line no-undef */\n    global = self;\n} else {\n    global = window;\n}\n\nexport default global;\n","/**\n * @file: logger.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * utils - logger\n */\n/* global WorkerGlobalScope */\nimport global from './global';\nimport EventEmitter from './event-emitter';\n\nlet console = global.console;\nconst isWorker =\n    typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope &&\n    typeof importScripts != 'undefined';\nconst prefix = '>>>';\n\nclass Logger extends EventEmitter {\n    private MSG_NAME: string;\n    private _enable: boolean;\n\n    get enable() {\n        return this._enable;\n    }\n\n    set enable(value: boolean) {\n        this._enable = value;\n\n        this.MSG_NAME = '__log__';\n    }\n\n    constructor() {\n        super();\n        this._enable = false;\n    }\n\n    log(...restArgs: any) {\n        if (isWorker) {\n            logger.emit(this.MSG_NAME, 'log', [...restArgs].join(''));\n        } else {\n            if (this._enable) {\n                console.log.call(console, prefix, ...restArgs);\n            }\n        }\n    }\n\n    debug(...restArgs: any) {\n        if (isWorker) {\n            logger.emit(this.MSG_NAME, 'debug', [...restArgs].join(''));\n        } else {\n            if (this._enable && console.debug) {\n                console.debug.call(console, prefix, ...restArgs);\n            }\n        }\n    }\n\n    assert(...restArgs: any) {\n        if (this._enable && console.assert) {\n            let condition = restArgs[0];\n            let sliceArgs = Array.prototype.slice.call(restArgs, 1);\n            sliceArgs.unshift(prefix);\n\n            console.assert.call(console, condition, ...sliceArgs);\n        }\n    }\n\n    warn(...restArgs: any) {\n        if (isWorker) {\n            logger.emit(this.MSG_NAME, 'warn', [...restArgs].join(''));\n        } else {\n            if (this._enable) {\n                console.warn.call(console, prefix, ...restArgs);\n            }\n        }\n    }\n\n    error(...restArgs: any) {\n        if (isWorker) {\n            logger.emit(this.MSG_NAME, 'error', [...restArgs].join(''));\n        } else {\n            if (this._enable) {\n                console.error.call(console, prefix, ...restArgs);\n            }\n        }\n    }\n}\n\nlet logger = new Logger();\n\n/**\n * @param {Object} obj - custom logger\n */\nexport function setLogger(obj) {\n    console = obj;\n}\n\nexport function getLogger() {\n    return logger;\n}\n\nexport default logger;\n","/**\n * @file: stream.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * simple stream implementation.\n */\n\nimport { PushConf } from '../types/globals';\nimport EventEmitter from './event-emitter';\n\nclass Stream extends EventEmitter {\n    constructor() {\n        super();\n    }\n\n    /**\n     * connect to the next pipeline stream.\n     * @param destination\n     */\n    pipe(destination: Stream): Stream {\n        this.on('reset', function () {\n            destination.reset();\n        });\n\n        this.on('data', function (data) {\n            destination.push(data);\n        });\n\n        this.on('done', function (flushSource) {\n            destination.flush(flushSource);\n        });\n\n        return destination;\n    }\n\n    /**\n     * detaches the next pipeline stream previously attached.\n     */\n    unpipe(): Stream {\n        this.removeAllListeners('reset');\n        this.removeAllListeners('data');\n        this.removeAllListeners('done');\n\n        return this;\n    }\n\n    /**\n     * push data to current pipeline.\n     * @param data\n     */\n    push(data: any, conf?: PushConf): void {\n        if (conf) {\n        }\n        this.emit('data', data);\n    }\n\n    /**\n     * flush current pipeline.\n     * @param flushSource\n     */\n    flush(flushSource: Stream): void {\n        this.emit('done', flushSource);\n    }\n\n    reset(): void {\n        this.emit('reset');\n    }\n}\n\nexport default Stream;\n","/**\n * @file: demuxer.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\nimport { Events } from './enum/events';\nimport { Context, GlobalOptions, IDemux, PushConf } from './types/globals';\nimport CacheBuffer from './util/cache-buffer';\nimport EventManager from './util/event-manager';\nimport { isArrayBuffer, isUint8Array } from './util/is';\nimport logger from './util/logger';\nimport Stream from './util/stream';\n\nexport default abstract class DemuxFacade extends Stream implements IDemux {\n    abstract readonly endStream?: Stream;\n    protected eventManager_: EventManager;\n    protected ctx_: Context;\n    protected options_: GlobalOptions;\n    protected cache_buffer_: CacheBuffer;\n\n    protected listenEndStream_(): void {\n        this.eventManager_ = new EventManager();\n\n        this.eventManager_\n            .on(this.endStream, 'data', (data) => {\n                this.emit(Events.DEMUX_DATA, data);\n            })\n            .on(this.endStream, 'done', (data) => {\n                this.emit(Events.DONE, data);\n            })\n            .on(this.ctx_, 'error', (data) => {\n                this.emit(Events.ERROR, data);\n            });\n    }\n\n    constructor(options: GlobalOptions = {}) {\n        super();\n\n        if (options.debug) {\n            logger.enable = true;\n        }\n\n        this.ctx_ = new Context();\n        this.options_ = options;\n        this.cache_buffer_ = new CacheBuffer();\n    }\n\n    /**\n     * Pipe the arrayBuffer to the demuxer.\n     * @param buf\n     * @param conf\n     */\n    abstract push(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\n\n    /**\n     * transfer data to Uint8Array\n     * @param buf\n     */\n    protected constraintPushData_(buf: ArrayBuffer | Uint8Array): Uint8Array | null {\n        let newBuf = null;\n        if (!isArrayBuffer(buf) && !isUint8Array(buf)) {\n            logger.error(`Data pushed is not an ArrayBuffer or Uint8Array: ${buf}`);\n            return newBuf;\n        }\n\n        if (isArrayBuffer(buf)) {\n            newBuf = new Uint8Array(buf);\n        } else {\n            newBuf = buf;\n        }\n\n        return newBuf;\n    }\n\n    reset(): void {}\n\n    destroy(): void {\n        this.unpipe();\n        this.endStream.unpipe();\n\n        this.eventManager_.removeAll();\n    }\n}\n","/**\n * @file: mux-error-code.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * @readonly\n * @enum {Number}\n */\nenum codes {\n    WORKER_EXCEPTION = 0,\n    WORKER_MSG_EXCEPTION,\n    TS_SYNC_BYTE,\n    FLV_HEAD_SIGNATURE,\n    FLV_NOT_EXPECTED_ADJACENT_DATA\n}\n\nexport default codes;\n","/**\n * @file: created at Wednesday, 13th May 2020 4:15:40 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nexport const HEAD_LEN = 9;\nexport const MIN_BODY_LEN = 4;\nexport const PREVIOUS_TAG_SIZE = 4;\nexport const MIN_TAG_LEN = PREVIOUS_TAG_SIZE;\n\nexport enum FLVParseStage {\n    HEAD = 0,\n    BODY\n}\n","/**\n * @file: dv.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Bit buffer reader like DataView.\n */\n\nfunction read(buf: ArrayBuffer | Uint8Array): DataView {\n    let byteOffset = 0;\n\n    if (ArrayBuffer.isView(buf)) {\n        byteOffset = buf.byteOffset;\n        buf = buf.buffer;\n    }\n\n    return new DataView(buf, byteOffset);\n}\n\nclass DataViewReader {\n    constructor() {}\n\n    /**\n     * Gets an unsigned 8-bit integer (unsigned byte).\n     * @param buffer\n     * @param byteOffset    The offset, in byte, from the start of the view where to read the data.\n     * @returns {number}    An unsigned 8-bit integer number.\n     */\n    readUint8(buffer: ArrayBuffer | Uint8Array, byteOffset: number): number {\n        return read(buffer).getUint8(byteOffset);\n    }\n\n    /**\n     * Gets an unsigned 16-bit integer (unsigned long).\n     * @param buffer\n     * @param byteOffset     The offset, in byte, from the start of the view where to read the data.\n     * @param littleEndian   Indicates whether the 16-bit int is stored in little- or big-endian format.\n     * @returns {number}     An unsigned 16-bit integer number.\n     */\n    readUint16(buffer: ArrayBuffer | Uint8Array, byteOffset, littleEndian: boolean = false): number {\n        return read(buffer).getUint16(byteOffset, littleEndian);\n    }\n\n    /**\n     * Gets an unsigned 32-bit integer (unsigned long).\n     * @param buffer\n     * @param byteOffset        The offset, in byte, from the start of the view where to read the data.\n     * @param littleEndian      Indicates whether the 32-bit int is stored in little- or big-endian format.\n     * @returns {number}        An unsigned 32-bit integer number.\n     */\n    readUint32(buffer: ArrayBuffer | Uint8Array, byteOffset: number, littleEndian: boolean = false): number {\n        return read(buffer).getUint32(byteOffset, littleEndian);\n    }\n}\n\nexport default DataViewReader;\n","/**\n * @file: created at Saturday, 23rd May 2020 11:46:18 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nenum FlvTagTypes {\n    SCRIPT_DATA = 18,\n    VIDEO = 9,\n    AUDIO = 8\n}\n\nexport default FlvTagTypes;\n","/**\n * @file: tag.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * tag structure.\n */\nimport DataViewReader from '../../util/dv';\nimport FlvTagTypes from '../../enum/flv-tag-types';\n\n/**\n * @extends DataViewReader\n */\nexport default class FlvTag extends DataViewReader {\n    tagType: number;\n    dataSize: number;\n    timestamp: number;\n    timestampExtended: number;\n    streamId: number;\n    payload: Uint8Array;\n    previousTagSize: number;\n    totalSize: number;\n\n    /**\n     * @param buffer\n     */\n    constructor(buffer: Uint8Array) {\n        super();\n\n        this.tagType = buffer[0];\n\n        this.dataSize = this.readUint32(buffer, 0) & 0x00ffffff;\n\n        let timestamp = this.readUint32(buffer, 3) & 0x00ffffff; // the lower 24 bits of the timestamp\n        let timestampExtended = buffer[7]; // This field represents the upper 8 bits of timestamp\n\n        this.timestamp = (timestampExtended << 24) + timestamp;\n\n        this.streamId = this.readUint32(buffer, 8) & 0x00ffffff; // Always 0\n\n        this.payload = buffer.subarray(11, 11 + this.dataSize);\n\n        this.previousTagSize = this.readUint32(buffer, 11 + this.dataSize);\n\n        this.totalSize = this.previousTagSize + 4;\n    }\n\n    valid(): boolean {\n        let { tagType, dataSize, previousTagSize } = this;\n        return (\n            previousTagSize === 11 + dataSize &&\n            (tagType === FlvTagTypes.SCRIPT_DATA || tagType === FlvTagTypes.VIDEO || tagType === FlvTagTypes.AUDIO)\n        );\n    }\n}\n","/**\n * @file: elementary.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport muxErrorCode from '../../mux-error-code';\nimport { Context, GlobalOptions } from '../../types/globals';\nimport CacheBuffer from '../../util/cache-buffer';\nimport logger from '../../util/logger';\nimport Stream from '../../util/stream';\nimport { HEAD_LEN, MIN_TAG_LEN, PREVIOUS_TAG_SIZE } from '../flv-const';\nimport FlvTag from '../structs/flv-tag';\nimport AVContext from '../types/av-context';\n\nclass BodyStream extends Stream {\n    private ctx_: Context;\n    private flv_: AVContext;\n    private options_: GlobalOptions;\n    private cache_buffer_: CacheBuffer;\n\n    constructor(ctx: Context, flvCtx: AVContext, options: GlobalOptions = {}) {\n        super();\n\n        this.ctx_ = ctx;\n        this.flv_ = flvCtx;\n        this.options_ = options;\n        this.cache_buffer_ = new CacheBuffer();\n    }\n\n    /**\n     * Push a body buffer\n     */\n    push(bodyBuffer: Uint8Array): void {\n        const { ctx_, flv_, cache_buffer_ } = this;\n        let buffer: Uint8Array | null;\n\n        cache_buffer_.append(bodyBuffer);\n\n        if (flv_.pos === HEAD_LEN) {\n            if (cache_buffer_.byteLength > PREVIOUS_TAG_SIZE + MIN_TAG_LEN) {\n                // drop PreviousTagSize0\n                cache_buffer_.cut(PREVIOUS_TAG_SIZE);\n\n                flv_.pos += PREVIOUS_TAG_SIZE;\n            }\n        }\n\n        while (cache_buffer_.byteLength > 0) {\n            // buffer start with tag\n            buffer = cache_buffer_.bytes;\n\n            if (buffer.length >= MIN_TAG_LEN) {\n                let tagHeadSize = 11; // 10 is tag header\n                let tagPayloadSize = (buffer[1] << 16) + (buffer[2] << 8) + buffer[3];\n                let previousTagSize = 4;\n                let tagSize = tagHeadSize + tagPayloadSize + previousTagSize;\n\n                if (buffer.length >= tagSize) {\n                    let tagBuffer = cache_buffer_.cut(tagSize);\n                    let tag = new FlvTag(tagBuffer);\n\n                    if (tag.valid()) {\n                        this.emit('data', tag);\n                        flv_.pos += tag.totalSize;\n                    } else {\n                        let errMsg = `Encounter invalid flv tag, tag_length(${tag.previousTagSize}), cache_length(${cache_buffer_.byteLength}), data(${tagBuffer})`;\n\n                        logger.error(errMsg);\n\n                        this.reset();\n\n                        ctx_.emit('error', muxErrorCode.TS_SYNC_BYTE, errMsg);\n                    }\n                } else {\n                    break;\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n    reset(): void {\n        const { cache_buffer_ } = this;\n\n        cache_buffer_.clear();\n        this.emit('reset');\n    }\n}\n\nexport default BodyStream;\n","/**\n * @file: created at Sunday, 24th May 2020 2:21:46 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\n\nexport function AMFdeSerialize(data: Uint8Array) {\n    let result = {};\n    let item = parseData_(data);\n    result[item.key] = item.value;\n    return result;\n}\n\nfunction parseData_(source: Uint8Array, isString = false) {\n    let key = null,\n        value = null,\n        data = null;\n\n    if (isString) {\n        try {\n            data = new Uint8Array(source.length + 1);\n        } catch (e) {\n            logger.error(`flv parseData failed: ${e.message}`);\n        }\n        data[0] = 2;\n        data.set(source, 1, source.length);\n    } else {\n        data = source;\n    }\n    key = deSerialize_(data);\n    if (isString) {\n        key.valueLength -= 1;\n    }\n    let temp = source.subarray(key.valueLength, source.byteLength);\n    value = deSerialize_(temp);\n\n    return {\n        key: key.value,\n        value: value.value,\n        valueLength: key.valueLength + value.valueLength\n    };\n}\n\ntype SerializeResult = Partial<{\n    value: any;\n    valueLength: number;\n}>;\n\nfunction deSerialize_(data: Uint8Array) {\n    let result: SerializeResult = {};\n    let valueLength = 0;\n    let a = new DataViewReader();\n\n    switch (data[0]) {\n        case 0:\n            valueLength = 8;\n            result.value = uint8ToDouble_(data.subarray(1, 9));\n            result.valueLength = 1 + valueLength;\n            break;\n        case 1:\n            valueLength = 1;\n            result.value = data[1] !== 0;\n            result.valueLength = 1 + valueLength;\n            break;\n        case 2:\n            valueLength = (data[1] << 8) | data[2];\n            result.value = uint8ToStr_(data.subarray(3, 3 + valueLength));\n            result.valueLength = 1 + 2 + valueLength;\n            break;\n        case 3:\n            valueLength = 1;\n            result.value = {};\n            while (data[valueLength] != 0x00 || data[valueLength + 1] != 0x00 || data[valueLength + 2] != 0x09) {\n                let objData = data.subarray(valueLength, data.byteLength);\n                let item = parseData_(objData, true);\n                result.value[item.key] = item.value;\n                valueLength += item.valueLength;\n                objData = null;\n            }\n            valueLength += 3;\n            result.valueLength = valueLength;\n            break;\n        case 4:\n            valueLength = (data[1] << 8) | data[2];\n            result.value = uint8ToStr_(data.subarray(3, 3 + valueLength));\n            result.valueLength = 1 + 2 + valueLength;\n            break;\n        case 5:\n            result.value = null;\n            valueLength = 1;\n            result.valueLength = valueLength;\n            break;\n        case 6:\n            result.value = undefined;\n            valueLength = 1;\n            result.valueLength = valueLength;\n            break;\n        case 7:\n            result.value = a.readUint16(data, 1);\n            valueLength = 2 + 1;\n            result.valueLength = valueLength;\n            break;\n        case 8:\n            {\n                let arrLength = (data[1] << 24) | (data[2] << 16) | (data[3] << 8) | data[4];\n                valueLength = 1 + 4;\n                result.value = {};\n                for (let count = 0; count < arrLength; count++) {\n                    let itemData = data.subarray(valueLength, data.byteLength);\n                    let item2 = parseData_(itemData, true);\n                    result.value[item2.key] = item2.value;\n                    valueLength += item2.valueLength;\n                }\n                valueLength += 3;\n                result.valueLength = valueLength;\n            }\n            break;\n        case 9:\n            break;\n        case 10:\n            {\n                let arr = [];\n                let arrLength2 = a.readUint32(data, 1);\n                for (let i = 0; i < arrLength2; i++) {\n                    let objData2 = data.subarray(i * 9 + 4 + 1, data.byteLength);\n                    arr.push(deSerialize_(objData2).value);\n                }\n                result.value = arr;\n                valueLength = arr.length * 9 + 4 + 1;\n                result.valueLength = valueLength;\n            }\n            break;\n        case 11:\n            result.value = uint8ToDouble_(data.subarray(0, 8));\n            valueLength = 8 + 1 + 2;\n            result.valueLength = valueLength;\n            break;\n        case 12:\n            valueLength = (data[1] << 24) | (data[2] << 16) | (data[3] << 8) | data[4];\n            result.value = uint8ToStr_(data.subarray(5, 5 + valueLength));\n            result.valueLength = 1 + 4 + valueLength;\n            break;\n        default:\n            return null;\n    }\n    a = null;\n    return result;\n}\n\nfunction uint8ToStr_(data: Uint8Array) {\n    return String.fromCharCode.apply(null, data);\n}\n\nfunction uint8ToDouble_(data: Uint8Array) {\n    let temp = new Uint8Array(data);\n    let dv = new DataView(temp.buffer);\n    let str = dv.getFloat64(0);\n    dv = null;\n    temp = null;\n    return str;\n}\n","/**\n * @file: created at Saturday, 9th May 2020 4:38:35 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport { AudioSpecificConfig } from '../../codec/aac/aac';\nimport { AVCDecoderConfigurationRecord } from '../../codec/avc';\nimport Stream from '../../util/stream';\nimport { FLVParseStage } from '../flv-const';\n\nexport enum AudioSoundFormat {\n    AAC = 10\n}\n\nexport enum AudioSoundType {\n    MONO = 0,\n    STEREO = 1 // For AAC: always 1\n}\n\nexport default class AVContext extends Stream {\n    stage: FLVParseStage;\n    pos: number = 0; // parse byte position relative to flv first byte;\n\n    version: number;\n    hasAudio: boolean;\n    hasVideo: boolean;\n\n    keyframeTimes: number[];\n    keyframeFilePositions: number[];\n\n    decoderConfigurationRecord: AVCDecoderConfigurationRecord;\n    audioSpecificConfig: AudioSpecificConfig;\n}\n","/**\n * @file: created at Saturday, 9th May 2020 11:13:19 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n// The AudioSpecificConfig is explained in ISO 14496-3.\nexport interface AudioSpecificConfig {\n    audioObjectType: number;\n    sampleCount: number;\n    channelConfiguration: number;\n    sampleRate: number;\n    samplingFrequencyIndex: number;\n    // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n}\n\nexport interface AACFrame extends Omit<AudioSpecificConfig, 'channelConfiguration'> {\n    pts: number;\n    dts: number;\n    data: Uint8Array;\n    channelCount: number; // equal to channelConfiguration\n    sampleSize: number;\n}\n\nexport const AAC_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n];\n","/**\n * @file: created at Monday, 25th May 2020 12:36:52 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * AVCVideoPacket structure.\n */\nimport { AudioSpecificConfig, AAC_SAMPLING_FREQUENCIES } from '../../codec/aac/aac';\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\n\n// 0: AAC sequence header\n// 1: AAC raw\nexport enum AACPacketType {\n    SEQUENCE_HEAD = 0, // 0 : AVCDecoderConfigurationRecord（AVC sequence header）\n    AAC_RAW = 1 // 1 : One or more NALUs (Full frames are required)\n}\n\n/**\n * ISO/IEC 14496-3 1.6.2.1 AudioSpecificConfig\n * @param buffer\n */\nexport function parseAudioSpecificConfig(buffer: Uint8Array): AudioSpecificConfig {\n    let LOG = 'AudioSpecificConfig';\n\n    // ISO/IEC 14496-3 Table 1.16 – Syntax of GetAudioObjectType()\n    let audioObjectType = buffer[0] >> 3;\n    if (audioObjectType == 31) {\n        logger.error(`${LOG} unsupported audioObjectType`);\n        // audioObjectType = 32 + audioObjectTypeExt;\n    }\n\n    let samplingFrequencyIndex = ((buffer[0] & 0x7) << 1) | (buffer[1] >> 7);\n    if (samplingFrequencyIndex === 0xf) {\n        logger.error(`${LOG} unsupported samplingFrequencyIndex`);\n    }\n    let channelConfiguration = (buffer[1] >> 3) & 0x0f;\n    if (channelConfiguration < 0 || channelConfiguration >= 8) {\n        logger.error('${LOG} unsupported channel configuration');\n    }\n\n    let sampleCount = ((buffer[1] >> 2) & 0x01) == 0 ? 1024 : 1024;\n    let sampleRate = AAC_SAMPLING_FREQUENCIES[samplingFrequencyIndex];\n\n    return {\n        audioObjectType,\n        samplingFrequencyIndex,\n        channelConfiguration,\n        sampleCount,\n        sampleRate\n    };\n}\n\n/**\n * @extends DataViewReader\n */\nexport default class AACAudioData extends DataViewReader {\n    dts: number;\n    pts: number;\n    aacPacketType: AACPacketType;\n    payload: Uint8Array;\n    audioSpecificConfig?: AudioSpecificConfig;\n\n    /**\n     * @param buffer\n     */\n    constructor(buffer: Uint8Array, timestamp: number) {\n        super();\n\n        this.dts = timestamp;\n        this.pts = timestamp;\n\n        this.aacPacketType = buffer[0];\n        this.payload = buffer.subarray(1);\n\n        if (this.aacPacketType === 0) {\n            this.audioSpecificConfig = parseAudioSpecificConfig(this.payload);\n        }\n    }\n}\n","/**\n * @file: created at Monday, 25th May 2020 2:51:52 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * audio data structure.\n */\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\nimport { AudioSoundFormat, AudioSoundType } from '../types/av-context';\nimport AACAudioData from './flv-tag-aac-audio-data';\n\n// 0 = Linear PCM, platform endian\n// 1 = ADPCM\n// 2 = MP3\n// 3 = Linear PCM, little endian\n// 4 = Nellymoser 16-kHz mono\n// 5 = Nellymoser 8-kHz mono\n// 6 = Nellymoser\n// 7 = G.711 A-law logarithmic PCM 8 = G.711 mu-law logarithmic PCM 9 = reserved\n// 10 = AAC\n// 11 = Speex\n// 14 = MP3 8-Khz\n// 15 = Device-specific sound\n\n/**\n * @extends DataViewReader\n */\nexport default class FlvTagAudioData extends DataViewReader {\n    soundFormat: AudioSoundFormat;\n    soundRate: number;\n    sampleSize: number; // Size of each sample\n    soundType: AudioSoundType;\n    soundData: AACAudioData;\n\n    /**\n     * @param buffer\n     */\n    constructor(buffer: Uint8Array, timestamp: number) {\n        super();\n\n        this.soundFormat = (buffer[0] & 0xf0) >> 4;\n        this.soundRate = (buffer[0] & 0x0c) >> 2;\n\n        let soundSize = (buffer[0] & 0x02) >> 1;\n\n        switch (soundSize) {\n            case 0:\n                this.sampleSize = 8; // bit\n                break;\n            case 1:\n                this.sampleSize = 16; // bit\n                break;\n        }\n        this.soundType = buffer[0] & 1;\n\n        switch (this.soundFormat) {\n            case AudioSoundFormat.AAC:\n                this.soundData = new AACAudioData(buffer.subarray(1), timestamp);\n                break;\n            default:\n                logger.error(`flv tag audioData encounter unknown soundFormat ${this.soundFormat}`);\n        }\n    }\n}\n","/**\n * @file: ep3b.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * discard the emulation_prevention_three_byte\n * @param data\n */\nexport default function discardEP3B(data: Uint8Array): Uint8Array {\n    let length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength: number,\n        newData = new Uint8Array(0);\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n        } else {\n            i++;\n        }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n\n    try {\n        newData = new Uint8Array(newLength);\n    } catch (e) {\n        throw `epsb alloc mem error ${newLength}`;\n    }\n    let sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++;\n            // Remove this position index\n            emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n}\n","/**\n * @file: exp-golumb.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * exp golumb algorithm.\n * codeNum = 2leadingZeroBits – 1 + read_bits( leadingZeroBits )\n * @see https://en.wikipedia.org/wiki/Exponential-Golomb_coding\n */\n\n/**\n * read n bit.\n * @param buffer\n * @param bitOffset\n * @param length\n * @private\n */\nexport function readBit(buffer: Uint8Array, bitOffset: number = 0, length: number = 1): number {\n    let startByte = 0;\n    let startByteBitPos = 0;\n    let val = 0;\n    let bitStr = '',\n        bitVal = 0;\n\n    for (let j = bitOffset; j < bitOffset + length; j++) {\n        startByte = Math.floor(j / 8);\n        startByteBitPos = 7 - (j % 8);\n        bitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\n\n        bitStr += bitVal;\n    }\n\n    val = parseInt(bitStr, 2);\n\n    return val;\n}\n\n/**\n * read 1 byte.\n * @param buffer\n * @param bitOffset\n */\nexport function readByte(buffer: Uint8Array, bitOffset: number = 0) {\n    return readBit(buffer, bitOffset, 8);\n}\n\n/**\n * Unsigned Integer Exp-Golomb Coded.\n * @param buffer\n * @param bitOffset\n */\nexport function readUEV(buffer: Uint8Array, bitOffset: number = 0) {\n    let leadingZeros = [];\n    let bitLength = buffer.byteLength * 8;\n    let readBit1 = false;\n    let startByte = 0;\n    let startByteBitPos = 0;\n    let bitVal = 0;\n    let value = '';\n\n    // 1. 计算 leadingZeros\n    for (let i = bitOffset; i < bitLength; i++) {\n        startByte = Math.floor(i / 8);\n        startByteBitPos = 7 - (i % 8);\n\n        bitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\n\n        if (!readBit1) {\n            if (bitVal === 0) {\n                leadingZeros.push(0);\n            } else {\n                readBit1 = true;\n                bitOffset = i;\n                break;\n            }\n        }\n    }\n\n    let codeNumLength = leadingZeros.length + 1;\n\n    // 2. 计算有效位数值\n    for (let j = bitOffset; j < bitOffset + codeNumLength; j++) {\n        startByte = Math.floor(j / 8);\n        startByteBitPos = 7 - (j % 8);\n        bitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\n\n        value += bitVal;\n    }\n\n    return {\n        bitLength: leadingZeros.length + codeNumLength,\n        value: parseInt(value, 2) - 1\n    };\n}\n\n/**\n * Signed Integer Exp-Golomb Coded.\n * @param buffer\n * @param bitOffset\n */\nexport function readSEV(buffer: Uint8Array, bitOffset: number = 0) {\n    let uev = readUEV(buffer, bitOffset);\n    let codeNum = uev.value;\n\n    let signedValue = Math.pow(-1, codeNum + 1) * Math.ceil(codeNum / 2);\n\n    return {\n        bitLength: uev.bitLength,\n        value: signedValue\n    };\n}\n\nexport default {\n    readUEV,\n    readSEV,\n    readBit,\n    readByte\n};\n","/**\n * @file: sps.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport ExpGolomb from '../../util/exp-golumb';\n\nlet bitOffset = 0;\n\nexport type SPSProps = {\n    profile_idc: number;\n    profile_compatibility: number;\n    level_idc: number;\n    sps_id: number;\n    log2_max_frame_num_minus4: number;\n    pic_order_cnt_type: number;\n    log2_max_pic_order_cnt_lsb_minus4: number;\n\n    width: number;\n    height: number;\n\n    pixelRatio: [number, number];\n    payload: Uint8Array;\n\n    video_format: number;\n\n    fps: number;\n    fixedFPS: boolean;\n};\n\n/**\n * 7.3.2.1.1.1 Scaling list syntax\n * @param scalingList\n * @param size\n */\nfunction scaling_list(scalingList, size) {\n    let lastScale = 8;\n    let nextScale = 8;\n    let delta_scale;\n\n    for (var j = 0; j < size; j++) {\n        if (nextScale != 0) {\n            delta_scale = ExpGolomb.readUEV(scalingList, bitOffset);\n            bitOffset += delta_scale.bitLength;\n\n            nextScale = (lastScale + delta_scale.value + 256) % 256;\n        }\n\n        lastScale = scalingList[j];\n    }\n}\n\n/**\n * decode (SPS)Sequence parameter set\n * @param payload\n */\nexport function decodeSPS(payload: Uint8Array): SPSProps {\n    bitOffset = 0;\n\n    let profile_idc = payload[0];\n    let profile_compatibility = payload[1];\n    let level_idc = payload[2];\n    let golombBuffer = payload.subarray(3);\n    let //separate_colour_plane_flag = 0,\n        // qpprime_y_zero_transform_bypass_flag = 0,\n        seq_scaling_matrix_present_flag = 0;\n    let lmpoclmUEV;\n    let //delta_pic_order_always_zero_flag = 0,\n        ofnrpSEV,\n        ofttbfSEV,\n        nrfipoccUEV;\n    let pixelRatio: [number, number] = [1, 1],\n        pixelScale = 1;\n    let video_format: number;\n    let fps = 0,\n        num_units_in_tick: number,\n        time_scale: number,\n        fixed_frame_rate_flag: boolean = true;\n\n    // seq_parameter_set_id\n    let spsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += spsUEV.bitLength;\n\n    if (\n        profile_idc == 100 ||\n        profile_idc == 110 ||\n        profile_idc == 122 ||\n        profile_idc == 244 ||\n        profile_idc == 44 ||\n        profile_idc == 83 ||\n        profile_idc == 86 ||\n        profile_idc == 118 ||\n        profile_idc == 128\n    ) {\n        // chroma_format_idc\n        let chromaFIUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += chromaFIUEV.bitLength;\n\n        if (chromaFIUEV.value == 3) {\n            // separate_colour_plane_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n            bitOffset += 1;\n        }\n\n        // bit_depth_luma_minus8\n        let bitdlmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += bitdlmUEV.bitLength;\n\n        // bit_depth_chroma_minus8\n        let bitdcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += bitdcmUEV.bitLength;\n\n        // qpprime_y_zero_transform_bypass_flag\n        // qpprime_y_zero_transform_bypass_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        // seq_scaling_matrix_present_flag\n        seq_scaling_matrix_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        if (seq_scaling_matrix_present_flag) {\n            for (let i = 0; i < (chromaFIUEV.value != 3 ? 8 : 12); i++) {\n                let seq_scaling_list_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n                bitOffset += 1;\n\n                if (seq_scaling_list_present_flag) {\n                    if (i < 6) {\n                        scaling_list(golombBuffer, 16);\n                    } else {\n                        scaling_list(golombBuffer, 64);\n                    }\n                }\n            }\n        }\n    }\n\n    // log2_max_frame_num_minus4\n    let lmfnmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += lmfnmUEV.bitLength;\n\n    // pic_order_cnt_type\n    let poctUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    let pic_order_cnt_type = poctUEV.value;\n    bitOffset += poctUEV.bitLength;\n\n    if (pic_order_cnt_type === 0) {\n        // log2_max_pic_order_cnt_lsb_minus4\n        lmpoclmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += lmpoclmUEV.bitLength;\n    } else if (pic_order_cnt_type === 1) {\n        // delta_pic_order_always_zero_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        // offset_for_non_ref_pic\n        ofnrpSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n        bitOffset += ofnrpSEV.bitLength;\n\n        // offset_for_top_to_bottom_field\n        ofttbfSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n        bitOffset += ofttbfSEV.bitLength;\n\n        // num_ref_frames_in_pic_order_cnt_cycle\n        nrfipoccUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += nrfipoccUEV.bitLength;\n\n        // let offset_for_ref_frames = [];\n        for (let i = 0, item; i < nrfipoccUEV.value; i++) {\n            item = ExpGolomb.readSEV(golombBuffer, bitOffset);\n            bitOffset += item.bitLength;\n\n            // offset_for_ref_frames.push(item);\n        }\n    }\n\n    // max_num_ref_frames\n    // 指定参考帧队列可能达到的最大长度，解码器依照这个句法元素的值开辟存储区，这个存储区用于存放已解码的参考帧，\n    // H.264 规定最多可用 16 个参考帧，本句法元素的值最大为 16。值得注意的是这个长度以帧为单位，如果在场模式下，应该相应地扩展一倍\n    let mnrfUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += mnrfUEV.bitLength;\n\n    // gaps_in_frame_num_value_allowed_flag\n    // let gaps_in_frame_num_value_allowed_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    // pic_width_in_mbs_minus1\n    let picWidthUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += picWidthUEV.bitLength;\n\n    // pic_height_in_map_units_minus1\n    let picHeightUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += picHeightUEV.bitLength;\n\n    // frame_mbs_only_flag\n    // 本句法元素等于 1 时, 表示本序列中所有图像的编码模式都是帧编码；\n    // 本句法元素等于 0 时, 表示本序列中图像的编码模式可能是帧，也可能是场或帧场自适应，某个图像具体是哪一种要由其他句法元素决定。\n    let frame_mbs_only_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    if (!frame_mbs_only_flag) {\n        // mb_adaptive_frame_field_flag (Unused, Unnecessary to read it.)\n        // ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n    }\n\n    // direct_8x8_inference_flag,  用于指明 B 片的直接 和 skip 模式下运动矢量的预测方法\n    // let direct_8x8_inference_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    // frame_cropping_flag, 用于指明解码器是否要将图像裁剪后输出，如果是的话，后面紧跟着的四个句法元素分别指出左右、上下裁剪的宽度\n    let frame_cropping_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    let cropLeft = 0,\n        cropRight = 0,\n        cropTop = 0,\n        cropBottom = 0;\n    if (frame_cropping_flag) {\n        let fcloUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += fcloUEV.bitLength;\n        cropLeft = fcloUEV.value;\n\n        let fcroUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += fcroUEV.bitLength;\n        cropRight = fcroUEV.value;\n\n        let fctoUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += fctoUEV.bitLength;\n        cropTop = fctoUEV.value;\n\n        let fcboUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += fcboUEV.bitLength;\n        cropBottom = fcboUEV.value;\n    }\n\n    // vui_parameters_present_flag\n    let vui_parameters_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    if (vui_parameters_present_flag) {\n        // Annex E, E.1.1 VUI parameters syntax\n        // VUI 用以表征视频格式等额外信息\n        // aspect_ratio, video_format\n\n        let aspect_ratio_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        if (aspect_ratio_info_present_flag) {\n            const aspectRatioIdc = ExpGolomb.readByte(golombBuffer, bitOffset);\n            bitOffset += 8;\n\n            switch (aspectRatioIdc) {\n                case 1:\n                    pixelRatio = [1, 1];\n                    break;\n                case 2:\n                    pixelRatio = [12, 11];\n                    break;\n                case 3:\n                    pixelRatio = [10, 11];\n                    break;\n                case 4:\n                    pixelRatio = [16, 11];\n                    break;\n                case 5:\n                    pixelRatio = [40, 33];\n                    break;\n                case 6:\n                    pixelRatio = [24, 11];\n                    break;\n                case 7:\n                    pixelRatio = [20, 11];\n                    break;\n                case 8:\n                    pixelRatio = [32, 11];\n                    break;\n                case 9:\n                    pixelRatio = [80, 33];\n                    break;\n                case 10:\n                    pixelRatio = [18, 11];\n                    break;\n                case 11:\n                    pixelRatio = [15, 11];\n                    break;\n                case 12:\n                    pixelRatio = [64, 33];\n                    break;\n                case 13:\n                    pixelRatio = [160, 99];\n                    break;\n                case 14:\n                    pixelRatio = [4, 3];\n                    break;\n                case 15:\n                    pixelRatio = [3, 2];\n                    break;\n                case 16:\n                    pixelRatio = [2, 1];\n                    break;\n                case 255: {\n                    let width0 = ExpGolomb.readByte(golombBuffer, bitOffset);\n                    bitOffset += 8;\n                    let width1 = ExpGolomb.readByte(golombBuffer, bitOffset);\n                    bitOffset += 8;\n                    let height0 = ExpGolomb.readByte(golombBuffer, bitOffset);\n                    bitOffset += 8;\n                    let height1 = ExpGolomb.readByte(golombBuffer, bitOffset);\n                    bitOffset += 8;\n                    pixelRatio = [(width0 << 8) | width1, (height0 << 8) | height1];\n                    break;\n                }\n            }\n\n            if (pixelRatio) {\n                pixelScale = pixelRatio[0] / pixelRatio[1];\n            }\n\n            if (aspectRatioIdc === 255) {\n                // sar_width\n                bitOffset += 16;\n                // sar_height\n                bitOffset += 16;\n            }\n        }\n\n        let overscan_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        if (overscan_info_present_flag) {\n            bitOffset += 1;\n            // overscan_appropriate_flag;\n        }\n\n        let video_signal_type_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        if (video_signal_type_present_flag) {\n            /*\n                Table E-2 – Meaning of video_format\n                video_format    Meaning\n                0               Component\n                1               PAL\n                2               NTSC\n                3               SECAM\n                4               MAC\n                5               Unspecified video format\n                6               Reserved\n                7               Reserved\n             */\n            video_format = ExpGolomb.readBit(golombBuffer, bitOffset, 3);\n            bitOffset += 3;\n\n            // switch (video_format) {\n            // }\n\n            // let video_full_range_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n            bitOffset += 1;\n\n            let colour_description_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n            bitOffset += 1;\n\n            if (colour_description_present_flag) {\n                // colour_primaries            u(8)\n                // transfer_characteristics    u(8)\n                // matrix_coefficients         u(8)\n                bitOffset += 24;\n            }\n        }\n\n        let chroma_loc_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        if (chroma_loc_info_present_flag) {\n            let chroma_sample_loc_type_top_field = ExpGolomb.readUEV(golombBuffer, bitOffset);\n            bitOffset += chroma_sample_loc_type_top_field.bitLength;\n\n            let chroma_sample_loc_type_bottom_field = ExpGolomb.readUEV(golombBuffer, bitOffset);\n            bitOffset += chroma_sample_loc_type_bottom_field.bitLength;\n        }\n\n        let timing_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        if (timing_info_present_flag) {\n            num_units_in_tick = ExpGolomb.readBit(golombBuffer, bitOffset, 32);\n            bitOffset += 32;\n\n            time_scale = ExpGolomb.readBit(golombBuffer, bitOffset, 32);\n            bitOffset += 32;\n\n            fixed_frame_rate_flag = !!ExpGolomb.readBit(golombBuffer, bitOffset);\n            bitOffset += 1;\n\n            fps = time_scale / (num_units_in_tick * 2);\n        }\n\n        // There is left VUI other's parameters to be decoded ...\n        // For now, it is useless, so don't pass them.\n    }\n\n    // let FrameHeightInMbs = (2 - frame_mbs_only_flag) * (picHeightUEV.value + 1);\n    // PicSizeInMapUnits = PicWidthInMbs * PicHeightInMapUnits\n\n    return {\n        payload: golombBuffer,\n\n        profile_idc,\n        profile_compatibility,\n        level_idc,\n        sps_id: spsUEV.value, // ue(v)\n        log2_max_frame_num_minus4: poctUEV.value, // ue(v)\n        pic_order_cnt_type, // ue(v)\n        log2_max_pic_order_cnt_lsb_minus4: lmpoclmUEV ? lmpoclmUEV.value : 0, // ue(v)\n\n        width: Math.ceil(((picWidthUEV.value + 1) * 16 - cropLeft * 2 - cropRight * 2) * pixelScale), // PicWidthInSamplesL = PicWidthInMbs * 16\n        height: (2 - frame_mbs_only_flag) * (picHeightUEV.value + 1) * 16 - cropTop * 2 - cropBottom * 2,\n\n        pixelRatio,\n        video_format,\n\n        fps,\n        fixedFPS: fixed_frame_rate_flag\n    };\n}\n","/**\n * @file: pps.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport ExpGolomb from '../../util/exp-golumb';\n\nexport type PPSProps = {\n    sliceGroupNum: number;\n};\n\n/**\n * decode (PPS)Picture parameter set\n * @param payload\n */\nexport function decodePPS(payload: Uint8Array): PPSProps {\n    let bitOffset = 0;\n\n    let golombBuffer = payload;\n    let //slice_group_change_direction_flag = 0,\n        sliceGroupIds = [];\n    let sgcdfUEV, picSizeUEV;\n    let i = 0;\n\n    // pic_parameter_set_id\n    let ppsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += ppsUEV.bitLength;\n\n    // seq_parameter_set_id\n    let spsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += spsUEV.bitLength;\n\n    // entropy_coding_mode_flag\n    // 0: Exp-Golomb coded, see subclause 9.1 or CAVLC, see subclause 9.2\n    // 1: CABAC, see subclause 9.3\n    // let entropy_coding_mode_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    // bottom_field_pic_order_in_frame_present_flag\n    // let bottom_field_pic_order_in_frame_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    // num_slice_groups_minus1,\n    let sliceGroupUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += sliceGroupUEV.bitLength;\n\n    if (sliceGroupUEV.value > 0) {\n        // slice_group_map_type\n        let sgmtUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += sgmtUEV.bitLength;\n\n        let iGroup = 0,\n            itemUev;\n\n        switch (sgmtUEV.value) {\n            case 0:\n                for (iGroup = 0; iGroup <= sgmtUEV.value; iGroup++) {\n                    // run_length_minus1\n                    itemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\n                    bitOffset += itemUev.bitLength;\n                }\n                break;\n            case 2:\n                for (iGroup = 0; iGroup <= sgmtUEV.value; iGroup++) {\n                    // top_left\n                    itemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\n                    bitOffset += itemUev.bitLength;\n                    // bottom_right\n                    itemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\n                    bitOffset += itemUev.bitLength;\n                }\n                break;\n            case 3:\n            case 4:\n            case 5:\n                // slice_group_change_direction_flag\n                // slice_group_change_direction_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n                bitOffset += 1;\n                // slice_group_change_rate_minus1\n                sgcdfUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n                bitOffset += sgcdfUEV.bitLength;\n                break;\n            case 6:\n                {\n                    // pic_size_in_map_units_minus1\n                    picSizeUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n                    bitOffset += picSizeUEV.bitLength;\n\n                    let length = Math.ceil(Math.log2(sliceGroupUEV.value + 1));\n                    for (i = 0; i <= picSizeUEV.value; i++) {\n                        // pic_size_in_map_units_minus1\n                        sliceGroupIds.push(ExpGolomb.readBit(golombBuffer, bitOffset, length));\n                        bitOffset += length;\n                    }\n                }\n                break;\n        }\n    }\n\n    // num_ref_idx_l0_default_active_minus1\n    let nril0dcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += nril0dcmUEV.bitLength;\n\n    // num_ref_idx_l1_default_active_minus1\n    let nril1dcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += nril1dcmUEV.bitLength;\n\n    // weighted_pred_flag\n    // let weighted_pred_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    // weighted_bipred_idc\n    // let weighted_bipred_idc = ExpGolomb.readBit(golombBuffer, bitOffset, 2);\n    bitOffset += 1;\n\n    // pic_init_qp_minus26\n    let piqpSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n    bitOffset += piqpSEV.bitLength;\n    // pic_init_qs_minus26\n    let piqsSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n    bitOffset += piqsSEV.bitLength;\n    // chroma_qp_index_offset\n    let cqioSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n    bitOffset += cqioSEV.bitLength;\n\n    // let deblocking_filter_control_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n    // let constrained_intra_pred_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n    // let redundant_pic_cnt_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    // if( more_rbsp_data( ) ) {\n    //     // Unused data...\n    // }\n\n    return {\n        sliceGroupNum: sliceGroupUEV.value + 1\n    };\n}\n","/**\n * @file: pps.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nexport type SEIProps = {};\n\n/**\n * decode (SEI)Supplemental enhancement information\n * @param payload\n */\nexport function decodeSEI(payload: Uint8Array): SEIProps {\n    payload;\n    return {};\n}\n","/**\n * @file: nalu.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport DataViewReader from '../../util/dv';\nimport NaluTypes from '../../enum/nalu-types';\nimport discardEP3B from './ep3b';\nimport { decodeSPS, SPSProps } from './sps';\nimport { decodePPS, PPSProps } from './pps';\nimport { decodeSEI, SEIProps } from './sei';\n\n/**\n * decode (AUD)Access unit delimiter\n * @param payload\n * @private\n */\nfunction _decodeAUD(payload: Uint8Array): number {\n    // var primary_pic_type_table = {\n    //     0x084, // 2, 7\n    //     0x0a5, // 0, 2, 5, 7\n    //     0x0e7, // 0, 1, 2, 5, 6, 7\n    //     0x210, // 4, 9\n    //     0x318, // 3, 4, 8, 9\n    //     0x294, // 2, 4, 7, 9\n    //     0x3bd, // 0, 2, 3, 4, 5, 7, 8, 9\n    //     0x3ff, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n    // }\n\n    return payload[0] >> 5;\n}\n\nexport default class NALU extends DataViewReader {\n    forbidden_zero_bit: number;\n    ref_idc: number;\n    unit_type: number;\n    data: Uint8Array;\n    rawData: Uint8Array;\n    sps: SPSProps;\n    pps: PPSProps;\n    sei: SEIProps;\n    primary_pic_type: number;\n    pts?: number;\n    dts?: number;\n\n    constructor(buffer: Uint8Array) {\n        super();\n\n        this.forbidden_zero_bit = buffer[0] >> 7;\n\n        // nalu priority.\n        this.ref_idc = (buffer[0] >> 5) & 0x03;\n\n        // specifies the type of RBSP data structure. see in mux-nalu-types.js\n        this.unit_type = buffer[0] & 0x1f;\n\n        this.data = discardEP3B(buffer.subarray(1));\n        this.rawData = buffer;\n\n        switch (this.unit_type) {\n            case NaluTypes.NON_IDR_SLICE:\n                break;\n            case NaluTypes.DPA_SLICE:\n            case NaluTypes.DPB_SLICE:\n            case NaluTypes.DPC_SLICE:\n                // TODO decode A/B/C Partition Slice.\n                break;\n            case NaluTypes.IDR_SLICE:\n                // this.data = decodeSlice(this.data).data;\n                break;\n            case NaluTypes.SPS:\n                this.sps = decodeSPS(this.data);\n                break;\n            case NaluTypes.PPS:\n                this.pps = decodePPS(this.data);\n                break;\n            case NaluTypes.SEI:\n                this.sei = decodeSEI(this.data);\n                break;\n            case NaluTypes.AUD:\n                this.primary_pic_type = _decodeAUD(this.data);\n                break;\n        }\n    }\n}\n","/**\n * @file: avc.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * h.264/AVC codec\n */\nimport CacheBuffer from '../util/cache-buffer';\nimport EventEmitter from '../util/event-emitter';\nimport logger from '../util/logger';\nimport NALU from './avc/nalu';\n\nexport type AVCCodecData = {\n    pts: number;\n    dts: number;\n    naluSizeLength?: number;\n    payload: Uint8Array;\n};\n\nexport interface AVCDecoderConfigurationRecord {\n    version: number;\n    profile: number;\n    profileCompatibility: number;\n    level: number;\n    naluSizeLength: number;\n    spsNalus: Uint8Array[];\n    ppsNalus: Uint8Array[];\n}\n\ntype ParsePesState = 0 | 1 | 2 | 3;\n\nexport class AVCCodec extends EventEmitter {\n    private lastState: ParsePesState = null;\n    private lastNALu: NALU = null;\n    private lastNALuState: ParsePesState = null;\n\n    private spitNalu_(bytes: Uint8Array, pts: number, dts: number) {\n        let nalu: NALU = new NALU(bytes);\n\n        nalu.pts = pts;\n        nalu.dts = dts;\n\n        this.lastNALu = nalu;\n        this.emit('nalu', nalu);\n    }\n\n    push(data: AVCCodecData) {\n        const { lastState, lastNALuState } = this;\n        let i = 0,\n            lastNALuOffset = -1,\n            { pts, dts, payload, naluSizeLength } = data;\n\n        if (!naluSizeLength) {\n            // Start parse Annex-B Byte stream format\n            let j = payload.byteLength - 1;\n            let dropZerosLength = 0;\n\n            // Collect tailing zeros.\n            // end with 0x000000 and more...\n            do {\n                if (payload[j] === 0x00) {\n                    dropZerosLength++;\n                } else {\n                    break;\n                }\n\n                j--;\n            } while (j > 0);\n\n            if (dropZerosLength >= 3) {\n                // drop tailing zeros.\n                payload = payload.subarray(0, j + 1);\n            }\n\n            const len = payload.length;\n\n            let state: ParsePesState = 0;\n            do {\n                let value = payload[i++];\n\n                // loop optimization.\n                if (state === 0) {\n                    state = value ? 0 : 1;\n                    continue;\n                } else if (state === 1) {\n                    state = value ? 0 : 2;\n                    continue;\n                }\n\n                // value will be 2 or 3\n                if (!value) {\n                    state = 3;\n                } else if (value === 1) {\n                    if (lastNALuOffset >= 0) {\n                        this.lastNALuState = state;\n                        this.spitNalu_(payload.subarray(lastNALuOffset, i - 1 - state), pts, dts);\n                    } else {\n                        // naluOffset is undefined => this is the first start code found in this PES packet\n                        // first check if start code delimiter is overlapping between 2 PES packets,\n                        // ie it started in last packet (lastState not zero)\n                        // and ended at the beginning of this PES packet (i <= 4 - lastState)\n                        const lastUnit = this.lastNALu;\n                        if (lastUnit) {\n                            if (lastState && i <= 4 - lastState) {\n                                // start delimiter overlapping between PES packets\n                                // strip start delimiter bytes from the end of last NAL unit\n                                // check if lastUnit had a state different from zero\n                                if (lastNALuState) {\n                                    // strip last bytes\n                                    lastUnit.rawData = lastUnit.rawData.subarray(\n                                        0,\n                                        lastUnit.rawData.byteLength - lastState\n                                    );\n                                }\n                            }\n\n                            // If NAL units are not starting right at the\n                            // beginning of the PES packet, push preceding data\n                            // into previous NAL unit.\n                            let overflow = i - state - 1;\n                            if (overflow > 0) {\n                                logger.log(`overflow NALU found: ${overflow}/${pts}/${dts}`);\n                                let cb = new CacheBuffer();\n\n                                cb.append(lastUnit.rawData);\n                                cb.append(payload.subarray(0, overflow));\n                                let bytes = cb.toNewBytes();\n                                cb.clear(); // gc\n\n                                lastUnit.rawData = bytes;\n                            }\n                        }\n                    }\n\n                    // reset state & record last unit start byte offset.\n                    if (i < len) {\n                        // console.log(`'find NALU @ offset: ${i}`);\n                        lastNALuOffset = i;\n                        state = 0;\n                    }\n                } else {\n                    state = 0;\n                }\n            } while (i < len);\n\n            if (lastNALuOffset >= 0 && state >= 0) {\n                this.lastNALuState = state;\n                this.spitNalu_(payload.subarray(lastNALuOffset, len), pts, dts);\n            }\n\n            this.lastState = state;\n        } else {\n            let startPos = 0,\n                size = 0,\n                endPos = 0,\n                byteLength = payload.length;\n            do {\n                size = 0;\n                for (let k = 0; k < naluSizeLength; k++) {\n                    size = size | (payload[startPos + k] << ((naluSizeLength - k - 1) * 8));\n                }\n                // size = (data_byte[i] << 24) | (data_byte[i + 1] << 16) | (data_byte[i + 2] << 8) | data_byte[i + 3];\n                startPos += naluSizeLength;\n                endPos = startPos + size;\n                if (endPos > byteLength) {\n                    endPos = byteLength;\n                }\n\n                this.spitNalu_(payload.subarray(startPos, endPos), pts, dts);\n                startPos = endPos;\n            } while (startPos < byteLength);\n        }\n\n        this.emit('done');\n    }\n\n    reset() {\n        this.lastState = null;\n        this.lastNALu = null;\n        this.lastNALuState = null;\n    }\n}\n","/**\n * @file: created at Monday, 25th May 2020 12:36:52 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * AVCVideoPacket structure.\n */\nimport { AVCCodec, AVCCodecData, AVCDecoderConfigurationRecord } from '../../codec/avc';\nimport NALU from '../../codec/avc/nalu';\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\nimport { PipelineContext } from '../types/flv-pipeline';\n\n// 0 : AVCDecoderConfigurationRecord（AVC sequence header）\n// 1 : One or more NALUs (Full frames are required)\n// 2 : AVC end of sequence\nexport enum AVCPacketTypes {\n    SEQUENCE_HEAD = 0, // 0 : AVCDecoderConfigurationRecord（AVC sequence header）\n    NALU = 1, // 1 : One or more NALUs (Full frames are required)\n    SEQUENCE_END = 2 // 2 : AVC end of sequence\n}\n\n/**\n * ISO/IEC 14496-15  5.2.4.1.1 Syntax\n * @param data\n */\nexport function parseAVCDecoderConfigurationRecord(data: Uint8Array): AVCDecoderConfigurationRecord {\n    let version = data[0];\n    let profile = data[1];\n    let profileCompatibility = data[2];\n    let level = data[3];\n    let naluSizeLength = 1 + (data[4] & 0x03);\n    let ppsNalus = [],\n        spsNalus = [];\n\n    let pos = 5;\n    let numOfSPS = data[pos] & 0x1f;\n\n    if (numOfSPS === 0) {\n        logger.error(`Flv: Invalid AVCDecoderConfigurationRecord: No SPS`);\n    } else if (numOfSPS > 0) {\n        if (numOfSPS > 1) {\n            logger.warn(`Flv: Strange AVCDecoderConfigurationRecord: SPS Count = ${numOfSPS}`);\n        }\n\n        pos++;\n        for (let i = 0; i < numOfSPS; i++) {\n            let spsDataLength = (data[pos] << 8) | data[pos + 1];\n            pos += 2;\n\n            spsNalus.push(data.subarray(pos, pos + spsDataLength));\n            pos += spsDataLength;\n        }\n    }\n\n    let numOfPPS = data[pos];\n\n    if (numOfPPS === 0) {\n        logger.error(`Flv: Invalid AVCDecoderConfigurationRecord: No PPS`);\n    } else if (numOfPPS > 0) {\n        if (numOfPPS > 1) {\n            logger.warn(`Flv: Strange AVCDecoderConfigurationRecord: PPS Count = ${numOfPPS}`);\n        }\n\n        pos++;\n        for (let i = 0; i < numOfPPS; i++) {\n            let ppsDataLength = (data[pos] << 8) | data[pos + 1];\n            pos += 2;\n\n            ppsNalus.push(data.subarray(pos, pos + ppsDataLength));\n            pos += ppsDataLength;\n        }\n    }\n\n    return {\n        version,\n        profile,\n        profileCompatibility,\n        level,\n        naluSizeLength,\n        spsNalus,\n        ppsNalus\n    };\n}\n\nconst avcCodec = new AVCCodec();\nconst naluList_: NALU[] = [];\n\navcCodec.on('nalu', (nalu: NALU) => {\n    naluList_.push(nalu);\n});\n\n/**\n * @extends DataViewReader\n */\nexport default class AVCVideoPacket extends DataViewReader {\n    avcPacketType: AVCPacketTypes;\n    decoderConfigurationRecord?: AVCDecoderConfigurationRecord;\n    cts: number;\n    pts: number;\n    dts: number;\n    payload: Uint8Array;\n    naluList?: NALU[];\n\n    private avcCodec?: AVCCodec;\n\n    /**\n     * @param buffer\n     */\n    constructor(pipeCtx: PipelineContext, buffer: Uint8Array, timestamp: number) {\n        super();\n\n        const { flv, options } = pipeCtx;\n\n        this.avcPacketType = buffer[0];\n\n        if (this.avcPacketType === 1) {\n            let cts_uint32 = this.readUint32(buffer, 0) & 0x00ffffff;\n            this.cts = (cts_uint32 << 8) >> 8; // convert to 24-bit signed int\n        } else {\n            this.cts = 0;\n        }\n\n        this.dts = timestamp;\n        this.pts = this.dts + this.cts;\n\n        this.payload = buffer.subarray(4);\n\n        if (this.avcPacketType === 0) {\n            this.decoderConfigurationRecord = parseAVCDecoderConfigurationRecord(this.payload);\n\n            flv.decoderConfigurationRecord = this.decoderConfigurationRecord;\n        } else {\n            if (options.decodeCodec) {\n                this.naluList = [];\n\n                let raw: AVCCodecData = {\n                    pts: this.pts,\n                    dts: this.dts,\n                    payload: this.payload\n                };\n\n                if (!this.decoderConfigurationRecord) {\n                    if (flv.decoderConfigurationRecord) {\n                        raw.naluSizeLength = flv.decoderConfigurationRecord.naluSizeLength;\n                    }\n\n                    avcCodec.push(raw);\n\n                    // Clone nalu to videoData\n                    for (let i = 0; i < naluList_.length; i++) {\n                        this.naluList.push(naluList_[i]);\n                    }\n\n                    // empty cache\n                    naluList_.splice(0, naluList_.length);\n                }\n            }\n        }\n    }\n}\n","/**\n * @file: tag.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * video data structure.\n */\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\nimport { PipelineContext } from '../types/flv-pipeline';\nimport AVCVideoPacket from './flv-tag-avc-video-packet';\n\n// If CodecID == 2 H263VIDEOPACKET\n// If CodecID == 3 SCREENVIDEOPACKET\n// If CodecID == 4 VP6FLVVIDEOPACKET\n// If CodecID == 5 VP6FLVALPHAVIDEOPACKET\n// If CodecID == 6 SCREENV2VIDEOPACKET\n// if CodecID == 7 AVCVIDEOPACKET\n// Video frame payload or UI8 (see note following table)\n\nexport enum VideoCodecIDs {\n    AVC = 7 // AVC_VIDEO_PACKET\n}\n\n/**\n * @extends DataViewReader\n */\nexport default class FlvTagVideoData extends DataViewReader {\n    frameType: number;\n    isKeyframe: boolean;\n    codecId: VideoCodecIDs;\n    videoData: AVCVideoPacket;\n\n    /**\n     * @param buffer\n     */\n    constructor(pipeCtx: PipelineContext, buffer: Uint8Array, timestamp: number) {\n        super();\n\n        this.frameType = (buffer[0] >> 4) & 0x0f;\n        this.isKeyframe = this.frameType === 1;\n        this.codecId = buffer[0] & 0x0f;\n\n        switch (this.codecId) {\n            case VideoCodecIDs.AVC:\n                this.videoData = new AVCVideoPacket(pipeCtx, buffer.subarray(1), timestamp);\n                break;\n            default:\n                logger.error(`flv tag videoData encounter unknown codecId ${this.codecId}`);\n        }\n    }\n}\n","/**\n * @file: created at Saturday, 9th May 2020 3:49:22 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * FLV Tags Stream.\n */\nimport FlvTagTypes from '../../enum/flv-tag-types';\nimport { Context, GlobalOptions } from '../../types/globals';\nimport logger from '../../util/logger';\nimport Stream from '../../util/stream';\nimport { AMFdeSerialize } from '../structs/flv-amf';\nimport FlvTag from '../structs/flv-tag';\nimport FlvTagAudioData from '../structs/flv-tag-audio-data';\nimport FlvTagVideoData from '../structs/flv-tag-video-data';\nimport AVContext from '../types/av-context';\nimport { PipelineContext, TagEmitData } from '../types/flv-pipeline';\n\nclass TagsStream extends Stream {\n    private flv_: AVContext;\n    private options_: GlobalOptions;\n    private pipeCtx: PipelineContext;\n\n    constructor(ctx: Context, flv: AVContext, options: GlobalOptions = {}) {\n        super();\n\n        this.flv_ = flv;\n        this.options_ = options;\n\n        this.pipeCtx = {\n            ctx,\n            flv,\n            options\n        };\n    }\n\n    push(tag: FlvTag) {\n        switch (tag.tagType) {\n            case FlvTagTypes.SCRIPT_DATA:\n                this.parseScriptData_(tag.payload);\n                break;\n            case FlvTagTypes.VIDEO:\n                this.parseVideoData_(tag);\n                break;\n            case FlvTagTypes.AUDIO:\n                this.parseAudioData_(tag);\n                break;\n            default:\n                logger.error(`still not supported flv tag type ${tag.tagType}`);\n        }\n    }\n\n    flush() {\n        const self = this;\n\n        self.emit('done');\n    }\n\n    reset() {\n        this.emit('reset');\n    }\n\n    private parseScriptData_(buffer: Uint8Array) {\n        const { flv_ } = this;\n        let result = AMFdeSerialize(buffer);\n\n        flv_.emit('data', {\n            type: 'tag',\n            tagType: FlvTagTypes.SCRIPT_DATA,\n            ...result\n        });\n    }\n\n    private parseVideoData_(tag: FlvTag) {\n        const { flv_ } = this;\n        const data = new FlvTagVideoData(this.pipeCtx, tag.payload, tag.timestamp);\n\n        let ret: TagEmitData = {\n            type: 'tag',\n            tagType: FlvTagTypes.VIDEO,\n            timestamp: tag.timestamp,\n            ...data\n        };\n\n        flv_.emit('data', ret);\n    }\n\n    private parseAudioData_(tag: FlvTag) {\n        const { /*options_,*/ flv_ } = this;\n\n        const data = new FlvTagAudioData(tag.payload, tag.timestamp);\n        const { /*sampleSize,*/ soundData } = data;\n\n        if (soundData.audioSpecificConfig) {\n            flv_.audioSpecificConfig = soundData.audioSpecificConfig;\n        } else {\n            // let stubTime = options_.config.stubTime;\n            // if (isNumber(stubTime)) {\n            // \tlet start = soundData.pts;\n            // \tlet duration =\n            // \t\tsoundData.pts +\n            // \t\tsoundData.payload.byteLength / (sampleSize / 8) / flv_.audioSpecificConfig.sampleCount;\n            // \tlet end = start + duration;\n            // \tif (end < stubTime) {\n            // \t\tlogger.warn(`drop aac tag, start/end/stubTime(${start}/${end}/${stubTime})`);\n            // \t\treturn;\n            // \t}\n            // }\n        }\n\n        let ret: TagEmitData = {\n            type: 'tag',\n            tagType: FlvTagTypes.AUDIO,\n            timestamp: tag.timestamp,\n            ...data\n        };\n\n        flv_.emit('data', ret);\n    }\n}\n\nexport default TagsStream;\n","/**\n * @file: created at Thursday, 14th May 2020 10:18:11 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * FLV Head Structure.\n */\nimport DataViewReader from '../../util/dv';\n\n/**\n * @extends DataViewReader\n */\nclass FlvHead extends DataViewReader {\n    signature: string;\n    version: number;\n    hasAudio: boolean;\n    hasVideo: boolean;\n    offset: number;\n\n    /**\n     * @param buffer\n     */\n    constructor(buffer: Uint8Array) {\n        super();\n\n        this.signature =\n            String.fromCharCode(buffer[0]) + // F\n            String.fromCharCode(buffer[1]) + // L\n            String.fromCharCode(buffer[2]); //V\n\n        this.version = buffer[3];\n        this.hasAudio = (buffer[4] & 4) >>> 2 == 1;\n        this.hasVideo = (buffer[4] & 1) == 1;\n        this.offset = this.readUint32(buffer, 5);\n    }\n\n    valid(): boolean {\n        return this.signature === 'FLV';\n    }\n}\n\nexport default FlvHead;\n","/**\n * flv demuxer.\n */\nimport DemuxFacade from '../demux-facade';\nimport muxErrorCode from '../mux-error-code';\nimport { GlobalOptions, PushConf } from '../types/globals';\nimport { isNumber } from '../util/is';\nimport logger from '../util/logger';\nimport { FLVParseStage, HEAD_LEN, MIN_BODY_LEN } from './flv-const';\nimport BodyStream from './streams/body';\nimport TagsStream from './streams/tag';\nimport FlvHead from './structs/flv-head';\nimport AVContext from './types/av-context';\n\n/**\n * flv\n */\nexport class FLVDemux extends DemuxFacade {\n    // private complex_: FlvComplex;\n    private flv_: AVContext;\n    private tags_: TagsStream;\n    private body_: BodyStream;\n\n    constructor(options: GlobalOptions = {}) {\n        super(options);\n\n        this.flv_ = new AVContext();\n        this.flv_.stage = FLVParseStage.HEAD;\n\n        // this. = 0;\n\n        this.body_ = new BodyStream(this.ctx_, this.flv_, options);\n        this.tags_ = new TagsStream(this.ctx_, this.flv_, options);\n\n        // Compose pipeline\n        this.pipe(this.body_);\n        this.body_.pipe(this.tags_);\n\n        super.listenEndStream_();\n    }\n\n    get endStream() {\n        return this.flv_;\n    }\n\n    /**\n     * @param buffer\n     * @param conf\n     * @param conf.offsetByte\n     */\n    push(buffer: ArrayBuffer | Uint8Array, conf: PushConf = {}) {\n        const { options_, ctx_, flv_, cache_buffer_ } = this;\n        const data: Uint8Array = super.constraintPushData_(buffer);\n        let cacheByteLength = this.cache_buffer_.byteLength;\n\n        logger.log(`flv demux received ${data.byteLength} bytes, cache ${cacheByteLength} bytes.`);\n\n        options_.config = conf;\n        if (isNumber(conf.offsetPos)) {\n            if (cacheByteLength === 0) {\n                if (flv_.pos !== conf.offsetPos) {\n                    ctx_.emit('error', muxErrorCode.FLV_NOT_EXPECTED_ADJACENT_DATA);\n                }\n\n                flv_.pos = conf.offsetPos;\n            }\n        }\n\n        cache_buffer_.append(data);\n\n        // if file byteOffset is provided, then specify the stage of parser.\n        if (flv_.pos < HEAD_LEN) {\n            flv_.stage === FLVParseStage.HEAD;\n        } else {\n            flv_.stage === FLVParseStage.BODY;\n        }\n\n        while (true) {\n            if (flv_.stage === FLVParseStage.HEAD) {\n                if (cache_buffer_.byteLength >= HEAD_LEN) {\n                    // has enough header\n                    let chunk = cache_buffer_.cut(HEAD_LEN);\n\n                    let head = new FlvHead(chunk);\n\n                    if (head.valid()) {\n                        flv_.emit('data', {\n                            type: 'head',\n                            signature: head.signature,\n                            version: head.version,\n                            hasAudio: head.hasAudio,\n                            hasVideo: head.hasVideo,\n                            offset: head.offset\n                        });\n\n                        // Change parse state -> body\n                        flv_.stage = FLVParseStage.BODY;\n                        flv_.pos = HEAD_LEN;\n                    } else {\n                        ctx_.emit('error', muxErrorCode.FLV_HEAD_SIGNATURE);\n                        break;\n                    }\n                } else {\n                    break;\n                }\n            } else if (flv_.stage === FLVParseStage.BODY) {\n                // At least has 4 body byte to parse\n                if (cache_buffer_.byteLength >= MIN_BODY_LEN) {\n                    let cbLen = cache_buffer_.byteLength;\n                    let nextBytes = cache_buffer_.bytes;\n\n                    cache_buffer_.clear();\n\n                    if (nextBytes) {\n                        this.emit('data', nextBytes);\n                    }\n\n                    flv_.pos += cbLen;\n                }\n\n                break;\n            }\n        }\n    }\n}\n"],"names":["Events","console","global","FlvTagTypes"],"mappings":"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"}