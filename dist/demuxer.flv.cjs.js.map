{"version":3,"file":"demuxer.flv.cjs.js","sources":["../src/enum/events.ts","../src/util/event-emitter.ts","../src/types/globals.ts","../src/util/is.ts","../src/util/cache-buffer.ts","../src/util/multi-map.ts","../src/util/event-manager.ts","../src/util/global.ts","../src/util/logger.ts","../src/util/stream.ts","../src/demux-facade.ts","../src/mux-error-code.ts","../src/flv/flv-const.ts","../src/util/dv.ts","../src/enum/flv-tag-types.ts","../src/flv/structs/flv-tag.ts","../src/flv/streams/body.ts","../src/flv/structs/flv-amf.ts","../src/flv/types/av-context.ts","../src/codec/aac/aac.ts","../src/flv/structs/flv-tag-aac-audio-data.ts","../src/flv/structs/flv-tag-audio-data.ts","../src/codec/avc/ep3b.ts","../src/util/exp-golumb.ts","../src/codec/avc/sps.ts","../src/codec/avc/pps.ts","../src/codec/avc/sei.ts","../src/codec/avc/nalu.ts","../src/codec/avc.ts","../src/flv/structs/flv-tag-avc-video-packet.ts","../src/flv/structs/flv-tag-video-data.ts","../src/flv/streams/tag.ts","../src/flv/structs/flv-head.ts","../src/flv/demux.ts"],"sourcesContent":["/**\n * @file= events.js, created at Monday, 23rd December 2019 3=47=23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nexport enum Events {\n\tERROR = 'ERROR',\n\tINFO = 'INFO',\n\tDATA = 'DATA',\n\tDEMUX_DATA = 'DEMUX_DATA',\n\tDONE = 'DONE'\n}\n","/**\n * @copyright https://github.com/nodejs/node/blob/master/lib/events.js\n */\n/* eslint-disable */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill;\nvar objectKeys = Object.keys || objectKeysPolyfill;\nvar bind = Function.prototype.bind || functionBindPolyfill;\n\n// By default Dispatchers will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nlet defaultMaxListeners = 10;\n\nexport default class EventEmitter {\n\tstatic listenerCount(emitter, type) {\n\t\tif (typeof emitter.listenerCount === 'function') {\n\t\t\treturn emitter.listenerCount(type);\n\t\t} else {\n\t\t\treturn listenerCount.call(emitter, type);\n\t\t}\n\t}\n\n\tstatic defaultMaxListeners: number;\n\n\t_maxListeners?: number;\n\t_eventsCount: number;\n\t_events: any;\n\n\tconstructor() {\n\t\tif (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n\t\t\tthis._events = objectCreate(null);\n\t\t\tthis._eventsCount = 0;\n\t\t}\n\n\t\tthis._maxListeners = this._maxListeners || undefined;\n\t}\n\n\t// // Obviously not all Emitters should be limited to 10. This function allows\n\t// // that to be increased. Set to zero for unlimited.\n\t// setMaxListeners(n) {\n\t//     if (typeof n !== 'number' || n < 0 || isNaN(n))\n\t//         throw new TypeError('\"n\" argument must be a positive number');\n\t//     this._maxListeners = n;\n\t//     return this;\n\t// }\n\t//\n\t// getMaxListeners() {\n\t//     return $getMaxListeners(this);\n\t// }\n\n\temit(type: string, ...rest) {\n\t\tvar er, handler, len, args, i, events;\n\t\tvar doError = type === 'error';\n\n\t\tevents = this._events;\n\t\tif (events) doError = doError && events.error == null;\n\t\telse if (!doError) return false;\n\n\t\t// If there is no 'error' event listener then throw.\n\t\tif (doError) {\n\t\t\tif (arguments.length > 1) er = arguments[1];\n\t\t\tif (er instanceof Error) {\n\t\t\t\tthrow er; // Unhandled 'error' event\n\t\t\t} else {\n\t\t\t\t// At least give some kind of context to the user\n\t\t\t\tvar err = new Error('Unhandled \"error\" event. (' + er + ')');\n\t\t\t\terr['context'] = er;\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\n\t\thandler = events[type];\n\n\t\tif (!handler) return false;\n\n\t\tvar isFn = typeof handler === 'function';\n\t\tlen = arguments.length;\n\t\tswitch (len) {\n\t\t\t// fast cases\n\t\t\tcase 1:\n\t\t\t\temitNone(handler, isFn, this);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\temitOne(handler, isFn, this, arguments[1]);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\temitTwo(handler, isFn, this, arguments[1], arguments[2]);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\temitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n\t\t\t\tbreak;\n\t\t\t// slower\n\t\t\tdefault:\n\t\t\t\targs = new Array(len - 1);\n\t\t\t\tfor (i = 1; i < len; i++) args[i - 1] = arguments[i];\n\t\t\t\temitMany(handler, isFn, this, args);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\ton(type: string, listener: Function) {\n\t\treturn _addListener(this, type, listener);\n\t}\n\n\tonce(type, listener) {\n\t\tif (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\t\tthis.on(type, _onceWrap(this, type, listener));\n\t\treturn this;\n\t}\n\n\toff(type, listener) {\n\t\treturn _removeListener.call(this, type, listener);\n\t}\n\n\tremoveAllListeners(type) {\n\t\tvar listeners, events, i;\n\n\t\tevents = this._events;\n\t\tif (!events) return this;\n\n\t\t// not listening for off, no need to emit\n\t\tif (!events.off) {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\tthis._events = objectCreate(null);\n\t\t\t\tthis._eventsCount = 0;\n\t\t\t} else if (events[type]) {\n\t\t\t\tif (--this._eventsCount === 0) this._events = objectCreate(null);\n\t\t\t\telse delete events[type];\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t// emit off for all listeners on all events\n\t\tif (arguments.length === 0) {\n\t\t\tvar keys = objectKeys(events);\n\t\t\tvar key;\n\t\t\tfor (i = 0; i < keys.length; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tif (key === 'off') continue;\n\t\t\t\tthis.removeAllListeners(key);\n\t\t\t}\n\t\t\tthis.removeAllListeners('off');\n\t\t\tthis._events = objectCreate(null);\n\t\t\tthis._eventsCount = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tlisteners = events[type];\n\n\t\tif (typeof listeners === 'function') {\n\t\t\tthis.off(type, listeners);\n\t\t} else if (listeners) {\n\t\t\t// LIFO order\n\t\t\tfor (i = listeners.length - 1; i >= 0; i--) {\n\t\t\t\tthis.off(type, listeners[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tlisteners(type) {\n\t\treturn _listeners(this, type, true);\n\t}\n\n\trawListeners(type) {\n\t\treturn _listeners(this, type, false);\n\t}\n\n\tlistenerCount() {\n\t\treturn EventEmitter.listenerCount.apply(this, arguments);\n\t}\n}\n\nlet hasDefineProperty;\ntry {\n\tvar o = {};\n\tif (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n\thasDefineProperty = o['x'] === 0;\n} catch (err) {\n\thasDefineProperty = false;\n}\nif (hasDefineProperty) {\n\tObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn defaultMaxListeners;\n\t\t},\n\t\tset: function (arg) {\n\t\t\t// check whether the input is a positive number (whose value is zero or\n\t\t\t// greater and not a NaN).\n\t\t\tif (typeof arg !== 'number' || arg < 0 || arg !== arg)\n\t\t\t\tthrow new TypeError('\"defaultMaxListeners\" must be a positive number');\n\t\t\tdefaultMaxListeners = arg;\n\t\t}\n\t});\n} else {\n\tEventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\nfunction $getMaxListeners(that) {\n\tif (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n\treturn that._maxListeners;\n}\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n\tif (isFn) handler.call(self);\n\telse {\n\t\tvar len = handler.length;\n\t\tvar listeners = arrayClone(handler, len);\n\t\tfor (var i = 0; i < len; ++i) {\n\t\t\ttry {\n\t\t\t\tlisteners[i].call(self);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction emitOne(handler, isFn, self, arg1) {\n\tif (isFn) handler.call(self, arg1);\n\telse {\n\t\tvar len = handler.length;\n\t\tvar listeners = arrayClone(handler, len);\n\t\tfor (var i = 0; i < len; ++i) {\n\t\t\ttry {\n\t\t\t\tlisteners[i].call(self, arg1);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n\tif (isFn) handler.call(self, arg1, arg2);\n\telse {\n\t\tvar len = handler.length;\n\t\tvar listeners = arrayClone(handler, len);\n\t\tfor (var i = 0; i < len; ++i) {\n\t\t\ttry {\n\t\t\t\tlisteners[i].call(self, arg1, arg2);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n\tif (isFn) handler.call(self, arg1, arg2, arg3);\n\telse {\n\t\tvar len = handler.length;\n\t\tvar listeners = arrayClone(handler, len);\n\t\tfor (var i = 0; i < len; ++i) {\n\t\t\ttry {\n\t\t\t\tlisteners[i].call(self, arg1, arg2, arg3);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction emitMany(handler, isFn, self, args) {\n\tif (isFn) handler.apply(self, args);\n\telse {\n\t\tvar len = handler.length;\n\t\tvar listeners = arrayClone(handler, len);\n\t\tfor (var i = 0; i < len; ++i) {\n\t\t\ttry {\n\t\t\t\tlisteners[i].apply(self, args);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction _addListener(target: EventEmitter, type, listener: Function) {\n\tvar m;\n\tvar events;\n\tvar existing;\n\n\tif (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\n\tevents = target._events;\n\tif (!events) {\n\t\tevents = target._events = objectCreate(null);\n\t\ttarget._eventsCount = 0;\n\t} else {\n\t\t// To avoid recursion in the case that type === \"newListener\"! Before\n\t\t// adding it to the listeners, first emit \"newListener\".\n\t\tif (events.newListener) {\n\t\t\ttarget.emit('newListener', type, listener['listener'] ? listener['listener'] : listener);\n\n\t\t\t// Re-assign `events` because a newListener handler could have caused the\n\t\t\t// this._events to be assigned to a new object\n\t\t\tevents = target._events;\n\t\t}\n\t\texisting = events[type];\n\t}\n\n\tif (!existing) {\n\t\t// Optimize the case of one listener. Don't need the extra array object.\n\t\texisting = events[type] = listener;\n\t\t++target._eventsCount;\n\t} else {\n\t\tif (typeof existing === 'function') {\n\t\t\t// Adding the second element, need to change to array.\n\t\t\texisting = events[type] = [existing, listener];\n\t\t} else {\n\t\t\texisting.push(listener);\n\t\t}\n\n\t\t// Check for listener leak\n\t\tif (!existing.warned) {\n\t\t\tm = $getMaxListeners(target);\n\t\t\tif (m && m > 0 && existing.length > m) {\n\t\t\t\texisting.warned = true;\n\n\t\t\t\tclass CustomError extends Error {\n\t\t\t\t\temitter: any;\n\t\t\t\t\ttype: string;\n\t\t\t\t\tcount: number;\n\t\t\t\t}\n\t\t\t\tlet w: CustomError = new CustomError(\n\t\t\t\t\t'Possible Dispatcher memory leak detected. ' +\n\t\t\t\t\t\texisting.length +\n\t\t\t\t\t\t' \"' +\n\t\t\t\t\t\tString(type) +\n\t\t\t\t\t\t'\" listeners ' +\n\t\t\t\t\t\t'added. Use emitter.setMaxListeners() to ' +\n\t\t\t\t\t\t'increase limit.'\n\t\t\t\t);\n\t\t\t\tw.name = 'MaxListenersExceededWarning';\n\t\t\t\tw.emitter = target;\n\t\t\t\tw.type = type;\n\t\t\t\tw.count = existing.length;\n\n\t\t\t\tif (typeof console === 'object' && console.warn) {\n\t\t\t\t\tconsole.warn('%s: %s', w.name, w.message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn target;\n}\n\nfunction _removeListener(type, listener) {\n\tvar list, events, position, i, originalListener;\n\n\tif (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\n\tevents = this._events;\n\tif (!events) return this;\n\n\tlist = events[type];\n\tif (!list) return this;\n\n\tif (list === listener || list.listener === listener) {\n\t\tif (--this._eventsCount === 0) this._events = objectCreate(null);\n\t\telse {\n\t\t\tdelete events[type];\n\t\t\tif (events.off) this.emit('off', type, list.listener || listener);\n\t\t}\n\t} else if (typeof list !== 'function') {\n\t\tposition = -1;\n\n\t\tfor (i = list.length - 1; i >= 0; i--) {\n\t\t\tif (list[i] === listener || list[i].listener === listener) {\n\t\t\t\toriginalListener = list[i].listener;\n\t\t\t\tposition = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (position < 0) return this;\n\n\t\tif (position === 0) list.shift();\n\t\telse spliceOne(list, position);\n\n\t\tif (list.length === 1) events[type] = list[0];\n\n\t\tif (events.off) this.emit('off', type, originalListener || listener);\n\t}\n\n\treturn this;\n}\n\nfunction onceWrapper() {\n\tif (!this.fired) {\n\t\tthis.target.off(this.type, this.wrapFn);\n\t\tthis.fired = true;\n\t\tswitch (arguments.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this.listener.call(this.target);\n\t\t\tcase 1:\n\t\t\t\treturn this.listener.call(this.target, arguments[0]);\n\t\t\tcase 2:\n\t\t\t\treturn this.listener.call(this.target, arguments[0], arguments[1]);\n\t\t\tcase 3:\n\t\t\t\treturn this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);\n\t\t\tdefault:\n\t\t\t\tvar args = new Array(arguments.length);\n\t\t\t\tfor (var i = 0; i < args.length; ++i) args[i] = arguments[i];\n\t\t\t\tthis.listener.apply(this.target, args);\n\t\t}\n\t}\n}\n\nfunction _onceWrap(target, type, listener) {\n\tvar state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n\tvar wrapped = bind.call(onceWrapper, state);\n\twrapped.listener = listener;\n\tstate.wrapFn = wrapped;\n\treturn wrapped;\n}\n\nfunction _listeners(target, type, unwrap) {\n\tvar events = target._events;\n\n\tif (!events) return [];\n\n\tvar evlistener = events[type];\n\tif (!evlistener) return [];\n\n\tif (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n\treturn unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nfunction listenerCount(type) {\n\tvar events = this._events;\n\n\tif (events) {\n\t\tvar evlistener = events[type];\n\n\t\tif (typeof evlistener === 'function') {\n\t\t\treturn 1;\n\t\t} else if (evlistener) {\n\t\t\treturn evlistener.length;\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n\tfor (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) list[i] = list[k];\n\tlist.pop();\n}\n\nfunction arrayClone(arr, n) {\n\tvar copy = new Array(n);\n\tfor (var i = 0; i < n; ++i) copy[i] = arr[i];\n\treturn copy;\n}\n\nfunction unwrapListeners(arr) {\n\tvar ret = new Array(arr.length);\n\tfor (var i = 0; i < ret.length; ++i) {\n\t\tret[i] = arr[i].listener || arr[i];\n\t}\n\treturn ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n\tvar F = function () {};\n\tF.prototype = proto;\n\treturn new F();\n}\n\nfunction objectKeysPolyfill(obj) {\n\tvar keys = [];\n\tfor (var k in obj)\n\t\tif (Object.prototype.hasOwnProperty.call(obj, k)) {\n\t\t\tkeys.push(k);\n\t\t}\n\treturn k;\n}\n\nfunction functionBindPolyfill(context) {\n\tvar fn = this;\n\treturn function () {\n\t\treturn fn.apply(context, arguments);\n\t};\n}\n","import EventEmitter from '../util/event-emitter';\n\nexport class Context extends EventEmitter {}\n\nexport type PushConf = Partial<{\n\tdone: boolean;\n\tstubTime: number;\n\toffsetPos: number; // Represents the start byte of the pushed data relative to the entire file\n}>;\n\nexport type GlobalOptions = Partial<{\n\tdebug: boolean;\n\tdecodeCodec: boolean;\n\tconfig: PushConf;\n}>;\n\nexport interface IDemux {\n\t/**\n\t * Pipe the arrayBuffer to the demuxer.\n\t * @param buf\n\t * @param conf\n\t */\n\tpush(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\n\n\treset(): void;\n\n\tdestroy(): void;\n}\n","/**\n * @file: is.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = Object.prototype.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nexport function isObjectLike(value: any): boolean {\n\treturn !!value && typeof value == 'object';\n}\n\nexport function isEmptyObject(obj: object): boolean {\n\tfor (var prop in obj) {\n\t\tif (obj.hasOwnProperty(prop)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn JSON.stringify(obj) === JSON.stringify({});\n}\n\n/**\n * @param url\n */\nexport function isHttps(url?: string): boolean {\n\treturn /^https/gi.test(url || window.location.protocol);\n}\n\n/**\n * @param num\n */\nexport function isNumber(num: any): boolean {\n\treturn typeof num === 'number' && !isNaN(num);\n}\n\n/**\n * @param value\n */\nexport function isArrayBuffer(value: any): boolean {\n\treturn isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object arraybuffer]';\n}\n\n/**\n * @param value\n */\nexport function isUint8Array(value: any): boolean {\n\treturn isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object uint8array]';\n}\n","/**\n * @file: cache-buffer.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport { isNumber } from './is';\n\n/**\n * Cache Buffer util.\n * It's applicable for streaming data cutting and retaining the data,\n * the algorithm minimizes memory application as much as possible.\n */\n\nexport default class CacheBuffer {\n\tget byteLength(): number {\n\t\tif (!isNumber(this.byteLength_)) {\n\t\t\tlet len = 0;\n\n\t\t\tfor (let i = 0, item: Uint8Array; i < this.list_.length; i++) {\n\t\t\t\titem = this.list_[i];\n\t\t\t\tlen += item.byteLength;\n\t\t\t}\n\t\t\tthis.byteLength_ = len;\n\t\t}\n\n\t\treturn this.byteLength_;\n\t}\n\n\t/**\n\t * maybe return new allocated memory or original memory\n\t */\n\tget bytes(): Uint8Array | null {\n\t\tconst { bufferList } = this;\n\t\tlet bytes = null;\n\n\t\tif (bufferList.length > 0) {\n\t\t\tif (bufferList.length === 0) {\n\t\t\t\tbytes = bufferList[0];\n\t\t\t} else {\n\t\t\t\tbytes = this.toNewBytes();\n\t\t\t}\n\t\t}\n\n\t\treturn bytes;\n\t}\n\n\tget empty() {\n\t\treturn this.list_.length === 0;\n\t}\n\n\tget bufferList() {\n\t\treturn this.list_;\n\t}\n\n\t/**\n\t * Used to cache calculations, reduce the number of CPU calculations.\n\t * When internal data changes, the value needs to be cleared and recalculated.\n\t */\n\tprivate byteLength_: number | null;\n\n\tprivate list_: Array<Uint8Array> = [];\n\n\tclear() {\n\t\tlet len = this.list_.length;\n\t\tif (len > 0) {\n\t\t\tthis.list_.splice(0, len);\n\t\t}\n\t\tthis.byteLength_ = null;\n\t}\n\n\ttoNewBytes(): Uint8Array | null {\n\t\tlet bytes = null;\n\t\tlet tryCount: number = 0;\n\t\tlet maxTryCount: number = 50;\n\n\t\t// The following retry strategies are provided for failed memory applications\n\t\t// In terms of a better strategy, a failed memory application retry should be\n\t\t// an asynchronous process, which does not return until the application succeeds.\n\t\t// But the original design of the library is synchronous.\n\t\twhile (bytes === null) {\n\t\t\ttry {\n\t\t\t\ttryCount++;\n\t\t\t\tbytes = new Uint8Array(this.byteLength);\n\t\t\t} catch (e) {\n\t\t\t\tif (tryCount > maxTryCount) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0, offset = 0; i < this.list_.length; i++) {\n\t\t\tlet payload = this.list_[i];\n\n\t\t\tbytes.set(payload, offset);\n\t\t\toffset += payload.byteLength;\n\t\t}\n\n\t\treturn bytes;\n\t}\n\n\tappend(newBuffer: Uint8Array | CacheBuffer): void {\n\t\tif (newBuffer instanceof CacheBuffer) {\n\t\t\tthis.list_ = this.list_.concat(newBuffer.bufferList);\n\t\t} else {\n\t\t\tthis.list_.push(newBuffer);\n\t\t}\n\n\t\tthis.byteLength_ = null;\n\t}\n\n\t/**\n\t * This function cuts a complete TypedArray from CacheBuffer and retains the remainder of CacheBuffer.\n\t * The following points should be noted when using this function:\n\t * 1. If the cut needs to return the cut-out part, the cut length should be as small as possible to reduce the errors in memory application.\n\t * 2. If the cutting is only to preserve the remaining parts, the cutting size is within the total number of bytes, without considering memory applications.\n\t * @param {number} fixedLength\n\t * @param {boolean} [needCutResult] - If not, just retain the remaining parts after cutting.\n\t */\n\tcut(fixedLength: number, needCutResult: boolean = true): Uint8Array {\n\t\tlet chunk = null;\n\n\t\tif (fixedLength > 0 && !this.empty) {\n\t\t\tlet list = this.list_;\n\n\t\t\tlet offset = 0;\n\t\t\tlet loopIndex = 0;\n\n\t\t\twhile (list.length > 0) {\n\t\t\t\tlet cur = list.shift();\n\n\t\t\t\tif (loopIndex === 0) {\n\t\t\t\t\tif (cur.byteLength >= fixedLength) {\n\t\t\t\t\t\tif (needCutResult) {\n\t\t\t\t\t\t\t// Here is the key point for optimize memory alloc\n\t\t\t\t\t\t\tchunk = cur.subarray(0, fixedLength);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (cur.byteLength > fixedLength) {\n\t\t\t\t\t\t\tcur = cur.subarray(fixedLength);\n\t\t\t\t\t\t\tlist.unshift(cur);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (needCutResult) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tchunk = new Uint8Array(fixedLength);\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tthrow `alloc_memory_error@ cache buffer: ${fixedLength} ${e.message}`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tchunk.set(cur, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset += cur.byteLength;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet subLen = fixedLength - offset;\n\n\t\t\t\t\tif (cur.byteLength >= subLen) {\n\t\t\t\t\t\tif (needCutResult) {\n\t\t\t\t\t\t\tchunk.set(cur.subarray(0, subLen), offset);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcur = cur.subarray(subLen);\n\n\t\t\t\t\t\tif (cur.byteLength > 0) {\n\t\t\t\t\t\t\tlist.unshift(cur);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (needCutResult) {\n\t\t\t\t\t\t\tchunk.set(cur, offset);\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset += cur.byteLength;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tloopIndex++;\n\t\t\t}\n\n\t\t\tthis.byteLength_ = null;\n\t\t}\n\n\t\treturn chunk;\n\t}\n}\n","/**\n * @fileOverview A simple multimap template.\n */\n\ninterface MapData {\n\t[index: string]: Array<any>;\n}\n\nexport default class MultiMap {\n\tprivate map_: MapData;\n\n\tconstructor() {\n\t\tthis.map_ = {};\n\t}\n\n\t/**\n\t * Add a key, value pair to the map.\n\t * @param key\n\t * @param value\n\t */\n\tpush(key: string, value: any) {\n\t\tif (this.map_.hasOwnProperty(key)) {\n\t\t\tthis.map_[key].push(value);\n\t\t} else {\n\t\t\tthis.map_[key] = [value];\n\t\t}\n\t}\n\n\t/**\n\t * Get a list of values by key.\n\t * @param key\n\t */\n\tget(key: string): Array<any> {\n\t\tlet list = this.map_[key];\n\t\t// slice() clones the list so that it and the map can each be modified\n\t\t// without affecting the other.\n\t\treturn list ? list.slice() : null;\n\t}\n\n\t/**\n\t * Get a list of all values.\n\t */\n\tgetAll(): Array<any> {\n\t\tlet list = [];\n\t\tfor (let key in this.map_) {\n\t\t\tlist.push.apply(list, this.map_[key]);\n\t\t}\n\t\treturn list;\n\t}\n\n\t/**\n\t * Remove a specific value, if it exists.\n\t * @param key\n\t * @param value\n\t */\n\tremove(key: string, value: any): void {\n\t\tlet list = this.map_[key];\n\t\tif (list) {\n\t\t\tfor (let i = 0; i < list.length; ++i) {\n\t\t\t\tif (list[i] == value) {\n\t\t\t\t\tlist.splice(i, 1);\n\t\t\t\t\t--i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Clear all keys and values from the multimap.\n\t */\n\tclear(): void {\n\t\tthis.map_ = {};\n\t}\n\n\t/**\n\t * @param callback\n\t */\n\tforEach(callback: Function): void {\n\t\tfor (let key in this.map_) {\n\t\t\tcallback(key, this.map_[key]);\n\t\t}\n\t}\n}\n","import MultiMap from './multi-map';\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n */\nclass Binding_ {\n\ttarget: any;\n\ttype: string;\n\tlistener: Function;\n\n\t/**\n\t * @param target - The event target.\n\t * @param type - The event type.\n\t * @param listener - The event listener.\n\t */\n\tconstructor(target: any, type: string, listener: Function) {\n\t\tthis.target = target;\n\t\tthis.type = type;\n\t\tthis.listener = listener;\n\n\t\tif (this.target.addEventListener) {\n\t\t\tthis.target.addEventListener(type, listener, false);\n\t\t} else if (this.target.on) {\n\t\t\tthis.target.on(type, listener, false);\n\t\t}\n\t}\n\n\t/**\n\t * Detaches the event listener from the event target.\n\t * This does nothing if the event listener is already detached.\n\t */\n\toff() {\n\t\tif (this.target.removeEventListener) {\n\t\t\tthis.target.removeEventListener(this.type, this.listener, false);\n\t\t} else if (this.target.off) {\n\t\t\tthis.target.off(this.type, this.listener, false);\n\t\t}\n\n\t\tthis.target = null;\n\t\tthis.listener = null;\n\t}\n}\n\n/**\n * Creates a new EventManager.\n * An EventManager maintains a collection of \"event bindings\" between event targets and event listeners.\n */\nexport default class EventManager {\n\tprivate bindingMap_: MultiMap;\n\t// static Binding_: Binding;\n\n\tconstructor() {\n\t\t/**\n\t\t * Maps an event type to an array of event bindings.\n\t\t */\n\t\tthis.bindingMap_ = new MultiMap();\n\t}\n\n\t/**\n\t * Detaches all event listeners.\n\t * @override\n\t */\n\tdestroy(): void {\n\t\tthis.removeAll();\n\t\tthis.bindingMap_ = null;\n\t}\n\n\t/**\n\t * Attaches an event listener to an event target.\n\t * @param target - The event target.\n\t * @param type  - The event type.\n\t * @param listener  - The event listener.\n\t */\n\ton(target: any, type: string, listener: Function): EventManager {\n\t\tif (!this.bindingMap_) return;\n\n\t\tlet binding = new Binding_(target, type, listener);\n\t\tthis.bindingMap_.push(type, binding);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Attaches an event listener to an event target.\n\t * The listener will be removed when the first instance of the event is fired.\n\t * @param {EventTarget} target The event target.\n\t * @param {string} type The event type.\n\t * @param {function} listener The event listener.\n\t */\n\tonce(target: any, type: string, listener: Function) {\n\t\t// Install a shim listener that will stop listening after the first event.\n\t\tthis.on(\n\t\t\ttarget,\n\t\t\ttype,\n\t\t\tfunction (event: any) {\n\t\t\t\t// Stop listening to this event.\n\t\t\t\tthis.off(target, type);\n\t\t\t\t// Call the original listener.\n\t\t\t\tlistener(event);\n\t\t\t}.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * Detaches an event listener from an event target.\n\t * @param {EventTarget} target The event target.\n\t * @param {string} type The event type.\n\t */\n\toff(target: any, type: string): void {\n\t\tif (!this.bindingMap_) return;\n\n\t\tlet list = this.bindingMap_.get(type) || [];\n\n\t\tfor (let i = 0; i < list.length; ++i) {\n\t\t\tlet binding = list[i];\n\n\t\t\tif (binding.target == target) {\n\t\t\t\tbinding.off();\n\t\t\t\tthis.bindingMap_.remove(type, binding);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Detaches all event listeners from all targets.\n\t */\n\tremoveAll(): void {\n\t\tif (!this.bindingMap_) return;\n\n\t\tlet list = this.bindingMap_.getAll();\n\n\t\tfor (let i = 0; i < list.length; ++i) {\n\t\t\tlist[i].off();\n\t\t}\n\n\t\tthis.bindingMap_.clear();\n\t}\n}\n\n// EventManager.Binding_ = Binding;\n","/**\n * @file: global.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * @description provide global scope.\n */\nlet global: any;\n\n// see https://stackoverflow.com/a/11237259/589493\nif (typeof window === 'undefined') {\n\t/* eslint-disable-next-line no-undef */\n\tglobal = self;\n} else {\n\tglobal = window;\n}\n\nexport default global;\n","/**\n * @file: logger.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * utils - logger\n */\n/* global WorkerGlobalScope */\nimport global from './global';\nimport EventEmitter from './event-emitter';\n\nlet console = global.console;\nconst isWorker =\n\ttypeof WorkerGlobalScope !== 'undefined' &&\n\tself instanceof WorkerGlobalScope &&\n\ttypeof importScripts != 'undefined';\nconst prefix = '>>>';\n\nclass Logger extends EventEmitter {\n\tprivate MSG_NAME: string;\n\tprivate _enable: boolean;\n\n\tget enable() {\n\t\treturn this._enable;\n\t}\n\n\tset enable(value: boolean) {\n\t\tthis._enable = value;\n\n\t\tthis.MSG_NAME = '__log__';\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._enable = false;\n\t}\n\n\tlog(...restArgs: any) {\n\t\tif (isWorker) {\n\t\t\tlogger.emit(this.MSG_NAME, 'log', [...arguments].join(''));\n\t\t} else {\n\t\t\tif (this._enable) {\n\t\t\t\tconsole.log.call(console, prefix, ...arguments);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(...restArgs: any) {\n\t\tif (isWorker) {\n\t\t\tlogger.emit(this.MSG_NAME, 'debug', [...arguments].join(''));\n\t\t} else {\n\t\t\tif (this._enable && console.debug) {\n\t\t\t\tconsole.debug.call(console, prefix, ...arguments);\n\t\t\t}\n\t\t}\n\t}\n\n\tassert(...restArgs: any) {\n\t\tif (this._enable && console.assert) {\n\t\t\tlet condition = arguments[0];\n\t\t\tlet sliceArgs = Array.prototype.slice.call(arguments, 1);\n\t\t\tsliceArgs.unshift(prefix);\n\n\t\t\tconsole.assert.call(console, condition, ...sliceArgs);\n\t\t}\n\t}\n\n\twarn(...restArgs: any) {\n\t\tif (isWorker) {\n\t\t\tlogger.emit(this.MSG_NAME, 'warn', [...arguments].join(''));\n\t\t} else {\n\t\t\tif (this._enable) {\n\t\t\t\tconsole.warn.call(console, prefix, ...arguments);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(...restArgs: any) {\n\t\tif (isWorker) {\n\t\t\tlogger.emit(this.MSG_NAME, 'error', [...arguments].join(''));\n\t\t} else {\n\t\t\tif (this._enable) {\n\t\t\t\tconsole.error.call(console, prefix, ...arguments);\n\t\t\t}\n\t\t}\n\t}\n}\n\nlet logger = new Logger();\n\n/**\n * @param {Object} obj - custom logger\n */\nexport function setLogger(obj) {\n\tconsole = obj;\n}\n\nexport function getLogger() {\n\treturn logger;\n}\n\nexport default logger;\n","/**\n * @file: stream.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * simple stream implementation.\n */\n\nimport { PushConf } from '../types/globals';\nimport EventEmitter from './event-emitter';\n\nclass Stream extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * connect to the next pipeline stream.\n\t * @param destination\n\t */\n\tpipe(destination: Stream): Stream {\n\t\tthis.on('reset', function () {\n\t\t\tdestination.reset();\n\t\t});\n\n\t\tthis.on('data', function (data) {\n\t\t\tdestination.push(data);\n\t\t});\n\n\t\tthis.on('done', function (flushSource) {\n\t\t\tdestination.flush(flushSource);\n\t\t});\n\n\t\treturn destination;\n\t}\n\n\t/**\n\t * detaches the next pipeline stream previously attached.\n\t */\n\tunpipe(): Stream {\n\t\tthis.removeAllListeners('reset');\n\t\tthis.removeAllListeners('data');\n\t\tthis.removeAllListeners('done');\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * push data to current pipeline.\n\t * @param data\n\t */\n\tpush(data: any, conf?: PushConf): void {\n\t\tthis.emit('data', data);\n\t}\n\n\t/**\n\t * flush current pipeline.\n\t * @param flushSource\n\t */\n\tflush(flushSource: Stream): void {\n\t\tthis.emit('done', flushSource);\n\t}\n\n\treset(): void {\n\t\tthis.emit('reset');\n\t}\n}\n\nexport default Stream;\n","/**\n * @file: demuxer.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\nimport { Events } from './enum/events';\nimport { Context, GlobalOptions, IDemux, PushConf } from './types/globals';\nimport CacheBuffer from './util/cache-buffer';\nimport EventManager from './util/event-manager';\nimport { isArrayBuffer, isUint8Array } from './util/is';\nimport logger from './util/logger';\nimport Stream from './util/stream';\n\nexport default abstract class DemuxFacade extends Stream implements IDemux {\n\treadonly endStream?: Stream;\n\tprotected eventManager_: EventManager;\n\tprotected ctx_: Context;\n\tprotected options_: GlobalOptions;\n\tprotected cache_buffer_: CacheBuffer;\n\n\tprotected listenEndStream_(): void {\n\t\tthis.eventManager_ = new EventManager();\n\n\t\tthis.eventManager_\n\t\t\t.on(this.endStream, 'data', (data) => {\n\t\t\t\tthis.emit(Events.DEMUX_DATA, data);\n\t\t\t})\n\t\t\t.on(this.endStream, 'done', (data) => {\n\t\t\t\tthis.emit(Events.DONE, data);\n\t\t\t})\n\t\t\t.on(this.ctx_, 'error', (data) => {\n\t\t\t\tthis.emit(Events.ERROR, data);\n\t\t\t});\n\t}\n\n\tconstructor(options: GlobalOptions = {}) {\n\t\tsuper();\n\n\t\tif (options.debug) {\n\t\t\tlogger.enable = true;\n\t\t}\n\n\t\tthis.ctx_ = new Context();\n\t\tthis.options_ = options;\n\t\tthis.cache_buffer_ = new CacheBuffer();\n\t}\n\n\t/**\n\t * Pipe the arrayBuffer to the demuxer.\n\t * @param buf\n\t * @param conf\n\t */\n\tabstract push(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\n\n\t/**\n\t * transfer data to Uint8Array\n\t * @param buf\n\t */\n\tprotected constraintPushData_(buf: ArrayBuffer | Uint8Array): Uint8Array | null {\n\t\tlet newBuf = null;\n\t\tif (!isArrayBuffer(buf) && !isUint8Array(buf)) {\n\t\t\treturn newBuf;\n\t\t}\n\n\t\tif (isArrayBuffer(buf)) {\n\t\t\tnewBuf = new Uint8Array(buf);\n\t\t}\n\n\t\treturn newBuf;\n\t}\n\n\treset(): void {}\n\n\tdestroy(): void {\n\t\tthis.unpipe();\n\t\tthis.endStream.unpipe();\n\n\t\tthis.eventManager_.removeAll();\n\t}\n}\n","/**\n * @file: mux-error-code.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * @readonly\n * @enum {Number}\n */\nenum codes {\n\tWORKER_EXCEPTION = 0,\n\tWORKER_MSG_EXCEPTION,\n\tTS_SYNC_BYTE,\n\tFLV_HEAD_SIGNATURE,\n\tFLV_NOT_EXPECTED_ADJACENT_DATA\n}\n\nexport default codes;\n","/**\n * @file: created at Wednesday, 13th May 2020 4:15:40 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nexport const HEAD_LEN = 9;\nexport const MIN_BODY_LEN = 4;\nexport const PREVIOUS_TAG_SIZE = 4;\nexport const MIN_TAG_LEN = PREVIOUS_TAG_SIZE;\n\nexport enum FLVParseStage {\n\tHEAD = 0,\n\tBODY\n}\n","/**\n * @file: dv.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Bit buffer reader like DataView.\n */\n\nfunction read(buf: ArrayBuffer | Uint8Array): DataView {\n\tlet byteOffset = 0;\n\n\tif (ArrayBuffer.isView(buf)) {\n\t\tbyteOffset = buf.byteOffset;\n\t\tbuf = buf.buffer;\n\t}\n\n\treturn new DataView(buf, byteOffset);\n}\n\nclass DataViewReader {\n\tconstructor() {}\n\n\t/**\n\t * Gets an unsigned 8-bit integer (unsigned byte).\n\t * @param buffer\n\t * @param byteOffset    The offset, in byte, from the start of the view where to read the data.\n\t * @returns {number}    An unsigned 8-bit integer number.\n\t */\n\treadUint8(buffer: ArrayBuffer | Uint8Array, byteOffset: number): number {\n\t\treturn read(buffer).getUint8(byteOffset);\n\t}\n\n\t/**\n\t * Gets an unsigned 16-bit integer (unsigned long).\n\t * @param buffer\n\t * @param byteOffset     The offset, in byte, from the start of the view where to read the data.\n\t * @param littleEndian   Indicates whether the 16-bit int is stored in little- or big-endian format.\n\t * @returns {number}     An unsigned 16-bit integer number.\n\t */\n\treadUint16(buffer: ArrayBuffer | Uint8Array, byteOffset, littleEndian: boolean = false): number {\n\t\treturn read(buffer).getUint16(byteOffset, littleEndian);\n\t}\n\n\t/**\n\t * Gets an unsigned 32-bit integer (unsigned long).\n\t * @param buffer\n\t * @param byteOffset        The offset, in byte, from the start of the view where to read the data.\n\t * @param littleEndian      Indicates whether the 32-bit int is stored in little- or big-endian format.\n\t * @returns {number}        An unsigned 32-bit integer number.\n\t */\n\treadUint32(buffer: ArrayBuffer | Uint8Array, byteOffset: number, littleEndian: boolean = false): number {\n\t\treturn read(buffer).getUint32(byteOffset, littleEndian);\n\t}\n}\n\nexport default DataViewReader;\n","/**\n * @file: created at Saturday, 23rd May 2020 11:46:18 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nenum FlvTagTypes {\n\tSCRIPT_DATA = 18,\n\tVIDEO = 9,\n\tAUDIO = 8\n}\n\nexport default FlvTagTypes;\n","/**\n * @file: tag.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * tag structure.\n */\nimport DataViewReader from '../../util/dv';\nimport FlvTagTypes from '../../enum/flv-tag-types';\n\n/**\n * @extends DataViewReader\n */\nexport default class FlvTag extends DataViewReader {\n\ttagType: number;\n\tdataSize: number;\n\ttimestamp: number;\n\ttimestampExtended: number;\n\tstreamId: number;\n\tpayload: Uint8Array;\n\tpreviousTagSize: number;\n\ttotalSize: number;\n\n\t/**\n\t * @param buffer\n\t */\n\tconstructor(buffer: Uint8Array) {\n\t\tsuper();\n\n\t\tthis.tagType = buffer[0];\n\n\t\tthis.dataSize = this.readUint32(buffer, 0) & 0x00ffffff;\n\n\t\tlet timestamp = this.readUint32(buffer, 3) & 0x00ffffff; // the lower 24 bits of the timestamp\n\t\tlet timestampExtended = buffer[7]; // This field represents the upper 8 bits of timestamp\n\n\t\tthis.timestamp = (timestampExtended << 24) + timestamp;\n\n\t\tthis.streamId = this.readUint32(buffer, 8) & 0x00ffffff; // Always 0\n\n\t\tthis.payload = buffer.subarray(11, 11 + this.dataSize);\n\n\t\tthis.previousTagSize = this.readUint32(buffer, 11 + this.dataSize);\n\n\t\tthis.totalSize = this.previousTagSize + 4;\n\t}\n\n\tvalid(): boolean {\n\t\tlet { tagType, dataSize, previousTagSize } = this;\n\t\treturn (\n\t\t\tpreviousTagSize === 11 + dataSize &&\n\t\t\t(tagType === FlvTagTypes.SCRIPT_DATA || tagType === FlvTagTypes.VIDEO || tagType === FlvTagTypes.AUDIO)\n\t\t);\n\t}\n}\n","/**\n * @file: elementary.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport muxErrorCode from '../../mux-error-code';\nimport { Context, GlobalOptions } from '../../types/globals';\nimport CacheBuffer from '../../util/cache-buffer';\nimport logger from '../../util/logger';\nimport Stream from '../../util/stream';\nimport { HEAD_LEN, MIN_TAG_LEN, PREVIOUS_TAG_SIZE } from '../flv-const';\nimport FlvTag from '../structs/flv-tag';\nimport AVContext from '../types/av-context';\n\nclass BodyStream extends Stream {\n\tprivate ctx_: Context;\n\tprivate flv_: AVContext;\n\tprivate options_: GlobalOptions;\n\tprivate cache_buffer_: CacheBuffer;\n\n\tconstructor(ctx: Context, flvCtx: AVContext, options: GlobalOptions = {}) {\n\t\tsuper();\n\n\t\tthis.ctx_ = ctx;\n\t\tthis.flv_ = flvCtx;\n\t\tthis.options_ = options;\n\t\tthis.cache_buffer_ = new CacheBuffer();\n\t}\n\n\t/**\n\t * Push a body buffer\n\t */\n\tpush(bodyBuffer: Uint8Array): void {\n\t\tconst { ctx_, flv_, cache_buffer_ } = this;\n\t\tlet buffer: Uint8Array | null;\n\n\t\tcache_buffer_.append(bodyBuffer);\n\n\t\tif (flv_.pos === HEAD_LEN) {\n\t\t\tif (cache_buffer_.byteLength > PREVIOUS_TAG_SIZE + MIN_TAG_LEN) {\n\t\t\t\t// drop PreviousTagSize0\n\t\t\t\tcache_buffer_.cut(PREVIOUS_TAG_SIZE);\n\n\t\t\t\tflv_.pos += PREVIOUS_TAG_SIZE;\n\t\t\t}\n\t\t}\n\n\t\twhile (cache_buffer_.byteLength > 0) {\n\t\t\t// buffer start with tag\n\t\t\tbuffer = cache_buffer_.bytes;\n\n\t\t\tif (buffer.length >= MIN_TAG_LEN) {\n\t\t\t\tlet tagHeadSize = 11; // 10 is tag header\n\t\t\t\tlet tagPayloadSize = (buffer[1] << 16) + (buffer[2] << 8) + buffer[3];\n\t\t\t\tlet previousTagSize = 4;\n\t\t\t\tlet tagSize = tagHeadSize + tagPayloadSize + previousTagSize;\n\n\t\t\t\tif (buffer.length >= tagSize) {\n\t\t\t\t\tlet tagBuffer = cache_buffer_.cut(tagSize);\n\t\t\t\t\tlet tag = new FlvTag(tagBuffer);\n\n\t\t\t\t\tif (tag.valid()) {\n\t\t\t\t\t\tthis.emit('data', tag);\n\t\t\t\t\t\tflv_.pos += tag.totalSize;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet errMsg = `Encounter invalid flv tag, tag_length(${tag.previousTagSize}), cache_length(${cache_buffer_.byteLength}), data(${tagBuffer})`;\n\n\t\t\t\t\t\tlogger.error(errMsg);\n\n\t\t\t\t\t\tthis.reset();\n\n\t\t\t\t\t\tctx_.emit('error', muxErrorCode.TS_SYNC_BYTE, errMsg);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treset(): void {\n\t\tconst { cache_buffer_ } = this;\n\n\t\tcache_buffer_.clear();\n\t\tthis.emit('reset');\n\t}\n}\n\nexport default BodyStream;\n","/**\n * @file: created at Sunday, 24th May 2020 2:21:46 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\n\nexport function AMFdeSerialize(data: Uint8Array) {\n\tlet result = {};\n\tlet item = parseData_(data);\n\tresult[item.key] = item.value;\n\treturn result;\n}\n\nfunction parseData_(source: Uint8Array, isString = false) {\n\tlet key = null,\n\t\tvalue = null,\n\t\tdata = null;\n\n\tif (isString) {\n\t\ttry {\n\t\t\tdata = new Uint8Array(source.length + 1);\n\t\t} catch (e) {\n\t\t\tlogger.error(`flv parseData failed: ${e.message}`);\n\t\t}\n\t\tdata[0] = 2;\n\t\tdata.set(source, 1, source.length);\n\t} else {\n\t\tdata = source;\n\t}\n\tkey = deSerialize_(data);\n\tif (isString) {\n\t\tkey.valueLength -= 1;\n\t}\n\tlet temp = source.subarray(key.valueLength, source.byteLength);\n\tvalue = deSerialize_(temp);\n\n\treturn {\n\t\tkey: key.value,\n\t\tvalue: value.value,\n\t\tvalueLength: key.valueLength + value.valueLength\n\t};\n}\n\ntype SerializeResult = Partial<{\n\tvalue: any;\n\tvalueLength: number;\n}>;\n\nfunction deSerialize_(data: Uint8Array) {\n\tlet result: SerializeResult = {};\n\tlet valueLength = 0;\n\tlet a = new DataViewReader();\n\n\tswitch (data[0]) {\n\t\tcase 0:\n\t\t\tvalueLength = 8;\n\t\t\tresult.value = uint8ToDouble_(data.subarray(1, 9));\n\t\t\tresult.valueLength = 1 + valueLength;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tvalueLength = 1;\n\t\t\tresult.value = data[1] !== 0;\n\t\t\tresult.valueLength = 1 + valueLength;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tvalueLength = (data[1] << 8) | data[2];\n\t\t\tresult.value = uint8ToStr_(data.subarray(3, 3 + valueLength));\n\t\t\tresult.valueLength = 1 + 2 + valueLength;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tvalueLength = 1;\n\t\t\tresult.value = {};\n\t\t\twhile (data[valueLength] != 0x00 || data[valueLength + 1] != 0x00 || data[valueLength + 2] != 0x09) {\n\t\t\t\tlet objData = data.subarray(valueLength, data.byteLength);\n\t\t\t\tlet item = parseData_(objData, true);\n\t\t\t\tresult.value[item.key] = item.value;\n\t\t\t\tvalueLength += item.valueLength;\n\t\t\t\tobjData = null;\n\t\t\t}\n\t\t\tvalueLength += 3;\n\t\t\tresult.valueLength = valueLength;\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tvalueLength = (data[1] << 8) | data[2];\n\t\t\tresult.value = uint8ToStr_(data.subarray(3, 3 + valueLength));\n\t\t\tresult.valueLength = 1 + 2 + valueLength;\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tresult.value = null;\n\t\t\tvalueLength = 1;\n\t\t\tresult.valueLength = valueLength;\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tresult.value = undefined;\n\t\t\tvalueLength = 1;\n\t\t\tresult.valueLength = valueLength;\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\tresult.value = a.readUint16(data, 1);\n\t\t\tvalueLength = 2 + 1;\n\t\t\tresult.valueLength = valueLength;\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\t{\n\t\t\t\tlet arrLength = (data[1] << 24) | (data[2] << 16) | (data[3] << 8) | data[4];\n\t\t\t\tvalueLength = 1 + 4;\n\t\t\t\tresult.value = {};\n\t\t\t\tfor (let count = 0; count < arrLength; count++) {\n\t\t\t\t\tlet itemData = data.subarray(valueLength, data.byteLength);\n\t\t\t\t\tlet item2 = parseData_(itemData, true);\n\t\t\t\t\tresult.value[item2.key] = item2.value;\n\t\t\t\t\tvalueLength += item2.valueLength;\n\t\t\t\t}\n\t\t\t\tvalueLength += 3;\n\t\t\t\tresult.valueLength = valueLength;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\tbreak;\n\t\tcase 10:\n\t\t\t{\n\t\t\t\tlet arr = [];\n\t\t\t\tlet arrLength2 = a.readUint32(data, 1);\n\t\t\t\tfor (let i = 0; i < arrLength2; i++) {\n\t\t\t\t\tlet objData2 = data.subarray(i * 9 + 4 + 1, data.byteLength);\n\t\t\t\t\tarr.push(deSerialize_(objData2).value);\n\t\t\t\t}\n\t\t\t\tresult.value = arr;\n\t\t\t\tvalueLength = arr.length * 9 + 4 + 1;\n\t\t\t\tresult.valueLength = valueLength;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 11:\n\t\t\tresult.value = uint8ToDouble_(data.subarray(0, 8));\n\t\t\tvalueLength = 8 + 1 + 2;\n\t\t\tresult.valueLength = valueLength;\n\t\t\tbreak;\n\t\tcase 12:\n\t\t\tvalueLength = (data[1] << 24) | (data[2] << 16) | (data[3] << 8) | data[4];\n\t\t\tresult.value = uint8ToStr_(data.subarray(5, 5 + valueLength));\n\t\t\tresult.valueLength = 1 + 4 + valueLength;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n\ta = null;\n\treturn result;\n}\n\nfunction uint8ToStr_(data: Uint8Array) {\n\treturn String.fromCharCode.apply(null, data);\n}\n\nfunction uint8ToDouble_(data: Uint8Array) {\n\tlet temp = new Uint8Array(data);\n\tlet dv = new DataView(temp.buffer);\n\tlet str = dv.getFloat64(0);\n\tdv = null;\n\ttemp = null;\n\treturn str;\n}\n","/**\n * @file: created at Saturday, 9th May 2020 4:38:35 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport { AudioSpecificConfig } from '../../codec/aac/aac';\nimport { AVCDecoderConfigurationRecord } from '../../codec/avc';\nimport Stream from '../../util/stream';\nimport { FLVParseStage } from '../flv-const';\n\nexport enum AudioSoundFormat {\n\tAAC = 10\n}\n\nexport enum AudioSoundType {\n\tMONO = 0,\n\tSTEREO = 1 // For AAC: always 1\n}\n\nexport default class AVContext extends Stream {\n\tstage: FLVParseStage;\n\tpos: number = 0; // parse byte position relative to flv first byte;\n\n\tversion: number;\n\thasAudio: boolean;\n\thasVideo: boolean;\n\n\tkeyframeTimes: number[];\n\tkeyframeFilePositions: number[];\n\n\tdecoderConfigurationRecord: AVCDecoderConfigurationRecord;\n\taudioSpecificConfig: AudioSpecificConfig;\n\n\t// const AVClass *class; ///< Class for private options.\n\t// int trust_metadata;   ///< configure streams according onMetaData\n\t// int trust_datasize;   ///< trust data size of FLVTag\n\t// int dump_full_metadata;   ///< Dump full metadata of the onMetadata\n\t// int wrong_dts;        ///< wrong dts due to negative cts\n\t// uint8_t *new_extradata[FLV_STREAM_TYPE_NB];\n\t// int new_extradata_size[FLV_STREAM_TYPE_NB];\n\t// int last_sample_rate;\n\t// int last_channels;\n\t// struct {\n\t//     int64_t dts;\n\t//     int64_t pos;\n\t// } validate_index[2];\n\t// int validate_next;\n\t// int validate_count;\n\t// int searched_for_end;\n\t// uint8_t resync_buffer[2*RESYNC_BUFFER_SIZE];\n\t// int broken_sizes;\n\t// int sum_flv_tag_size;\n\t// int last_keyframe_stream_index;\n\t// int keyframe_count;\n\t// int64_t video_bit_rate;\n\t// int64_t audio_bit_rate;\n\t// int64_t *keyframe_times;\n\t// int64_t *keyframe_filepositions;\n\t// int missing_streams;\n\t// AVRational framerate;\n\t// int64_t last_ts;\n\t// int64_t time_offset;\n\t// int64_t time_pos;\n\n\t// videoScriptData\n}\n","/**\n * @file: created at Saturday, 9th May 2020 11:13:19 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n// The AudioSpecificConfig is explained in ISO 14496-3.\nexport interface AudioSpecificConfig {\n\taudioObjectType: number;\n\tsampleCount: number;\n\tchannelConfiguration: number;\n\tsampleRate: number;\n\tsamplingFrequencyIndex: number;\n\t// assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n}\n\nexport interface AACFrame extends Omit<AudioSpecificConfig, 'channelConfiguration'> {\n\tpts: number;\n\tdts: number;\n\tdata: Uint8Array;\n\tchannelCount: number; // equal to channelConfiguration\n\tsampleSize: number;\n}\n\nexport const AAC_SAMPLING_FREQUENCIES = [\n\t96000,\n\t88200,\n\t64000,\n\t48000,\n\t44100,\n\t32000,\n\t24000,\n\t22050,\n\t16000,\n\t12000,\n\t11025,\n\t8000,\n\t7350\n];\n","/**\n * @file: created at Monday, 25th May 2020 12:36:52 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * AVCVideoPacket structure.\n */\nimport { AudioSpecificConfig, AAC_SAMPLING_FREQUENCIES } from '../../codec/aac/aac';\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\n\n// 0: AAC sequence header\n// 1: AAC raw\nexport enum AACPacketType {\n\tSEQUENCE_HEAD = 0, // 0 : AVCDecoderConfigurationRecord（AVC sequence header）\n\tAAC_RAW = 1 // 1 : One or more NALUs (Full frames are required)\n}\n\n/**\n * ISO/IEC 14496-3 1.6.2.1 AudioSpecificConfig\n * @param buffer\n */\nexport function parseAudioSpecificConfig(buffer: Uint8Array): AudioSpecificConfig {\n\tlet LOG = 'AudioSpecificConfig';\n\n\t// ISO/IEC 14496-3 Table 1.16 – Syntax of GetAudioObjectType()\n\tlet audioObjectType = buffer[0] >> 3;\n\tif (audioObjectType == 31) {\n\t\tlogger.error(`${LOG} unsupported audioObjectType`);\n\t\t// audioObjectType = 32 + audioObjectTypeExt;\n\t}\n\n\tlet samplingFrequencyIndex = ((buffer[0] & 0x7) << 1) | (buffer[1] >> 7);\n\tif (samplingFrequencyIndex === 0xf) {\n\t\tlogger.error(`${LOG} unsupported samplingFrequencyIndex`);\n\t}\n\tlet channelConfiguration = (buffer[1] >> 3) & 0x0f;\n\tif (channelConfiguration < 0 || channelConfiguration >= 8) {\n\t\tlogger.error('${LOG} unsupported channel configuration');\n\t}\n\n\tlet sampleCount = ((buffer[1] >> 2) & 0x01) == 0 ? 1024 : 1024;\n\tlet sampleRate = AAC_SAMPLING_FREQUENCIES[samplingFrequencyIndex];\n\n\treturn {\n\t\taudioObjectType,\n\t\tsamplingFrequencyIndex,\n\t\tchannelConfiguration,\n\t\tsampleCount,\n\t\tsampleRate\n\t};\n}\n\n/**\n * @extends DataViewReader\n */\nexport default class AACAudioData extends DataViewReader {\n\tdts: number;\n\tpts: number;\n\taacPacketType: AACPacketType;\n\tpayload: Uint8Array;\n\taudioSpecificConfig?: AudioSpecificConfig;\n\n\t/**\n\t * @param buffer\n\t */\n\tconstructor(buffer: Uint8Array, timestamp: number) {\n\t\tsuper();\n\n\t\tthis.dts = timestamp;\n\t\tthis.pts = timestamp;\n\n\t\tthis.aacPacketType = buffer[0];\n\t\tthis.payload = buffer.subarray(1);\n\n\t\tif (this.aacPacketType === 0) {\n\t\t\tthis.audioSpecificConfig = parseAudioSpecificConfig(this.payload);\n\t\t}\n\t}\n}\n","/**\n * @file: created at Monday, 25th May 2020 2:51:52 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * audio data structure.\n */\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\nimport { AudioSoundFormat, AudioSoundType } from '../types/av-context';\nimport AACAudioData from './flv-tag-aac-audio-data';\n\n// 0 = Linear PCM, platform endian\n// 1 = ADPCM\n// 2 = MP3\n// 3 = Linear PCM, little endian\n// 4 = Nellymoser 16-kHz mono\n// 5 = Nellymoser 8-kHz mono\n// 6 = Nellymoser\n// 7 = G.711 A-law logarithmic PCM 8 = G.711 mu-law logarithmic PCM 9 = reserved\n// 10 = AAC\n// 11 = Speex\n// 14 = MP3 8-Khz\n// 15 = Device-specific sound\n\n/**\n * @extends DataViewReader\n */\nexport default class FlvTagAudioData extends DataViewReader {\n\tsoundFormat: AudioSoundFormat;\n\tsoundRate: number;\n\tsampleSize: number; // Size of each sample\n\tsoundType: AudioSoundType;\n\tsoundData: AACAudioData;\n\n\t/**\n\t * @param buffer\n\t */\n\tconstructor(buffer: Uint8Array, timestamp: number) {\n\t\tsuper();\n\n\t\tthis.soundFormat = (buffer[0] & 0xf0) >> 4;\n\t\tthis.soundRate = (buffer[0] & 0x0c) >> 2;\n\n\t\tlet soundSize = (buffer[0] & 0x02) >> 1;\n\n\t\tswitch (soundSize) {\n\t\t\tcase 0:\n\t\t\t\tthis.sampleSize = 8; // bit\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.sampleSize = 16; // bit\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.soundType = buffer[0] & 1;\n\n\t\tswitch (this.soundFormat) {\n\t\t\tcase AudioSoundFormat.AAC:\n\t\t\t\tthis.soundData = new AACAudioData(buffer.subarray(1), timestamp);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.error(`flv tag audioData encounter unknown soundFormat ${this.soundFormat}`);\n\t\t}\n\t}\n}\n","/**\n * @file: ep3b.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * discard the emulation_prevention_three_byte\n * @param data\n */\nexport default function discardEP3B(data: Uint8Array): Uint8Array {\n\tlet length = data.byteLength,\n\t\temulationPreventionBytesPositions = [],\n\t\ti = 1,\n\t\tnewLength: number,\n\t\tnewData = new Uint8Array(0);\n\n\t// Find all `Emulation Prevention Bytes`\n\twhile (i < length - 2) {\n\t\tif (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n\t\t\temulationPreventionBytesPositions.push(i + 2);\n\t\t\ti += 2;\n\t\t} else {\n\t\t\ti++;\n\t\t}\n\t}\n\n\t// If no Emulation Prevention Bytes were found just return the original\n\t// array\n\tif (emulationPreventionBytesPositions.length === 0) {\n\t\treturn data;\n\t}\n\n\t// Create a new array to hold the NAL unit data\n\tnewLength = length - emulationPreventionBytesPositions.length;\n\n\ttry {\n\t\tnewData = new Uint8Array(newLength);\n\t} catch (e) {\n\t\tthrow `epsb alloc mem error ${newLength}`;\n\t}\n\tlet sourceIndex = 0;\n\n\tfor (i = 0; i < newLength; sourceIndex++, i++) {\n\t\tif (sourceIndex === emulationPreventionBytesPositions[0]) {\n\t\t\t// Skip this byte\n\t\t\tsourceIndex++;\n\t\t\t// Remove this position index\n\t\t\temulationPreventionBytesPositions.shift();\n\t\t}\n\t\tnewData[i] = data[sourceIndex];\n\t}\n\n\treturn newData;\n}\n","/**\n * @file: exp-golumb.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * exp golumb algorithm.\n * codeNum = 2leadingZeroBits – 1 + read_bits( leadingZeroBits )\n * @see https://en.wikipedia.org/wiki/Exponential-Golomb_coding\n */\n\n/**\n * read n bit.\n * @param buffer\n * @param bitOffset\n * @param length\n * @private\n */\nexport function readBit(buffer: Uint8Array, bitOffset: number = 0, length: number = 1): number {\n\tlet startByte = 0;\n\tlet startByteBitPos = 0;\n\tlet val = 0;\n\tlet bitStr = '',\n\t\tbitVal = 0;\n\n\tfor (let j = bitOffset; j < bitOffset + length; j++) {\n\t\tstartByte = Math.floor(j / 8);\n\t\tstartByteBitPos = 7 - (j % 8);\n\t\tbitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\n\n\t\tbitStr += bitVal;\n\t}\n\n\tval = parseInt(bitStr, 2);\n\n\treturn val;\n}\n\n/**\n * read 1 byte.\n * @param buffer\n * @param bitOffset\n */\nexport function readByte(buffer: Uint8Array, bitOffset: number = 0) {\n\treturn readBit(buffer, bitOffset, 8);\n}\n\n/**\n * Unsigned Integer Exp-Golomb Coded.\n * @param buffer\n * @param bitOffset\n */\nexport function readUEV(buffer: Uint8Array, bitOffset: number = 0) {\n\tlet leadingZeros = [];\n\tlet bitLength = buffer.byteLength * 8;\n\tlet readBit1 = false;\n\tlet startByte = 0;\n\tlet startByteBitPos = 0;\n\tlet bitVal = 0;\n\tlet value = '';\n\n\t// 1. 计算 leadingZeros\n\tfor (let i = bitOffset; i < bitLength; i++) {\n\t\tstartByte = Math.floor(i / 8);\n\t\tstartByteBitPos = 7 - (i % 8);\n\n\t\tbitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\n\n\t\tif (!readBit1) {\n\t\t\tif (bitVal === 0) {\n\t\t\t\tleadingZeros.push(0);\n\t\t\t} else {\n\t\t\t\treadBit1 = true;\n\t\t\t\tbitOffset = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tlet codeNumLength = leadingZeros.length + 1;\n\n\t// 2. 计算有效位数值\n\tfor (let j = bitOffset; j < bitOffset + codeNumLength; j++) {\n\t\tstartByte = Math.floor(j / 8);\n\t\tstartByteBitPos = 7 - (j % 8);\n\t\tbitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\n\n\t\tvalue += bitVal;\n\t}\n\n\treturn {\n\t\tbitLength: leadingZeros.length + codeNumLength,\n\t\tvalue: parseInt(value, 2) - 1\n\t};\n}\n\n/**\n * Signed Integer Exp-Golomb Coded.\n * @param buffer\n * @param bitOffset\n */\nexport function readSEV(buffer: Uint8Array, bitOffset: number = 0) {\n\tlet uev = readUEV(buffer, bitOffset);\n\tlet codeNum = uev.value;\n\n\tlet signedValue = Math.pow(-1, codeNum + 1) * Math.ceil(codeNum / 2);\n\n\treturn {\n\t\tbitLength: uev.bitLength,\n\t\tvalue: signedValue\n\t};\n}\n\nexport default {\n\treadUEV,\n\treadSEV,\n\treadBit,\n\treadByte\n};\n","/**\n * @file: sps.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport ExpGolomb from '../../util/exp-golumb';\n\nlet bitOffset = 0;\n\nexport type SPSProps = {\n\tprofile_idc: number;\n\tprofile_compatibility: number;\n\tlevel_idc: number;\n\tsps_id: number;\n\tlog2_max_frame_num_minus4: number;\n\tpic_order_cnt_type: number;\n\tlog2_max_pic_order_cnt_lsb_minus4: number;\n\n\twidth: number;\n\theight: number;\n\n\tpixelRatio: [number, number];\n\tpayload: Uint8Array;\n\n\tvideo_format: number;\n\n\tfps: number;\n\tfixedFPS: boolean;\n};\n\n/**\n * 7.3.2.1.1.1 Scaling list syntax\n * @param scalingList\n * @param size\n */\nfunction scaling_list(scalingList, size) {\n\tlet lastScale = 8;\n\tlet nextScale = 8;\n\tlet delta_scale;\n\n\tfor (var j = 0; j < size; j++) {\n\t\tif (nextScale != 0) {\n\t\t\tdelta_scale = ExpGolomb.readUEV(scalingList, bitOffset);\n\t\t\tbitOffset += delta_scale.bitLength;\n\n\t\t\tnextScale = (lastScale + delta_scale.value + 256) % 256;\n\t\t}\n\n\t\tlastScale = scalingList[j];\n\t}\n}\n\n/**\n * decode (SPS)Sequence parameter set\n * @param payload\n */\nexport function decodeSPS(payload: Uint8Array): SPSProps {\n\tbitOffset = 0;\n\n\tlet profile_idc = payload[0];\n\tlet profile_compatibility = payload[1];\n\tlet level_idc = payload[2];\n\tlet golombBuffer = payload.subarray(3);\n\tlet separate_colour_plane_flag = 0,\n\t\tqpprime_y_zero_transform_bypass_flag = 0,\n\t\tseq_scaling_matrix_present_flag = 0;\n\tlet lmpoclmUEV;\n\tlet delta_pic_order_always_zero_flag = 0,\n\t\tofnrpSEV,\n\t\tofttbfSEV,\n\t\tnrfipoccUEV;\n\tlet pixelRatio: [number, number] = [1, 1],\n\t\tpixelScale = 1;\n\tlet video_format: number;\n\tlet fps = 0,\n\t\tnum_units_in_tick: number,\n\t\ttime_scale: number,\n\t\tfixed_frame_rate_flag: boolean = true;\n\n\t// seq_parameter_set_id\n\tlet spsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += spsUEV.bitLength;\n\n\tif (\n\t\tprofile_idc == 100 ||\n\t\tprofile_idc == 110 ||\n\t\tprofile_idc == 122 ||\n\t\tprofile_idc == 244 ||\n\t\tprofile_idc == 44 ||\n\t\tprofile_idc == 83 ||\n\t\tprofile_idc == 86 ||\n\t\tprofile_idc == 118 ||\n\t\tprofile_idc == 128\n\t) {\n\t\t// chroma_format_idc\n\t\tlet chromaFIUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += chromaFIUEV.bitLength;\n\n\t\tif (chromaFIUEV.value == 3) {\n\t\t\t// separate_colour_plane_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\t\tbitOffset += 1;\n\t\t}\n\n\t\t// bit_depth_luma_minus8\n\t\tlet bitdlmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += bitdlmUEV.bitLength;\n\n\t\t// bit_depth_chroma_minus8\n\t\tlet bitdcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += bitdcmUEV.bitLength;\n\n\t\t// qpprime_y_zero_transform_bypass_flag\n\t\t// qpprime_y_zero_transform_bypass_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\t// seq_scaling_matrix_present_flag\n\t\tseq_scaling_matrix_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\tif (seq_scaling_matrix_present_flag) {\n\t\t\tfor (let i = 0; i < (chromaFIUEV.value != 3 ? 8 : 12); i++) {\n\t\t\t\tlet seq_scaling_list_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\t\t\tbitOffset += 1;\n\n\t\t\t\tif (seq_scaling_list_present_flag) {\n\t\t\t\t\tif (i < 6) {\n\t\t\t\t\t\tscaling_list(golombBuffer, 16);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscaling_list(golombBuffer, 64);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// log2_max_frame_num_minus4\n\tlet lmfnmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += lmfnmUEV.bitLength;\n\n\t// pic_order_cnt_type\n\tlet poctUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tlet pic_order_cnt_type = poctUEV.value;\n\tbitOffset += poctUEV.bitLength;\n\n\tif (pic_order_cnt_type === 0) {\n\t\t// log2_max_pic_order_cnt_lsb_minus4\n\t\tlmpoclmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += lmpoclmUEV.bitLength;\n\t} else if (pic_order_cnt_type === 1) {\n\t\t// delta_pic_order_always_zero_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\t// offset_for_non_ref_pic\n\t\tofnrpSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n\t\tbitOffset += ofnrpSEV.bitLength;\n\n\t\t// offset_for_top_to_bottom_field\n\t\tofttbfSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n\t\tbitOffset += ofttbfSEV.bitLength;\n\n\t\t// num_ref_frames_in_pic_order_cnt_cycle\n\t\tnrfipoccUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += nrfipoccUEV.bitLength;\n\n\t\t// let offset_for_ref_frames = [];\n\t\tfor (let i = 0, item; i < nrfipoccUEV.value; i++) {\n\t\t\titem = ExpGolomb.readSEV(golombBuffer, bitOffset);\n\t\t\tbitOffset += item.bitLength;\n\n\t\t\t// offset_for_ref_frames.push(item);\n\t\t}\n\t}\n\n\t// max_num_ref_frames\n\t// 指定参考帧队列可能达到的最大长度，解码器依照这个句法元素的值开辟存储区，这个存储区用于存放已解码的参考帧，\n\t// H.264 规定最多可用 16 个参考帧，本句法元素的值最大为 16。值得注意的是这个长度以帧为单位，如果在场模式下，应该相应地扩展一倍\n\tlet mnrfUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += mnrfUEV.bitLength;\n\n\t// gaps_in_frame_num_value_allowed_flag\n\t// let gaps_in_frame_num_value_allowed_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\t// pic_width_in_mbs_minus1\n\tlet picWidthUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += picWidthUEV.bitLength;\n\n\t// pic_height_in_map_units_minus1\n\tlet picHeightUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += picHeightUEV.bitLength;\n\n\t// frame_mbs_only_flag\n\t// 本句法元素等于 1 时, 表示本序列中所有图像的编码模式都是帧编码；\n\t// 本句法元素等于 0 时, 表示本序列中图像的编码模式可能是帧，也可能是场或帧场自适应，某个图像具体是哪一种要由其他句法元素决定。\n\tlet frame_mbs_only_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\tif (!frame_mbs_only_flag) {\n\t\t// mb_adaptive_frame_field_flag (Unused, Unnecessary to read it.)\n\t\t// ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\t}\n\n\t// direct_8x8_inference_flag,  用于指明 B 片的直接 和 skip 模式下运动矢量的预测方法\n\t// let direct_8x8_inference_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\t// frame_cropping_flag, 用于指明解码器是否要将图像裁剪后输出，如果是的话，后面紧跟着的四个句法元素分别指出左右、上下裁剪的宽度\n\tlet frame_cropping_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\tlet cropLeft = 0,\n\t\tcropRight = 0,\n\t\tcropTop = 0,\n\t\tcropBottom = 0;\n\tif (frame_cropping_flag) {\n\t\tlet fcloUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += fcloUEV.bitLength;\n\t\tcropLeft = fcloUEV.value;\n\n\t\tlet fcroUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += fcroUEV.bitLength;\n\t\tcropRight = fcroUEV.value;\n\n\t\tlet fctoUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += fctoUEV.bitLength;\n\t\tcropTop = fctoUEV.value;\n\n\t\tlet fcboUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += fcboUEV.bitLength;\n\t\tcropBottom = fcboUEV.value;\n\t}\n\n\t// vui_parameters_present_flag\n\tlet vui_parameters_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\tif (vui_parameters_present_flag) {\n\t\t// Annex E, E.1.1 VUI parameters syntax\n\t\t// VUI 用以表征视频格式等额外信息\n\t\t// aspect_ratio, video_format\n\n\t\tlet aspect_ratio_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\tif (aspect_ratio_info_present_flag) {\n\t\t\tconst aspectRatioIdc = ExpGolomb.readByte(golombBuffer, bitOffset);\n\t\t\tbitOffset += 8;\n\n\t\t\tswitch (aspectRatioIdc) {\n\t\t\t\tcase 1:\n\t\t\t\t\tpixelRatio = [1, 1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tpixelRatio = [12, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tpixelRatio = [10, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tpixelRatio = [16, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tpixelRatio = [40, 33];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tpixelRatio = [24, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tpixelRatio = [20, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tpixelRatio = [32, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tpixelRatio = [80, 33];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 10:\n\t\t\t\t\tpixelRatio = [18, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 11:\n\t\t\t\t\tpixelRatio = [15, 11];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 12:\n\t\t\t\t\tpixelRatio = [64, 33];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 13:\n\t\t\t\t\tpixelRatio = [160, 99];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 14:\n\t\t\t\t\tpixelRatio = [4, 3];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 15:\n\t\t\t\t\tpixelRatio = [3, 2];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 16:\n\t\t\t\t\tpixelRatio = [2, 1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 255: {\n\t\t\t\t\tlet width0 = ExpGolomb.readByte(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += 8;\n\t\t\t\t\tlet width1 = ExpGolomb.readByte(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += 8;\n\t\t\t\t\tlet height0 = ExpGolomb.readByte(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += 8;\n\t\t\t\t\tlet height1 = ExpGolomb.readByte(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += 8;\n\t\t\t\t\tpixelRatio = [(width0 << 8) | width1, (height0 << 8) | height1];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (pixelRatio) {\n\t\t\t\tpixelScale = pixelRatio[0] / pixelRatio[1];\n\t\t\t}\n\n\t\t\tif (aspectRatioIdc === 255) {\n\t\t\t\t// sar_width\n\t\t\t\tbitOffset += 16;\n\t\t\t\t// sar_height\n\t\t\t\tbitOffset += 16;\n\t\t\t}\n\t\t}\n\n\t\tlet overscan_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\tif (overscan_info_present_flag) {\n\t\t\tbitOffset += 1;\n\t\t\t// overscan_appropriate_flag;\n\t\t}\n\n\t\tlet video_signal_type_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\tif (video_signal_type_present_flag) {\n\t\t\t/*\n                Table E-2 – Meaning of video_format\n                video_format    Meaning\n                0               Component\n                1               PAL\n                2               NTSC\n                3               SECAM\n                4               MAC\n                5               Unspecified video format\n                6               Reserved\n                7               Reserved\n             */\n\t\t\tvideo_format = ExpGolomb.readBit(golombBuffer, bitOffset, 3);\n\t\t\tbitOffset += 3;\n\n\t\t\t// switch (video_format) {\n\t\t\t// }\n\n\t\t\t// let video_full_range_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\t\tbitOffset += 1;\n\n\t\t\tlet colour_description_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\t\tbitOffset += 1;\n\n\t\t\tif (colour_description_present_flag) {\n\t\t\t\t// colour_primaries            u(8)\n\t\t\t\t// transfer_characteristics    u(8)\n\t\t\t\t// matrix_coefficients         u(8)\n\t\t\t\tbitOffset += 24;\n\t\t\t}\n\t\t}\n\n\t\tlet chroma_loc_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\tif (chroma_loc_info_present_flag) {\n\t\t\tlet chroma_sample_loc_type_top_field = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\tbitOffset += chroma_sample_loc_type_top_field.bitLength;\n\n\t\t\tlet chroma_sample_loc_type_bottom_field = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\tbitOffset += chroma_sample_loc_type_bottom_field.bitLength;\n\t\t}\n\n\t\tlet timing_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\tbitOffset += 1;\n\n\t\tif (timing_info_present_flag) {\n\t\t\tnum_units_in_tick = ExpGolomb.readBit(golombBuffer, bitOffset, 32);\n\t\t\tbitOffset += 32;\n\n\t\t\ttime_scale = ExpGolomb.readBit(golombBuffer, bitOffset, 32);\n\t\t\tbitOffset += 32;\n\n\t\t\tfixed_frame_rate_flag = !!ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\t\tbitOffset += 1;\n\n\t\t\tfps = time_scale / (num_units_in_tick * 2);\n\t\t}\n\n\t\t// There is left VUI other's parameters to be decoded ...\n\t\t// For now, it is useless, so don't pass them.\n\t}\n\n\t// let FrameHeightInMbs = (2 - frame_mbs_only_flag) * (picHeightUEV.value + 1);\n\t// PicSizeInMapUnits = PicWidthInMbs * PicHeightInMapUnits\n\n\treturn {\n\t\tpayload: golombBuffer,\n\n\t\tprofile_idc,\n\t\tprofile_compatibility,\n\t\tlevel_idc,\n\t\tsps_id: spsUEV.value, // ue(v)\n\t\tlog2_max_frame_num_minus4: poctUEV.value, // ue(v)\n\t\tpic_order_cnt_type, // ue(v)\n\t\tlog2_max_pic_order_cnt_lsb_minus4: lmpoclmUEV ? lmpoclmUEV.value : 0, // ue(v)\n\n\t\twidth: Math.ceil(((picWidthUEV.value + 1) * 16 - cropLeft * 2 - cropRight * 2) * pixelScale), // PicWidthInSamplesL = PicWidthInMbs * 16\n\t\theight: (2 - frame_mbs_only_flag) * (picHeightUEV.value + 1) * 16 - cropTop * 2 - cropBottom * 2,\n\n\t\tpixelRatio,\n\t\tvideo_format,\n\n\t\tfps,\n\t\tfixedFPS: fixed_frame_rate_flag\n\t};\n}\n","/**\n * @file: pps.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport ExpGolomb from '../../util/exp-golumb';\n\nexport type PPSProps = {\n\tsliceGroupNum: number;\n};\n\n/**\n * decode (PPS)Picture parameter set\n * @param payload\n */\nexport function decodePPS(payload: Uint8Array): PPSProps {\n\tlet bitOffset = 0;\n\n\tlet golombBuffer = payload;\n\tlet slice_group_change_direction_flag = 0,\n\t\tsliceGroupIds = [];\n\tlet sgcdfUEV, picSizeUEV;\n\tlet i = 0;\n\n\t// pic_parameter_set_id\n\tlet ppsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += ppsUEV.bitLength;\n\n\t// seq_parameter_set_id\n\tlet spsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += spsUEV.bitLength;\n\n\t// entropy_coding_mode_flag\n\t// 0: Exp-Golomb coded, see subclause 9.1 or CAVLC, see subclause 9.2\n\t// 1: CABAC, see subclause 9.3\n\tlet entropy_coding_mode_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\t// bottom_field_pic_order_in_frame_present_flag\n\tlet bottom_field_pic_order_in_frame_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\t// num_slice_groups_minus1,\n\tlet sliceGroupUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += sliceGroupUEV.bitLength;\n\n\tif (sliceGroupUEV.value > 0) {\n\t\t// slice_group_map_type\n\t\tlet sgmtUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\tbitOffset += sgmtUEV.bitLength;\n\n\t\tlet iGroup = 0,\n\t\t\titemUev;\n\n\t\tswitch (sgmtUEV.value) {\n\t\t\tcase 0:\n\t\t\t\tfor (iGroup = 0; iGroup <= sgmtUEV.value; iGroup++) {\n\t\t\t\t\t// run_length_minus1\n\t\t\t\t\titemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += itemUev.bitLength;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tfor (iGroup = 0; iGroup <= sgmtUEV.value; iGroup++) {\n\t\t\t\t\t// top_left\n\t\t\t\t\titemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += itemUev.bitLength;\n\t\t\t\t\t// bottom_right\n\t\t\t\t\titemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += itemUev.bitLength;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\t\t// slice_group_change_direction_flag\n\t\t\t\tslice_group_change_direction_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\t\t\t\tbitOffset += 1;\n\t\t\t\t// slice_group_change_rate_minus1\n\t\t\t\tsgcdfUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\t\tbitOffset += sgcdfUEV.bitLength;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\t{\n\t\t\t\t\t// pic_size_in_map_units_minus1\n\t\t\t\t\tpicSizeUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\t\t\t\t\tbitOffset += picSizeUEV.bitLength;\n\n\t\t\t\t\tlet length = Math.ceil(Math.log2(sliceGroupUEV.value + 1));\n\t\t\t\t\tfor (i = 0; i <= picSizeUEV.value; i++) {\n\t\t\t\t\t\t// pic_size_in_map_units_minus1\n\t\t\t\t\t\tsliceGroupIds.push(ExpGolomb.readBit(golombBuffer, bitOffset, length));\n\t\t\t\t\t\tbitOffset += length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// num_ref_idx_l0_default_active_minus1\n\tlet nril0dcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += nril0dcmUEV.bitLength;\n\n\t// num_ref_idx_l1_default_active_minus1\n\tlet nril1dcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n\tbitOffset += nril1dcmUEV.bitLength;\n\n\t// weighted_pred_flag\n\tlet weighted_pred_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\t// weighted_bipred_idc\n\tlet weighted_bipred_idc = ExpGolomb.readBit(golombBuffer, bitOffset, 2);\n\tbitOffset += 1;\n\n\t// pic_init_qp_minus26\n\tlet piqpSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n\tbitOffset += piqpSEV.bitLength;\n\t// pic_init_qs_minus26\n\tlet piqsSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n\tbitOffset += piqsSEV.bitLength;\n\t// chroma_qp_index_offset\n\tlet cqioSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n\tbitOffset += cqioSEV.bitLength;\n\n\tlet deblocking_filter_control_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\tlet constrained_intra_pred_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\tlet redundant_pic_cnt_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n\tbitOffset += 1;\n\n\t// if( more_rbsp_data( ) ) {\n\t//     // Unused data...\n\t// }\n\n\treturn {\n\t\tsliceGroupNum: sliceGroupUEV.value + 1\n\t};\n}\n","/**\n * @file: pps.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nexport type SEIProps = {};\n\n/**\n * decode (SEI)Supplemental enhancement information\n * @param payload\n */\nexport function decodeSEI(payload: Uint8Array): SEIProps {\n\treturn {};\n}\n","/**\n * @file: nalu.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport DataViewReader from '../../util/dv';\nimport NaluTypes from '../../enum/nalu-types';\nimport discardEP3B from './ep3b';\nimport { decodeSPS, SPSProps } from './sps';\nimport { decodePPS, PPSProps } from './pps';\nimport { decodeSEI, SEIProps } from './sei';\n\n/**\n * decode (AUD)Access unit delimiter\n * @param payload\n * @private\n */\nfunction _decodeAUD(payload: Uint8Array): number {\n\t// var primary_pic_type_table = {\n\t//     0x084, // 2, 7\n\t//     0x0a5, // 0, 2, 5, 7\n\t//     0x0e7, // 0, 1, 2, 5, 6, 7\n\t//     0x210, // 4, 9\n\t//     0x318, // 3, 4, 8, 9\n\t//     0x294, // 2, 4, 7, 9\n\t//     0x3bd, // 0, 2, 3, 4, 5, 7, 8, 9\n\t//     0x3ff, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n\t// }\n\n\treturn payload[0] >> 5;\n}\n\nexport default class NALU extends DataViewReader {\n\tforbidden_zero_bit: number;\n\tref_idc: number;\n\tunit_type: number;\n\tdata: Uint8Array;\n\trawData: Uint8Array;\n\tsps: SPSProps;\n\tpps: PPSProps;\n\tsei: SEIProps;\n\tprimary_pic_type: number;\n\tpts?: number;\n\tdts?: number;\n\n\tconstructor(buffer: Uint8Array) {\n\t\tsuper();\n\n\t\tthis.forbidden_zero_bit = buffer[0] >> 7;\n\n\t\t// nalu priority.\n\t\tthis.ref_idc = (buffer[0] >> 5) & 0x03;\n\n\t\t// specifies the type of RBSP data structure. see in mux-nalu-types.js\n\t\tthis.unit_type = buffer[0] & 0x1f;\n\n\t\tthis.data = discardEP3B(buffer.subarray(1));\n\t\tthis.rawData = buffer;\n\n\t\tswitch (this.unit_type) {\n\t\t\tcase NaluTypes.NON_IDR_SLICE:\n\t\t\t\tbreak;\n\t\t\tcase NaluTypes.DPA_SLICE:\n\t\t\tcase NaluTypes.DPB_SLICE:\n\t\t\tcase NaluTypes.DPC_SLICE:\n\t\t\t\t// TODO decode A/B/C Partition Slice.\n\t\t\t\tbreak;\n\t\t\tcase NaluTypes.IDR_SLICE:\n\t\t\t\t// this.data = decodeSlice(this.data).data;\n\t\t\t\tbreak;\n\t\t\tcase NaluTypes.SPS:\n\t\t\t\tthis.sps = decodeSPS(this.data);\n\t\t\t\tbreak;\n\t\t\tcase NaluTypes.PPS:\n\t\t\t\tthis.pps = decodePPS(this.data);\n\t\t\t\tbreak;\n\t\t\tcase NaluTypes.SEI:\n\t\t\t\tthis.sei = decodeSEI(this.data);\n\t\t\t\tbreak;\n\t\t\tcase NaluTypes.AUD:\n\t\t\t\tthis.primary_pic_type = _decodeAUD(this.data);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","/**\n * @file: avc.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * h.264/AVC codec\n */\nimport EventEmitter from '../util/event-emitter';\nimport NALUnit from './avc/nalu';\n\ninterface CachedBytes extends Uint8Array {\n\tpts?: number;\n\tdts?: number;\n\tstartCodeLength?: number;\n}\n\nexport type AVCCodecData = {\n\tpts: number;\n\tdts: number;\n\tnaluSizeLength?: number;\n\tpayload: Uint8Array;\n};\n\nexport interface AVCDecoderConfigurationRecord {\n\tversion: number;\n\tprofile: number;\n\tprofileCompatibility: number;\n\tlevel: number;\n\tnaluSizeLength: number;\n\tspsNalus: Uint8Array[];\n\tppsNalus: Uint8Array[];\n}\n\nexport class AVCCodec extends EventEmitter {\n\tprivate cachedBytes?: CachedBytes;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.cachedBytes = null;\n\t}\n\n\tpush(data: AVCCodecData) {\n\t\tlet self = this;\n\t\tlet i = 0,\n\t\t\tnaluOffset = 0,\n\t\t\tlastStartCodeLength = 0;\n\t\tlet { pts, dts, payload, naluSizeLength } = data;\n\t\tlet data_byte;\n\n\t\tif (this.cachedBytes) {\n\t\t\ttry {\n\t\t\t\tdata_byte = new Uint8Array(this.cachedBytes.byteLength + payload.byteLength);\n\t\t\t} catch (e) {\n\t\t\t\tthrow `h264 alloc mem error ${this.cachedBytes.byteLength}/${payload.byteLength}`;\n\t\t\t}\n\t\t\tdata_byte.set(this.cachedBytes);\n\t\t\tdata_byte.set(payload, this.cachedBytes.byteLength);\n\t\t} else {\n\t\t\tdata_byte = payload;\n\t\t}\n\n\t\tif (!naluSizeLength) {\n\t\t\tlet j = data_byte.byteLength - 1;\n\t\t\tlet dropZerosLength = 0;\n\n\t\t\t// Collect tailing zeros.\n\t\t\t// end with 0x000000 and more...\n\t\t\tdo {\n\t\t\t\tif (data_byte[j] === 0x00) {\n\t\t\t\t\tdropZerosLength++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tj--;\n\t\t\t} while (j > 0);\n\n\t\t\tif (dropZerosLength >= 3) {\n\t\t\t\t// drop tailing zeros.\n\t\t\t\tdata_byte = data_byte.subarray(0, j + 1);\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tlet uint32 =\n\t\t\t\t\t(data_byte[i] << 24) | (data_byte[i + 1] << 16) | (data_byte[i + 2] << 8) | data_byte[i + 3];\n\t\t\t\tlet start_code = data_byte.length - i >= 4 ? uint32 : -1;\n\t\t\t\tlet start_code_length = 0;\n\t\t\t\tlet isLastByte = i === data_byte.length - 1;\n\n\t\t\t\tif (start_code >> 8 === 1) {\n\t\t\t\t\t/*commence with 3 bytes*/\n\t\t\t\t\tstart_code_length = 3;\n\t\t\t\t} else if (start_code === 1) {\n\t\t\t\t\t/*commence with 4 bytes*/\n\t\t\t\t\tstart_code_length = 4;\n\t\t\t\t}\n\n\t\t\t\tif (start_code_length === 3 || start_code_length === 4 || isLastByte) {\n\t\t\t\t\tlet startPos = naluOffset + lastStartCodeLength;\n\t\t\t\t\tlet isNaluEndByte = isLastByte && dropZerosLength >= 3;\n\n\t\t\t\t\tif (i > naluOffset && (!isLastByte || isNaluEndByte)) {\n\t\t\t\t\t\tlet bytes = data_byte.subarray(startPos, isNaluEndByte ? i + 1 : i);\n\t\t\t\t\t\tlet nalu = new NALUnit(bytes);\n\n\t\t\t\t\t\t// PES\n\t\t\t\t\t\tnalu.pts = pts;\n\t\t\t\t\t\tnalu.dts = dts;\n\n\t\t\t\t\t\tself.emit('nalu', nalu);\n\t\t\t\t\t\tnaluOffset = i;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isLastByte) {\n\t\t\t\t\t\tif (dropZerosLength < 3) {\n\t\t\t\t\t\t\tthis.cachedBytes = data_byte.subarray(naluOffset);\n\t\t\t\t\t\t\tthis.cachedBytes.pts = pts;\n\t\t\t\t\t\t\tthis.cachedBytes.dts = dts;\n\t\t\t\t\t\t\tthis.cachedBytes.startCodeLength = lastStartCodeLength;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.cachedBytes = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === naluOffset) {\n\t\t\t\t\t\t// record last start code length.\n\t\t\t\t\t\tlastStartCodeLength = start_code_length;\n\t\t\t\t\t}\n\n\t\t\t\t\ti += start_code_length || 1;\n\t\t\t\t} else {\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t} while (i < data_byte.length);\n\t\t} else {\n\t\t\tlet startPos = 0,\n\t\t\t\tsize = 0,\n\t\t\t\tendPos = 0;\n\t\t\tdo {\n\t\t\t\tsize = 0;\n\t\t\t\tfor (let k = 0; k < naluSizeLength; k++) {\n\t\t\t\t\tsize = size | (data_byte[startPos + k] << ((naluSizeLength - k - 1) * 8));\n\t\t\t\t}\n\t\t\t\t// size = (data_byte[i] << 24) | (data_byte[i + 1] << 16) | (data_byte[i + 2] << 8) | data_byte[i + 3];\n\t\t\t\tstartPos += naluSizeLength;\n\t\t\t\tendPos = startPos + size;\n\t\t\t\tif (endPos > data_byte.length) {\n\t\t\t\t\tendPos = data_byte.length;\n\t\t\t\t}\n\n\t\t\t\tlet bytes = data_byte.subarray(startPos, endPos);\n\t\t\t\tlet nalu = new NALUnit(bytes);\n\t\t\t\t// PES\n\t\t\t\tnalu.pts = pts;\n\t\t\t\tnalu.dts = dts;\n\n\t\t\t\tself.emit('nalu', nalu);\n\t\t\t\tstartPos = endPos;\n\t\t\t} while (startPos < data_byte.length);\n\t\t}\n\n\t\tif (this.cachedBytes) {\n\t\t\tlet nalu = new NALUnit(this.cachedBytes.subarray(this.cachedBytes.startCodeLength));\n\n\t\t\tnalu.pts = this.cachedBytes.pts;\n\t\t\tnalu.dts = this.cachedBytes.dts;\n\n\t\t\tthis.emit('nalu', nalu);\n\n\t\t\tthis.cachedBytes = null;\n\t\t}\n\n\t\tthis.emit('done');\n\t}\n\n\treset() {\n\t\tthis.cachedBytes = null;\n\t}\n}\n","/**\n * @file: created at Monday, 25th May 2020 12:36:52 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * AVCVideoPacket structure.\n */\nimport { AVCDecoderConfigurationRecord, AVCCodecData, AVCCodec } from '../../codec/avc';\nimport NALU from '../../codec/avc/nalu';\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\nimport AVContext from '../types/av-context';\nimport { PipelineContext } from '../types/flv-pipeline';\n\n// 0 : AVCDecoderConfigurationRecord（AVC sequence header）\n// 1 : One or more NALUs (Full frames are required)\n// 2 : AVC end of sequence\nexport enum AVCPacketTypes {\n\tSEQUENCE_HEAD = 0, // 0 : AVCDecoderConfigurationRecord（AVC sequence header）\n\tNALU = 1, // 1 : One or more NALUs (Full frames are required)\n\tSEQUENCE_END = 2 // 2 : AVC end of sequence\n}\n\n/**\n * ISO/IEC 14496-15  5.2.4.1.1 Syntax\n * @param data\n */\nexport function parseAVCDecoderConfigurationRecord(data: Uint8Array): AVCDecoderConfigurationRecord {\n\tlet version = data[0];\n\tlet profile = data[1];\n\tlet profileCompatibility = data[2];\n\tlet level = data[3];\n\tlet naluSizeLength = 1 + (data[4] & 0x03);\n\tlet ppsNalus = [],\n\t\tspsNalus = [];\n\n\tlet pos = 5;\n\tlet numOfSPS = data[pos] & 0x1f;\n\n\tif (numOfSPS === 0) {\n\t\tlogger.error(`Flv: Invalid AVCDecoderConfigurationRecord: No SPS`);\n\t} else if (numOfSPS > 0) {\n\t\tif (numOfSPS > 1) {\n\t\t\tlogger.warn(`Flv: Strange AVCDecoderConfigurationRecord: SPS Count = ${numOfSPS}`);\n\t\t}\n\n\t\tpos++;\n\t\tfor (let i = 0; i < numOfSPS; i++) {\n\t\t\tlet spsDataLength = (data[pos] << 8) | data[pos + 1];\n\t\t\tpos += 2;\n\n\t\t\tspsNalus.push(data.subarray(pos, pos + spsDataLength));\n\t\t\tpos += spsDataLength;\n\t\t}\n\t}\n\n\tlet numOfPPS = data[pos];\n\n\tif (numOfPPS === 0) {\n\t\tlogger.error(`Flv: Invalid AVCDecoderConfigurationRecord: No PPS`);\n\t} else if (numOfPPS > 0) {\n\t\tif (numOfPPS > 1) {\n\t\t\tlogger.warn(`Flv: Strange AVCDecoderConfigurationRecord: PPS Count = ${numOfPPS}`);\n\t\t}\n\n\t\tpos++;\n\t\tfor (let i = 0; i < numOfPPS; i++) {\n\t\t\tlet ppsDataLength = (data[pos] << 8) | data[pos + 1];\n\t\t\tpos += 2;\n\n\t\t\tppsNalus.push(data.subarray(pos, pos + ppsDataLength));\n\t\t\tpos += ppsDataLength;\n\t\t}\n\t}\n\n\treturn {\n\t\tversion,\n\t\tprofile,\n\t\tprofileCompatibility,\n\t\tlevel,\n\t\tnaluSizeLength,\n\t\tspsNalus,\n\t\tppsNalus\n\t};\n}\n\nconst avcCodec = new AVCCodec();\nconst naluList_: NALU[] = [];\n\navcCodec.on('nalu', (nalu: NALU) => {\n\tnaluList_.push(nalu);\n});\n\n/**\n * @extends DataViewReader\n */\nexport default class AVCVideoPacket extends DataViewReader {\n\tavcPacketType: AVCPacketTypes;\n\tdecoderConfigurationRecord?: AVCDecoderConfigurationRecord;\n\tcts: number;\n\tpts: number;\n\tdts: number;\n\tpayload: Uint8Array;\n\tnaluList?: NALU[];\n\n\tprivate avcCodec?: AVCCodec;\n\n\t/**\n\t * @param buffer\n\t */\n\tconstructor(pipeCtx: PipelineContext, buffer: Uint8Array, timestamp: number) {\n\t\tsuper();\n\n\t\tconst { flv, options } = pipeCtx;\n\n\t\tthis.avcPacketType = buffer[0];\n\n\t\tif (this.avcPacketType === 1) {\n\t\t\tlet cts_uint32 = this.readUint32(buffer, 0) & 0x00ffffff;\n\t\t\tthis.cts = (cts_uint32 << 8) >> 8; // convert to 24-bit signed int\n\t\t} else {\n\t\t\tthis.cts = 0;\n\t\t}\n\n\t\tthis.dts = timestamp;\n\t\tthis.pts = this.dts + this.cts;\n\n\t\tthis.payload = buffer.subarray(4);\n\n\t\tif (this.avcPacketType === 0) {\n\t\t\tthis.decoderConfigurationRecord = parseAVCDecoderConfigurationRecord(this.payload);\n\n\t\t\tflv.decoderConfigurationRecord = this.decoderConfigurationRecord;\n\t\t} else {\n\t\t\tif (options.decodeCodec) {\n\t\t\t\tthis.naluList = [];\n\n\t\t\t\tlet raw: AVCCodecData = {\n\t\t\t\t\tpts: this.pts,\n\t\t\t\t\tdts: this.dts,\n\t\t\t\t\tpayload: this.payload\n\t\t\t\t};\n\n\t\t\t\tif (!this.decoderConfigurationRecord) {\n\t\t\t\t\tif (flv.decoderConfigurationRecord) {\n\t\t\t\t\t\traw.naluSizeLength = flv.decoderConfigurationRecord.naluSizeLength;\n\t\t\t\t\t}\n\n\t\t\t\t\tavcCodec.push(raw);\n\n\t\t\t\t\t// Clone nalu to videoData\n\t\t\t\t\tfor (let i = 0; i < naluList_.length; i++) {\n\t\t\t\t\t\tthis.naluList.push(naluList_[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// empty cache\n\t\t\t\t\tnaluList_.splice(0, naluList_.length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @file: tag.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * video data structure.\n */\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\nimport { PipelineContext } from '../types/flv-pipeline';\nimport AVCVideoPacket from './flv-tag-avc-video-packet';\n\n// If CodecID == 2 H263VIDEOPACKET\n// If CodecID == 3 SCREENVIDEOPACKET\n// If CodecID == 4 VP6FLVVIDEOPACKET\n// If CodecID == 5 VP6FLVALPHAVIDEOPACKET\n// If CodecID == 6 SCREENV2VIDEOPACKET\n// if CodecID == 7 AVCVIDEOPACKET\n// Video frame payload or UI8 (see note following table)\n\nexport enum VideoCodecIDs {\n\tAVC = 7 // AVC_VIDEO_PACKET\n}\n\n/**\n * @extends DataViewReader\n */\nexport default class FlvTagVideoData extends DataViewReader {\n\tframeType: number;\n\tisKeyframe: boolean;\n\tcodecId: VideoCodecIDs;\n\tvideoData: AVCVideoPacket;\n\n\t/**\n\t * @param buffer\n\t */\n\tconstructor(pipeCtx: PipelineContext, buffer: Uint8Array, timestamp: number) {\n\t\tsuper();\n\n\t\tthis.frameType = (buffer[0] >> 4) & 0x0f;\n\t\tthis.isKeyframe = this.frameType === 1;\n\t\tthis.codecId = buffer[0] & 0x0f;\n\n\t\tswitch (this.codecId) {\n\t\t\tcase VideoCodecIDs.AVC:\n\t\t\t\tthis.videoData = new AVCVideoPacket(pipeCtx, buffer.subarray(1), timestamp);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.error(`flv tag videoData encounter unknown codecId ${this.codecId}`);\n\t\t}\n\t}\n}\n","/**\n * @file: created at Saturday, 9th May 2020 3:49:22 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * FLV Tags Stream.\n */\nimport FlvTagTypes from '../../enum/flv-tag-types';\nimport { Context, GlobalOptions } from '../../types/globals';\nimport logger from '../../util/logger';\nimport Stream from '../../util/stream';\nimport { AMFdeSerialize } from '../structs/flv-amf';\nimport FlvTag from '../structs/flv-tag';\nimport FlvTagAudioData from '../structs/flv-tag-audio-data';\nimport FlvTagVideoData from '../structs/flv-tag-video-data';\nimport AVContext from '../types/av-context';\nimport { PipelineContext, TagEmitData } from '../types/flv-pipeline';\n\nclass TagsStream extends Stream {\n\tprivate flv_: AVContext;\n\tprivate options_: GlobalOptions;\n\tprivate pipeCtx: PipelineContext;\n\n\tconstructor(ctx: Context, flv: AVContext, options: GlobalOptions = {}) {\n\t\tsuper();\n\n\t\tthis.flv_ = flv;\n\t\tthis.options_ = options;\n\n\t\tthis.pipeCtx = {\n\t\t\tctx,\n\t\t\tflv,\n\t\t\toptions\n\t\t};\n\t}\n\n\tpush(tag: FlvTag) {\n\t\tswitch (tag.tagType) {\n\t\t\tcase FlvTagTypes.SCRIPT_DATA:\n\t\t\t\tthis.parseScriptData_(tag.payload);\n\t\t\t\tbreak;\n\t\t\tcase FlvTagTypes.VIDEO:\n\t\t\t\tthis.parseVideoData_(tag);\n\t\t\t\tbreak;\n\t\t\tcase FlvTagTypes.AUDIO:\n\t\t\t\tthis.parseAudioData_(tag);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.error(`still not supported flv tag type ${tag.tagType}`);\n\t\t}\n\t}\n\n\tflush() {\n\t\tconst self = this;\n\n\t\tself.emit('done');\n\t}\n\n\treset() {\n\t\tthis.emit('reset');\n\t}\n\n\tprivate parseScriptData_(buffer: Uint8Array) {\n\t\tconst { flv_ } = this;\n\t\tlet result = AMFdeSerialize(buffer);\n\n\t\tflv_.emit('data', {\n\t\t\ttype: 'tag',\n\t\t\ttagType: FlvTagTypes.SCRIPT_DATA,\n\t\t\t...result\n\t\t});\n\t}\n\n\tprivate parseVideoData_(tag: FlvTag) {\n\t\tconst { flv_ } = this;\n\t\tconst data = new FlvTagVideoData(this.pipeCtx, tag.payload, tag.timestamp);\n\n\t\tlet ret: TagEmitData = {\n\t\t\ttype: 'tag',\n\t\t\ttagType: FlvTagTypes.VIDEO,\n\t\t\ttimestamp: tag.timestamp,\n\t\t\t...data\n\t\t};\n\n\t\tflv_.emit('data', ret);\n\t}\n\n\tprivate parseAudioData_(tag: FlvTag) {\n\t\tconst { options_, flv_ } = this;\n\n\t\tconst data = new FlvTagAudioData(tag.payload, tag.timestamp);\n\t\tconst { sampleSize, soundData } = data;\n\n\t\tif (soundData.audioSpecificConfig) {\n\t\t\tflv_.audioSpecificConfig = soundData.audioSpecificConfig;\n\t\t} else {\n\t\t\t// let stubTime = options_.config.stubTime;\n\t\t\t// if (isNumber(stubTime)) {\n\t\t\t// \tlet start = soundData.pts;\n\t\t\t// \tlet duration =\n\t\t\t// \t\tsoundData.pts +\n\t\t\t// \t\tsoundData.payload.byteLength / (sampleSize / 8) / flv_.audioSpecificConfig.sampleCount;\n\t\t\t// \tlet end = start + duration;\n\t\t\t// \tif (end < stubTime) {\n\t\t\t// \t\tlogger.warn(`drop aac tag, start/end/stubTime(${start}/${end}/${stubTime})`);\n\t\t\t// \t\treturn;\n\t\t\t// \t}\n\t\t\t// }\n\t\t}\n\n\t\tlet ret: TagEmitData = {\n\t\t\ttype: 'tag',\n\t\t\ttagType: FlvTagTypes.AUDIO,\n\t\t\ttimestamp: tag.timestamp,\n\t\t\t...data\n\t\t};\n\n\t\tflv_.emit('data', ret);\n\t}\n}\n\nexport default TagsStream;\n","/**\n * @file: created at Thursday, 14th May 2020 10:18:11 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * FLV Head Structure.\n */\nimport DataViewReader from '../../util/dv';\n\n/**\n * @extends DataViewReader\n */\nclass FlvHead extends DataViewReader {\n\tsignature: string;\n\tversion: number;\n\thasAudio: boolean;\n\thasVideo: boolean;\n\toffset: number;\n\n\t/**\n\t * @param buffer\n\t */\n\tconstructor(buffer: Uint8Array) {\n\t\tsuper();\n\n\t\tthis.signature =\n\t\t\tString.fromCharCode(buffer[0]) + // F\n\t\t\tString.fromCharCode(buffer[1]) + // L\n\t\t\tString.fromCharCode(buffer[2]); //V\n\n\t\tthis.version = buffer[3];\n\t\tthis.hasAudio = (buffer[4] & 4) >>> 2 == 1;\n\t\tthis.hasVideo = (buffer[4] & 1) == 1;\n\t\tthis.offset = this.readUint32(buffer, 5);\n\t}\n\n\tvalid(): boolean {\n\t\treturn this.signature === 'FLV';\n\t}\n}\n\nexport default FlvHead;\n","/**\n * flv demuxer.\n */\nimport DemuxFacade from '../demux-facade';\nimport muxErrorCode from '../mux-error-code';\nimport { GlobalOptions, PushConf } from '../types/globals';\nimport { isNumber } from '../util/is';\nimport logger from '../util/logger';\nimport { FLVParseStage, HEAD_LEN, MIN_BODY_LEN } from './flv-const';\nimport BodyStream from './streams/body';\nimport TagsStream from './streams/tag';\nimport FlvHead from './structs/flv-head';\nimport AVContext from './types/av-context';\n\n/**\n * flv\n */\nexport class FLVDemux extends DemuxFacade {\n\t// private complex_: FlvComplex;\n\tprivate flv_: AVContext;\n\tprivate tags_: TagsStream;\n\tprivate body_: BodyStream;\n\n\tconstructor(options: GlobalOptions = {}) {\n\t\tsuper(options);\n\n\t\tthis.flv_ = new AVContext();\n\t\tthis.flv_.stage = FLVParseStage.HEAD;\n\n\t\t// this. = 0;\n\n\t\tthis.body_ = new BodyStream(this.ctx_, this.flv_, options);\n\t\tthis.tags_ = new TagsStream(this.ctx_, this.flv_, options);\n\n\t\t// Compose pipeline\n\t\tthis.pipe(this.body_);\n\t\tthis.body_.pipe(this.tags_);\n\n\t\tsuper.listenEndStream_();\n\t}\n\n\tget endStream() {\n\t\treturn this.flv_;\n\t}\n\n\t/**\n\t * @param buffer\n\t * @param conf\n\t * @param conf.offsetByte\n\t */\n\tpush(buffer: ArrayBuffer | Uint8Array, conf: PushConf = {}) {\n\t\tconst { options_, ctx_, flv_, cache_buffer_ } = this;\n\t\tconst data: Uint8Array = super.constraintPushData_(buffer);\n\t\tlet cacheByteLength = this.cache_buffer_.byteLength;\n\n\t\tlogger.log(`flv demux received ${data.byteLength} bytes, cache ${cacheByteLength} bytes.`);\n\n\t\toptions_.config = conf;\n\t\tif (isNumber(conf.offsetPos)) {\n\t\t\tif (cacheByteLength === 0) {\n\t\t\t\tif (flv_.pos !== conf.offsetPos) {\n\t\t\t\t\tctx_.emit('error', muxErrorCode.FLV_NOT_EXPECTED_ADJACENT_DATA);\n\t\t\t\t}\n\n\t\t\t\tflv_.pos = conf.offsetPos;\n\t\t\t}\n\t\t}\n\n\t\tcache_buffer_.append(data);\n\n\t\t// if file byteOffset is provided, then specify the stage of parser.\n\t\tif (flv_.pos < HEAD_LEN) {\n\t\t\tflv_.stage === FLVParseStage.HEAD;\n\t\t} else {\n\t\t\tflv_.stage === FLVParseStage.BODY;\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (flv_.stage === FLVParseStage.HEAD) {\n\t\t\t\tif (cache_buffer_.byteLength >= HEAD_LEN) {\n\t\t\t\t\t// has enough header\n\t\t\t\t\tlet chunk = cache_buffer_.cut(HEAD_LEN);\n\n\t\t\t\t\tlet head = new FlvHead(chunk);\n\n\t\t\t\t\tif (head.valid()) {\n\t\t\t\t\t\tflv_.emit('data', {\n\t\t\t\t\t\t\ttype: 'head',\n\t\t\t\t\t\t\tsignature: head.signature,\n\t\t\t\t\t\t\tversion: head.version,\n\t\t\t\t\t\t\thasAudio: head.hasAudio,\n\t\t\t\t\t\t\thasVideo: head.hasVideo,\n\t\t\t\t\t\t\toffset: head.offset\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Change parse state -> body\n\t\t\t\t\t\tflv_.stage = FLVParseStage.BODY;\n\t\t\t\t\t\tflv_.pos = HEAD_LEN;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx_.emit('error', muxErrorCode.FLV_HEAD_SIGNATURE);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (flv_.stage === FLVParseStage.BODY) {\n\t\t\t\t// At least has 4 body byte to parse\n\t\t\t\tif (cache_buffer_.byteLength >= MIN_BODY_LEN) {\n\t\t\t\t\tlet cbLen = cache_buffer_.byteLength;\n\t\t\t\t\tlet nextBytes = cache_buffer_.bytes;\n\n\t\t\t\t\tcache_buffer_.clear();\n\n\t\t\t\t\tif (nextBytes) {\n\t\t\t\t\t\tthis.emit('data', nextBytes);\n\t\t\t\t\t}\n\n\t\t\t\t\tflv_.pos += cbLen;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n"],"names":["Events","console","global","FlvTagTypes","NALUnit"],"mappings":";;;;;;AAAA;;;;;AAMA,WAAY,MAAM;IACjB,yBAAe,CAAA;IACf,uBAAa,CAAA;IACb,uBAAa,CAAA;IACb,mCAAyB,CAAA;IACzB,uBAAa,CAAA;AACd,CAAC,EANWA,cAAM,KAANA,cAAM;;ACNlB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,IAAI,oBAAoB,CAAC;AACzD,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,IAAI,kBAAkB,CAAC;AACnD,IAAI,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,oBAAoB,CAAC;AAE3D;AACA;AACA,IAAI,mBAAmB,GAAG,EAAE,CAAC;MAER,YAAY;IAehC;QACC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE;YAC5E,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACtB;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,IAAI,SAAS,CAAC;KACrD;IArBD,OAAO,aAAa,CAAC,OAAO,EAAE,IAAI;QACjC,IAAI,OAAO,OAAO,CAAC,aAAa,KAAK,UAAU,EAAE;YAChD,OAAO,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACnC;aAAM;YACN,OAAO,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SACzC;KACD;;;;;;;;;;;;;IA8BD,IAAI,CAAC,IAAY,EAAE,GAAG,IAAI;QACzB,IAAI,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC;QACtC,IAAI,OAAO,GAAG,IAAI,KAAK,OAAO,CAAC;QAE/B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QACtB,IAAI,MAAM;YAAE,OAAO,GAAG,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC;aACjD,IAAI,CAAC,OAAO;YAAE,OAAO,KAAK,CAAC;;QAGhC,IAAI,OAAO,EAAE;YACZ,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC;gBAAE,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,EAAE,YAAY,KAAK,EAAE;gBACxB,MAAM,EAAE,CAAC;aACT;iBAAM;;gBAEN,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,4BAA4B,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;gBAC7D,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;gBACpB,MAAM,GAAG,CAAC;aACV;SACD;QAED,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAEvB,IAAI,CAAC,OAAO;YAAE,OAAO,KAAK,CAAC;QAE3B,IAAI,IAAI,GAAG,OAAO,OAAO,KAAK,UAAU,CAAC;QACzC,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC;QACvB,QAAQ,GAAG;;YAEV,KAAK,CAAC;gBACL,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC9B,MAAM;YACP,KAAK,CAAC;gBACL,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3C,MAAM;YACP,KAAK,CAAC;gBACL,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzD,MAAM;YACP,KAAK,CAAC;gBACL,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzE,MAAM;;YAEP;gBACC,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;oBAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACrD,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SACrC;QAED,OAAO,IAAI,CAAC;KACZ;IAED,EAAE,CAAC,IAAY,EAAE,QAAkB;QAClC,OAAO,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KAC1C;IAED,IAAI,CAAC,IAAI,EAAE,QAAQ;QAClB,IAAI,OAAO,QAAQ,KAAK,UAAU;YAAE,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAC;QAClG,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC;KACZ;IAED,GAAG,CAAC,IAAI,EAAE,QAAQ;QACjB,OAAO,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KAClD;IAED,kBAAkB,CAAC,IAAI;QACtB,IAAI,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;QAEzB,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QACtB,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;;QAGzB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YAChB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3B,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;gBAClC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;aACtB;iBAAM,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;gBACxB,IAAI,EAAE,IAAI,CAAC,YAAY,KAAK,CAAC;oBAAE,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;;oBAC5D,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;aACzB;YACD,OAAO,IAAI,CAAC;SACZ;;QAGD,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,IAAI,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;YAC9B,IAAI,GAAG,CAAC;YACR,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACjC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACd,IAAI,GAAG,KAAK,KAAK;oBAAE,SAAS;gBAC5B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;aAC7B;YACD,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACZ;QAED,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAEzB,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE;YACpC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SAC1B;aAAM,IAAI,SAAS,EAAE;;YAErB,KAAK,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC3C,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7B;SACD;QAED,OAAO,IAAI,CAAC;KACZ;IAED,SAAS,CAAC,IAAI;QACb,OAAO,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;KACpC;IAED,YAAY,CAAC,IAAI;QAChB,OAAO,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;KACrC;IAED,aAAa;QACZ,OAAO,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;KACzD;CACD;AAED,IAAI,iBAAiB,CAAC;AACtB,IAAI;IACH,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,IAAI,MAAM,CAAC,cAAc;QAAE,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IACvE,iBAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;CACjC;AAAC,OAAO,GAAG,EAAE;IACb,iBAAiB,GAAG,KAAK,CAAC;CAC1B;AACD,IAAI,iBAAiB,EAAE;IACtB,MAAM,CAAC,cAAc,CAAC,YAAY,EAAE,qBAAqB,EAAE;QAC1D,UAAU,EAAE,IAAI;QAChB,GAAG,EAAE;YACJ,OAAO,mBAAmB,CAAC;SAC3B;QACD,GAAG,EAAE,UAAU,GAAG;;;YAGjB,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,KAAK,GAAG;gBACpD,MAAM,IAAI,SAAS,CAAC,iDAAiD,CAAC,CAAC;YACxE,mBAAmB,GAAG,GAAG,CAAC;SAC1B;KACD,CAAC,CAAC;CACH;KAAM;IACN,YAAY,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;CACvD;AAED,SAAS,gBAAgB,CAAC,IAAI;IAC7B,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS;QAAE,OAAO,YAAY,CAAC,mBAAmB,CAAC;IAC9E,OAAO,IAAI,CAAC,aAAa,CAAC;AAC3B,CAAC;AAED;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI;IACpC,IAAI,IAAI;QAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxB;QACJ,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;QACzB,IAAI,SAAS,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAC7B,IAAI;gBACH,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACxB;YAAC,OAAO,CAAC,EAAE;gBACX,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACjB;SACD;KACD;AACF,CAAC;AAED,SAAS,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACzC,IAAI,IAAI;QAAE,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC9B;QACJ,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;QACzB,IAAI,SAAS,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAC7B,IAAI;gBACH,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAC9B;YAAC,OAAO,CAAC,EAAE;gBACX,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACjB;SACD;KACD;AACF,CAAC;AAED,SAAS,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IAC/C,IAAI,IAAI;QAAE,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SACpC;QACJ,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;QACzB,IAAI,SAAS,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAC7B,IAAI;gBACH,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;aACpC;YAAC,OAAO,CAAC,EAAE;gBACX,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACjB;SACD;KACD;AACF,CAAC;AAED,SAAS,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACvD,IAAI,IAAI;QAAE,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SAC1C;QACJ,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;QACzB,IAAI,SAAS,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAC7B,IAAI;gBACH,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;aAC1C;YAAC,OAAO,CAAC,EAAE;gBACX,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACjB;SACD;KACD;AACF,CAAC;AAED,SAAS,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IAC1C,IAAI,IAAI;QAAE,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC/B;QACJ,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;QACzB,IAAI,SAAS,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAC7B,IAAI;gBACH,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAC/B;YAAC,OAAO,CAAC,EAAE;gBACX,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACjB;SACD;KACD;AACF,CAAC;AAED,SAAS,YAAY,CAAC,MAAoB,EAAE,IAAI,EAAE,QAAkB;IACnE,IAAI,CAAC,CAAC;IACN,IAAI,MAAM,CAAC;IACX,IAAI,QAAQ,CAAC;IAEb,IAAI,OAAO,QAAQ,KAAK,UAAU;QAAE,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAC;IAElG,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC;IACxB,IAAI,CAAC,MAAM,EAAE;QACZ,MAAM,GAAG,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;QAC7C,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;KACxB;SAAM;;;QAGN,IAAI,MAAM,CAAC,WAAW,EAAE;YACvB,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,EAAE,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC,CAAC;;;YAIzF,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC;SACxB;QACD,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;KACxB;IAED,IAAI,CAAC,QAAQ,EAAE;;QAEd,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;QACnC,EAAE,MAAM,CAAC,YAAY,CAAC;KACtB;SAAM;QACN,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;;YAEnC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;SAC/C;aAAM;YACN,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACxB;;QAGD,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACrB,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;gBAEvB,MAAM,WAAY,SAAQ,KAAK;iBAI9B;gBACD,IAAI,CAAC,GAAgB,IAAI,WAAW,CACnC,4CAA4C;oBAC3C,QAAQ,CAAC,MAAM;oBACf,IAAI;oBACJ,MAAM,CAAC,IAAI,CAAC;oBACZ,cAAc;oBACd,0CAA0C;oBAC1C,iBAAiB,CAClB,CAAC;gBACF,CAAC,CAAC,IAAI,GAAG,6BAA6B,CAAC;gBACvC,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC;gBACnB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;gBACd,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;gBAE1B,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,IAAI,EAAE;oBAChD,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;iBAC1C;aACD;SACD;KACD;IAED,OAAO,MAAM,CAAC;AACf,CAAC;AAED,SAAS,eAAe,CAAC,IAAI,EAAE,QAAQ;IACtC,IAAI,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE,gBAAgB,CAAC;IAEhD,IAAI,OAAO,QAAQ,KAAK,UAAU;QAAE,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAC;IAElG,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;IACtB,IAAI,CAAC,MAAM;QAAE,OAAO,IAAI,CAAC;IAEzB,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IACpB,IAAI,CAAC,IAAI;QAAE,OAAO,IAAI,CAAC;IAEvB,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;QACpD,IAAI,EAAE,IAAI,CAAC,YAAY,KAAK,CAAC;YAAE,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;aAC5D;YACJ,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;YACpB,IAAI,MAAM,CAAC,GAAG;gBAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC;SAClE;KACD;SAAM,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;QACtC,QAAQ,GAAG,CAAC,CAAC,CAAC;QAEd,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBAC1D,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACpC,QAAQ,GAAG,CAAC,CAAC;gBACb,MAAM;aACN;SACD;QAED,IAAI,QAAQ,GAAG,CAAC;YAAE,OAAO,IAAI,CAAC;QAE9B,IAAI,QAAQ,KAAK,CAAC;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;;YAC5B,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAE/B,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;YAAE,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAE9C,IAAI,MAAM,CAAC,GAAG;YAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,gBAAgB,IAAI,QAAQ,CAAC,CAAC;KACrE;IAED,OAAO,IAAI,CAAC;AACb,CAAC;AAED,SAAS,WAAW;IACnB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;QAChB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,QAAQ,SAAS,CAAC,MAAM;YACvB,KAAK,CAAC;gBACL,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACxC,KAAK,CAAC;gBACL,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,KAAK,CAAC;gBACL,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACpE,KAAK,CAAC;gBACL,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAClF;gBACC,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;oBAAE,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC7D,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;SACxC;KACD;AACF,CAAC;AAED,SAAS,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ;IACxC,IAAI,KAAK,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;IAChG,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IAC5C,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC5B,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;IACvB,OAAO,OAAO,CAAC;AAChB,CAAC;AAED,SAAS,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM;IACvC,IAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC;IAE5B,IAAI,CAAC,MAAM;QAAE,OAAO,EAAE,CAAC;IAEvB,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAC9B,IAAI,CAAC,UAAU;QAAE,OAAO,EAAE,CAAC;IAE3B,IAAI,OAAO,UAAU,KAAK,UAAU;QAAE,OAAO,MAAM,GAAG,CAAC,UAAU,CAAC,QAAQ,IAAI,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAEzG,OAAO,MAAM,GAAG,eAAe,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;AACzF,CAAC;AAED,SAAS,aAAa,CAAC,IAAI;IAC1B,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;IAE1B,IAAI,MAAM,EAAE;QACX,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAE9B,IAAI,OAAO,UAAU,KAAK,UAAU,EAAE;YACrC,OAAO,CAAC,CAAC;SACT;aAAM,IAAI,UAAU,EAAE;YACtB,OAAO,UAAU,CAAC,MAAM,CAAC;SACzB;KACD;IAED,OAAO,CAAC,CAAC;AACV,CAAC;AAED;AACA,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK;IAC7B,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;QAAE,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACzF,IAAI,CAAC,GAAG,EAAE,CAAC;AACZ,CAAC;AAED,SAAS,UAAU,CAAC,GAAG,EAAE,CAAC;IACzB,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;QAAE,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7C,OAAO,IAAI,CAAC;AACb,CAAC;AAED,SAAS,eAAe,CAAC,GAAG;IAC3B,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QACpC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;KACnC;IACD,OAAO,GAAG,CAAC;AACZ,CAAC;AAED,SAAS,oBAAoB,CAAC,KAAK;IAClC,IAAI,CAAC,GAAG,eAAc,CAAC;IACvB,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;IACpB,OAAO,IAAI,CAAC,EAAE,CAAC;AAChB,CAAC;AAED,SAAS,kBAAkB,CAAC,GAAG;IAE9B,KAAK,IAAI,CAAC,IAAI,GAAG;QAChB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAEjD;IACF,OAAO,CAAC,CAAC;AACV,CAAC;AAED,SAAS,oBAAoB,CAAC,OAAO;IACpC,IAAI,EAAE,GAAG,IAAI,CAAC;IACd,OAAO;QACN,OAAO,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;KACpC,CAAC;AACH;;MClgBa,OAAQ,SAAQ,YAAY;;;ACFzC;;;;;AAMA;;;;;AAKA,IAAI,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;AAE/C;;;;;;;;;;;;;;;;;;;;SAoBgB,YAAY,CAAC,KAAU;IACtC,OAAO,CAAC,CAAC,KAAK,IAAI,OAAO,KAAK,IAAI,QAAQ,CAAC;AAC5C,CAAC;AAkBD;;;SAGgB,QAAQ,CAAC,GAAQ;IAChC,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC/C,CAAC;AAED;;;SAGgB,aAAa,CAAC,KAAU;IACvC,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,KAAK,sBAAsB,CAAC;AACnG,CAAC;AAED;;;SAGgB,YAAY,CAAC,KAAU;IACtC,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,KAAK,qBAAqB,CAAC;AAClG;;ACxEA;;;;;AAQA;;;;;MAMqB,WAAW;IAAhC;QA+CS,UAAK,GAAsB,EAAE,CAAC;KA8HtC;IA5KA,IAAI,UAAU;QACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;YAChC,IAAI,GAAG,GAAG,CAAC,CAAC;YAEZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAgB,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7D,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrB,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC;aACvB;YACD,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;SACvB;QAED,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;;;;IAKD,IAAI,KAAK;QACR,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QAC5B,IAAI,KAAK,GAAG,IAAI,CAAC;QAEjB,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC5B,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;aACtB;iBAAM;gBACN,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;aAC1B;SACD;QAED,OAAO,KAAK,CAAC;KACb;IAED,IAAI,KAAK;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;KAC/B;IAED,IAAI,UAAU;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;IAUD,KAAK;QACJ,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC5B,IAAI,GAAG,GAAG,CAAC,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;SAC1B;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACxB;IAED,UAAU;QACT,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,QAAQ,GAAW,CAAC,CAAC;QACzB,IAAI,WAAW,GAAW,EAAE,CAAC;;;;;QAM7B,OAAO,KAAK,KAAK,IAAI,EAAE;YACtB,IAAI;gBACH,QAAQ,EAAE,CAAC;gBACX,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACxC;YAAC,OAAO,CAAC,EAAE;gBACX,IAAI,QAAQ,GAAG,WAAW,EAAE;oBAC3B,MAAM,CAAC,CAAC;iBACR;aACD;SACD;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvD,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAE5B,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAC3B,MAAM,IAAI,OAAO,CAAC,UAAU,CAAC;SAC7B;QAED,OAAO,KAAK,CAAC;KACb;IAED,MAAM,CAAC,SAAmC;QACzC,IAAI,SAAS,YAAY,WAAW,EAAE;YACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;SACrD;aAAM;YACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC3B;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACxB;;;;;;;;;IAUD,GAAG,CAAC,WAAmB,EAAE,gBAAyB,IAAI;QACrD,IAAI,KAAK,GAAG,IAAI,CAAC;QAEjB,IAAI,WAAW,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;YAEtB,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,IAAI,SAAS,GAAG,CAAC,CAAC;YAElB,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEvB,IAAI,SAAS,KAAK,CAAC,EAAE;oBACpB,IAAI,GAAG,CAAC,UAAU,IAAI,WAAW,EAAE;wBAClC,IAAI,aAAa,EAAE;;4BAElB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;yBACrC;wBAED,IAAI,GAAG,CAAC,UAAU,GAAG,WAAW,EAAE;4BACjC,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;4BAChC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;yBAClB;wBACD,MAAM;qBACN;yBAAM;wBACN,IAAI,aAAa,EAAE;4BAClB,IAAI;gCACH,KAAK,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;6BACpC;4BAAC,OAAO,CAAC,EAAE;gCACX,MAAM,qCAAqC,WAAW,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;6BACtE;4BAED,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;yBAClB;wBACD,MAAM,IAAI,GAAG,CAAC,UAAU,CAAC;qBACzB;iBACD;qBAAM;oBACN,IAAI,MAAM,GAAG,WAAW,GAAG,MAAM,CAAC;oBAElC,IAAI,GAAG,CAAC,UAAU,IAAI,MAAM,EAAE;wBAC7B,IAAI,aAAa,EAAE;4BAClB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;yBAC3C;wBAED,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;wBAE3B,IAAI,GAAG,CAAC,UAAU,GAAG,CAAC,EAAE;4BACvB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;yBAClB;wBAED,MAAM;qBACN;yBAAM;wBACN,IAAI,aAAa,EAAE;4BAClB,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;yBACvB;wBACD,MAAM,IAAI,GAAG,CAAC,UAAU,CAAC;wBACzB,MAAM;qBACN;iBACD;gBAED,SAAS,EAAE,CAAC;aACZ;YAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACxB;QAED,OAAO,KAAK,CAAC;KACb;;;AC1LF;;;MAQqB,QAAQ;IAG5B;QACC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;KACf;;;;;;IAOD,IAAI,CAAC,GAAW,EAAE,KAAU;QAC3B,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;YAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC3B;aAAM;YACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACzB;KACD;;;;;IAMD,GAAG,CAAC,GAAW;QACd,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;;QAG1B,OAAO,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC;KAClC;;;;IAKD,MAAM;QACL,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE;YAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SACtC;QACD,OAAO,IAAI,CAAC;KACZ;;;;;;IAOD,MAAM,CAAC,GAAW,EAAE,KAAU;QAC7B,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,IAAI,EAAE;YACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACrC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAClB,EAAE,CAAC,CAAC;iBACJ;aACD;SACD;KACD;;;;IAKD,KAAK;QACJ,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;KACf;;;;IAKD,OAAO,CAAC,QAAkB;QACzB,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE;YAC1B,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAC9B;KACD;;;AC/EF;;;AAGA,MAAM,QAAQ;;;;;;IAUb,YAAY,MAAW,EAAE,IAAY,EAAE,QAAkB;QACxD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;YACjC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;SACpD;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;SACtC;KACD;;;;;IAMD,GAAG;QACF,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;YACpC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SACjE;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YAC3B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SACjD;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACrB;CACD;AAED;;;;MAIqB,YAAY;;IAIhC;;;;QAIC,IAAI,CAAC,WAAW,GAAG,IAAI,QAAQ,EAAE,CAAC;KAClC;;;;;IAMD,OAAO;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACxB;;;;;;;IAQD,EAAE,CAAC,MAAW,EAAE,IAAY,EAAE,QAAkB;QAC/C,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO;QAE9B,IAAI,OAAO,GAAG,IAAI,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAErC,OAAO,IAAI,CAAC;KACZ;;;;;;;;IASD,IAAI,CAAC,MAAW,EAAE,IAAY,EAAE,QAAkB;;QAEjD,IAAI,CAAC,EAAE,CACN,MAAM,EACN,IAAI,EACJ,UAAU,KAAU;;YAEnB,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;YAEvB,QAAQ,CAAC,KAAK,CAAC,CAAC;SAChB,CAAC,IAAI,CAAC,IAAI,CAAC,CACZ,CAAC;KACF;;;;;;IAOD,GAAG,CAAC,MAAW,EAAE,IAAY;QAC5B,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO;QAE9B,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAE5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACrC,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAEtB,IAAI,OAAO,CAAC,MAAM,IAAI,MAAM,EAAE;gBAC7B,OAAO,CAAC,GAAG,EAAE,CAAC;gBACd,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;aACvC;SACD;KACD;;;;IAKD,SAAS;QACR,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO;QAE9B,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAErC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACrC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACd;QAED,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;KACzB;CACD;AAED;;AC3IA;;;;;AAMA;;;AAGA,IAAI,MAAW,CAAC;AAEhB;AACA,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;;IAElC,MAAM,GAAG,IAAI,CAAC;CACd;KAAM;IACN,MAAM,GAAG,MAAM,CAAC;CAChB;AAED,eAAe,MAAM;;ACnBrB;;;;;AAaA,IAAIC,SAAO,GAAGC,QAAM,CAAC,OAAO,CAAC;AAC7B,MAAM,QAAQ,GACb,OAAO,iBAAiB,KAAK,WAAW;IACxC,IAAI,YAAY,iBAAiB;IACjC,OAAO,aAAa,IAAI,WAAW,CAAC;AACrC,MAAM,MAAM,GAAG,KAAK,CAAC;AAErB,MAAM,MAAO,SAAQ,YAAY;IAchC;QACC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACrB;IAbD,IAAI,MAAM;QACT,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;IAED,IAAI,MAAM,CAAC,KAAc;QACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;KAC1B;IAOD,GAAG,CAAC,GAAG,QAAa;QACnB,IAAI,QAAQ,EAAE;YACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3D;aAAM;YACN,IAAI,IAAI,CAAC,OAAO,EAAE;gBACjBD,SAAO,CAAC,GAAG,CAAC,IAAI,CAACA,SAAO,EAAE,MAAM,EAAE,GAAG,SAAS,CAAC,CAAC;aAChD;SACD;KACD;IAED,KAAK,CAAC,GAAG,QAAa;QACrB,IAAI,QAAQ,EAAE;YACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7D;aAAM;YACN,IAAI,IAAI,CAAC,OAAO,IAAIA,SAAO,CAAC,KAAK,EAAE;gBAClCA,SAAO,CAAC,KAAK,CAAC,IAAI,CAACA,SAAO,EAAE,MAAM,EAAE,GAAG,SAAS,CAAC,CAAC;aAClD;SACD;KACD;IAED,MAAM,CAAC,GAAG,QAAa;QACtB,IAAI,IAAI,CAAC,OAAO,IAAIA,SAAO,CAAC,MAAM,EAAE;YACnC,IAAI,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACzD,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAE1BA,SAAO,CAAC,MAAM,CAAC,IAAI,CAACA,SAAO,EAAE,SAAS,EAAE,GAAG,SAAS,CAAC,CAAC;SACtD;KACD;IAED,IAAI,CAAC,GAAG,QAAa;QACpB,IAAI,QAAQ,EAAE;YACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5D;aAAM;YACN,IAAI,IAAI,CAAC,OAAO,EAAE;gBACjBA,SAAO,CAAC,IAAI,CAAC,IAAI,CAACA,SAAO,EAAE,MAAM,EAAE,GAAG,SAAS,CAAC,CAAC;aACjD;SACD;KACD;IAED,KAAK,CAAC,GAAG,QAAa;QACrB,IAAI,QAAQ,EAAE;YACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7D;aAAM;YACN,IAAI,IAAI,CAAC,OAAO,EAAE;gBACjBA,SAAO,CAAC,KAAK,CAAC,IAAI,CAACA,SAAO,EAAE,MAAM,EAAE,GAAG,SAAS,CAAC,CAAC;aAClD;SACD;KACD;CACD;AAED,IAAI,MAAM,GAAG,IAAI,MAAM,EAAE;;AC1FzB;;;;;AAaA,MAAM,MAAO,SAAQ,YAAY;IAChC;QACC,KAAK,EAAE,CAAC;KACR;;;;;IAMD,IAAI,CAAC,WAAmB;QACvB,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE;YAChB,WAAW,CAAC,KAAK,EAAE,CAAC;SACpB,CAAC,CAAC;QAEH,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,IAAI;YAC7B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB,CAAC,CAAC;QAEH,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,WAAW;YACpC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SAC/B,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;KACnB;;;;IAKD,MAAM;QACL,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAEhC,OAAO,IAAI,CAAC;KACZ;;;;;IAMD,IAAI,CAAC,IAAS,EAAE,IAAe;QAC9B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KACxB;;;;;IAMD,KAAK,CAAC,WAAmB;QACxB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;KAC/B;IAED,KAAK;QACJ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnB;;;ACnEF;;;;;MAa8B,WAAY,SAAQ,MAAM;IAsBvD,YAAY,UAAyB,EAAE;QACtC,KAAK,EAAE,CAAC;QAER,IAAI,OAAO,CAAC,KAAK,EAAE;YAClB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;SACrB;QAED,IAAI,CAAC,IAAI,GAAG,IAAI,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,WAAW,EAAE,CAAC;KACvC;IAzBS,gBAAgB;QACzB,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QAExC,IAAI,CAAC,aAAa;aAChB,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,CAAC,IAAI;YAChC,IAAI,CAAC,IAAI,CAACD,cAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;SACnC,CAAC;aACD,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,CAAC,IAAI;YAChC,IAAI,CAAC,IAAI,CAACA,cAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7B,CAAC;aACD,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,IAAI;YAC5B,IAAI,CAAC,IAAI,CAACA,cAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SAC9B,CAAC,CAAC;KACJ;;;;;IAyBS,mBAAmB,CAAC,GAA6B;QAC1D,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;YAC9C,OAAO,MAAM,CAAC;SACd;QAED,IAAI,aAAa,CAAC,GAAG,CAAC,EAAE;YACvB,MAAM,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;SAC7B;QAED,OAAO,MAAM,CAAC;KACd;IAED,KAAK,MAAW;IAEhB,OAAO;QACN,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QAExB,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;KAC/B;;;AC9EF;;;;;AAMA;;;;AAIA,IAAK,KAMJ;AAND,WAAK,KAAK;IACT,yDAAoB,CAAA;IACpB,iEAAoB,CAAA;IACpB,iDAAY,CAAA;IACZ,6DAAkB,CAAA;IAClB,qFAA8B,CAAA;AAC/B,CAAC,EANI,KAAK,KAAL,KAAK,QAMT;AAED,mBAAe,KAAK;;AClBpB;;;;;AAMO,MAAM,QAAQ,GAAG,CAAC,CAAC;AACnB,MAAM,YAAY,GAAG,CAAC,CAAC;AACvB,MAAM,iBAAiB,GAAG,CAAC,CAAC;AAC5B,MAAM,WAAW,GAAG,iBAAiB,CAAC;AAE7C,IAAY,aAGX;AAHD,WAAY,aAAa;IACxB,iDAAQ,CAAA;IACR,iDAAI,CAAA;AACL,CAAC,EAHW,aAAa,KAAb,aAAa;;ACXzB;;;;;AAMA;;;AAIA,SAAS,IAAI,CAAC,GAA6B;IAC1C,IAAI,UAAU,GAAG,CAAC,CAAC;IAEnB,IAAI,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;QAC5B,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;QAC5B,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;KACjB;IAED,OAAO,IAAI,QAAQ,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;AACtC,CAAC;AAED,MAAM,cAAc;IACnB,iBAAgB;;;;;;;IAQhB,SAAS,CAAC,MAAgC,EAAE,UAAkB;QAC7D,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;KACzC;;;;;;;;IASD,UAAU,CAAC,MAAgC,EAAE,UAAU,EAAE,eAAwB,KAAK;QACrF,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;KACxD;;;;;;;;IASD,UAAU,CAAC,MAAgC,EAAE,UAAkB,EAAE,eAAwB,KAAK;QAC7F,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;KACxD;;;ACtDF;;;;;AAMA,IAAK,WAIJ;AAJD,WAAK,WAAW;IACf,4DAAgB,CAAA;IAChB,+CAAS,CAAA;IACT,+CAAS,CAAA;AACV,CAAC,EAJI,WAAW,KAAX,WAAW,QAIf;AAED,oBAAe,WAAW;;ACZ1B;;;;;AAYA;;;MAGqB,MAAO,SAAQ,cAAc;;;;IAajD,YAAY,MAAkB;QAC7B,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAEzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC;QAExD,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC;QACxD,IAAI,iBAAiB,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAElC,IAAI,CAAC,SAAS,GAAG,CAAC,iBAAiB,IAAI,EAAE,IAAI,SAAS,CAAC;QAEvD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC;QAExD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEvD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEnE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;KAC1C;IAED,KAAK;QACJ,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC;QAClD,QACC,eAAe,KAAK,EAAE,GAAG,QAAQ;aAChC,OAAO,KAAKG,aAAW,CAAC,WAAW,IAAI,OAAO,KAAKA,aAAW,CAAC,KAAK,IAAI,OAAO,KAAKA,aAAW,CAAC,KAAK,CAAC,EACtG;KACF;;;ACvDF;;;;;AAeA,MAAM,UAAW,SAAQ,MAAM;IAM9B,YAAY,GAAY,EAAE,MAAiB,EAAE,UAAyB,EAAE;QACvE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,WAAW,EAAE,CAAC;KACvC;;;;IAKD,IAAI,CAAC,UAAsB;QAC1B,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;QAC3C,IAAI,MAAyB,CAAC;QAE9B,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAEjC,IAAI,IAAI,CAAC,GAAG,KAAK,QAAQ,EAAE;YAC1B,IAAI,aAAa,CAAC,UAAU,GAAG,iBAAiB,GAAG,WAAW,EAAE;;gBAE/D,aAAa,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAErC,IAAI,CAAC,GAAG,IAAI,iBAAiB,CAAC;aAC9B;SACD;QAED,OAAO,aAAa,CAAC,UAAU,GAAG,CAAC,EAAE;;YAEpC,MAAM,GAAG,aAAa,CAAC,KAAK,CAAC;YAE7B,IAAI,MAAM,CAAC,MAAM,IAAI,WAAW,EAAE;gBACjC,IAAI,WAAW,GAAG,EAAE,CAAC;gBACrB,IAAI,cAAc,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACtE,IAAI,eAAe,GAAG,CAAC,CAAC;gBACxB,IAAI,OAAO,GAAG,WAAW,GAAG,cAAc,GAAG,eAAe,CAAC;gBAE7D,IAAI,MAAM,CAAC,MAAM,IAAI,OAAO,EAAE;oBAC7B,IAAI,SAAS,GAAG,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;oBAEhC,IAAI,GAAG,CAAC,KAAK,EAAE,EAAE;wBAChB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;wBACvB,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC;qBAC1B;yBAAM;wBACN,IAAI,MAAM,GAAG,yCAAyC,GAAG,CAAC,eAAe,mBAAmB,aAAa,CAAC,UAAU,WAAW,SAAS,GAAG,CAAC;wBAE5I,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;wBAErB,IAAI,CAAC,KAAK,EAAE,CAAC;wBAEb,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;qBACtD;iBACD;qBAAM;oBACN,MAAM;iBACN;aACD;iBAAM;gBACN,MAAM;aACN;SACD;KACD;IAED,KAAK;QACJ,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;QAE/B,aAAa,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnB;;;ACxFF;;;;;SASgB,cAAc,CAAC,IAAgB;IAC9C,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IAC5B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;IAC9B,OAAO,MAAM,CAAC;AACf,CAAC;AAED,SAAS,UAAU,CAAC,MAAkB,EAAE,QAAQ,GAAG,KAAK;IACvD,IAAI,GAAG,GAAG,IAAI,EACb,KAAK,GAAG,IAAI,EACZ,IAAI,GAAG,IAAI,CAAC;IAEb,IAAI,QAAQ,EAAE;QACb,IAAI;YACH,IAAI,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACzC;QAAC,OAAO,CAAC,EAAE;YACX,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;SACnD;QACD,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;KACnC;SAAM;QACN,IAAI,GAAG,MAAM,CAAC;KACd;IACD,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IACzB,IAAI,QAAQ,EAAE;QACb,GAAG,CAAC,WAAW,IAAI,CAAC,CAAC;KACrB;IACD,IAAI,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;IAC/D,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IAE3B,OAAO;QACN,GAAG,EAAE,GAAG,CAAC,KAAK;QACd,KAAK,EAAE,KAAK,CAAC,KAAK;QAClB,WAAW,EAAE,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW;KAChD,CAAC;AACH,CAAC;AAOD,SAAS,YAAY,CAAC,IAAgB;IACrC,IAAI,MAAM,GAAoB,EAAE,CAAC;IACjC,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,IAAI,CAAC,GAAG,IAAI,cAAc,EAAE,CAAC;IAE7B,QAAQ,IAAI,CAAC,CAAC,CAAC;QACd,KAAK,CAAC;YACL,WAAW,GAAG,CAAC,CAAC;YAChB,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,GAAG,CAAC,GAAG,WAAW,CAAC;YACrC,MAAM;QACP,KAAK,CAAC;YACL,WAAW,GAAG,CAAC,CAAC;YAChB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC7B,MAAM,CAAC,WAAW,GAAG,CAAC,GAAG,WAAW,CAAC;YACrC,MAAM;QACP,KAAK,CAAC;YACL,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;YAC9D,MAAM,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;YACzC,MAAM;QACP,KAAK,CAAC;YACL,WAAW,GAAG,CAAC,CAAC;YAChB,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE;gBACnG,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC1D,IAAI,IAAI,GAAG,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBACrC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;gBACpC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC;gBAChC,OAAO,GAAG,IAAI,CAAC;aACf;YACD,WAAW,IAAI,CAAC,CAAC;YACjB,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;YACjC,MAAM;QACP,KAAK,CAAC;YACL,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;YAC9D,MAAM,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;YACzC,MAAM;QACP,KAAK,CAAC;YACL,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;YACpB,WAAW,GAAG,CAAC,CAAC;YAChB,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;YACjC,MAAM;QACP,KAAK,CAAC;YACL,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;YACzB,WAAW,GAAG,CAAC,CAAC;YAChB,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;YACjC,MAAM;QACP,KAAK,CAAC;YACL,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACrC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;YACpB,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;YACjC,MAAM;QACP,KAAK,CAAC;YACL;gBACC,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC7E,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;gBAClB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,EAAE,KAAK,EAAE,EAAE;oBAC/C,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC3D,IAAI,KAAK,GAAG,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;oBACvC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;oBACtC,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC;iBACjC;gBACD,WAAW,IAAI,CAAC,CAAC;gBACjB,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;aACjC;YACD,MAAM;QACP,KAAK,CAAC;YACL,MAAM;QACP,KAAK,EAAE;YACN;gBACC,IAAI,GAAG,GAAG,EAAE,CAAC;gBACb,IAAI,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;oBACpC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC7D,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;iBACvC;gBACD,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;gBACnB,WAAW,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACrC,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;aACjC;YACD,MAAM;QACP,KAAK,EAAE;YACN,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnD,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;YACjC,MAAM;QACP,KAAK,EAAE;YACN,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3E,MAAM,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;YAC9D,MAAM,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;YACzC,MAAM;QACP;YACC,OAAO,IAAI,CAAC;KACb;IACD,CAAC,GAAG,IAAI,CAAC;IACT,OAAO,MAAM,CAAC;AACf,CAAC;AAED,SAAS,WAAW,CAAC,IAAgB;IACpC,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC9C,CAAC;AAED,SAAS,cAAc,CAAC,IAAgB;IACvC,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;IAChC,IAAI,EAAE,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnC,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC3B,EAAE,GAAG,IAAI,CAAC;IACV,IAAI,GAAG,IAAI,CAAC;IACZ,OAAO,GAAG,CAAC;AACZ;;ACnKA;;;;;AAWA,IAAY,gBAEX;AAFD,WAAY,gBAAgB;IAC3B,sDAAQ,CAAA;AACT,CAAC,EAFW,gBAAgB,KAAhB,gBAAgB,QAE3B;AAED,IAAY,cAGX;AAHD,WAAY,cAAc;IACzB,mDAAQ,CAAA;IACR,uDAAU,CAAA;AACX,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;MAEoB,SAAU,SAAQ,MAAM;IAA7C;;QAEC,QAAG,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA4ChB;;;AClED;;;;;AAwBO,MAAM,wBAAwB,GAAG;IACvC,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,IAAI;IACJ,IAAI;CACJ;;ACtCD;;;;;AAaA;AACA;AACA,IAAY,aAGX;AAHD,WAAY,aAAa;IACxB,mEAAiB,CAAA;IACjB,uDAAW,CAAA;AACZ,CAAC,EAHW,aAAa,KAAb,aAAa,QAGxB;AAED;;;;SAIgB,wBAAwB,CAAC,MAAkB;IAC1D,IAAI,GAAG,GAAG,qBAAqB,CAAC;;IAGhC,IAAI,eAAe,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,eAAe,IAAI,EAAE,EAAE;QAC1B,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,8BAA8B,CAAC,CAAC;;KAEnD;IAED,IAAI,sBAAsB,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACzE,IAAI,sBAAsB,KAAK,GAAG,EAAE;QACnC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,qCAAqC,CAAC,CAAC;KAC1D;IACD,IAAI,oBAAoB,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;IACnD,IAAI,oBAAoB,GAAG,CAAC,IAAI,oBAAoB,IAAI,CAAC,EAAE;QAC1D,MAAM,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;KACzD;IAED,IAAI,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;IAC/D,IAAI,UAAU,GAAG,wBAAwB,CAAC,sBAAsB,CAAC,CAAC;IAElE,OAAO;QACN,eAAe;QACf,sBAAsB;QACtB,oBAAoB;QACpB,WAAW;QACX,UAAU;KACV,CAAC;AACH,CAAC;AAED;;;MAGqB,YAAa,SAAQ,cAAc;;;;IAUvD,YAAY,MAAkB,EAAE,SAAiB;QAChD,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;QAErB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAElC,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,mBAAmB,GAAG,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAClE;KACD;;;AChFF;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;MAGqB,eAAgB,SAAQ,cAAc;;;;IAU1D,YAAY,MAAkB,EAAE,SAAiB;QAChD,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,WAAW,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;QAEzC,IAAI,SAAS,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;QAExC,QAAQ,SAAS;YAChB,KAAK,CAAC;gBACL,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,MAAM;YACP,KAAK,CAAC;gBACL,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,MAAM;SACP;QACD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAE/B,QAAQ,IAAI,CAAC,WAAW;YACvB,KAAK,gBAAgB,CAAC,GAAG;gBACxB,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;gBACjE,MAAM;YACP;gBACC,MAAM,CAAC,KAAK,CAAC,mDAAmD,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;SACrF;KACD;;;ACjEF;;;;;AAMA;;;;SAIwB,WAAW,CAAC,IAAgB;IACnD,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,EAC3B,iCAAiC,GAAG,EAAE,EACtC,CAAC,GAAG,CAAC,EACL,SAAiB,EACjB,OAAO,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;;IAG7B,OAAO,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE;QACtB,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;YAC/D,iCAAiC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9C,CAAC,IAAI,CAAC,CAAC;SACP;aAAM;YACN,CAAC,EAAE,CAAC;SACJ;KACD;;;IAID,IAAI,iCAAiC,CAAC,MAAM,KAAK,CAAC,EAAE;QACnD,OAAO,IAAI,CAAC;KACZ;;IAGD,SAAS,GAAG,MAAM,GAAG,iCAAiC,CAAC,MAAM,CAAC;IAE9D,IAAI;QACH,OAAO,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;KACpC;IAAC,OAAO,CAAC,EAAE;QACX,MAAM,wBAAwB,SAAS,EAAE,CAAC;KAC1C;IACD,IAAI,WAAW,GAAG,CAAC,CAAC;IAEpB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,WAAW,EAAE,EAAE,CAAC,EAAE,EAAE;QAC9C,IAAI,WAAW,KAAK,iCAAiC,CAAC,CAAC,CAAC,EAAE;;YAEzD,WAAW,EAAE,CAAC;;YAEd,iCAAiC,CAAC,KAAK,EAAE,CAAC;SAC1C;QACD,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;KAC/B;IAED,OAAO,OAAO,CAAC;AAChB;;ACtDA;;;;;AAMA;;;;;AAMA;;;;;;;SAOgB,OAAO,CAAC,MAAkB,EAAE,YAAoB,CAAC,EAAE,SAAiB,CAAC;IACpF,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,IAAI,eAAe,GAAG,CAAC,CAAC;IACxB,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,MAAM,GAAG,EAAE,EACd,MAAM,GAAG,CAAC,CAAC;IAEZ,KAAK,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,SAAS,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QACpD,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,eAAe,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,MAAM,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,eAAe,IAAI,IAAI,CAAC;QAEvD,MAAM,IAAI,MAAM,CAAC;KACjB;IAED,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAE1B,OAAO,GAAG,CAAC;AACZ,CAAC;AAED;;;;;SAKgB,QAAQ,CAAC,MAAkB,EAAE,YAAoB,CAAC;IACjE,OAAO,OAAO,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC;AAED;;;;;SAKgB,OAAO,CAAC,MAAkB,EAAE,YAAoB,CAAC;IAChE,IAAI,YAAY,GAAG,EAAE,CAAC;IACtB,IAAI,SAAS,GAAG,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;IACtC,IAAI,QAAQ,GAAG,KAAK,CAAC;IACrB,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,IAAI,eAAe,GAAG,CAAC,CAAC;IACxB,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,IAAI,KAAK,GAAG,EAAE,CAAC;;IAGf,KAAK,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;QAC3C,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,eAAe,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAE9B,MAAM,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,eAAe,IAAI,IAAI,CAAC;QAEvD,IAAI,CAAC,QAAQ,EAAE;YACd,IAAI,MAAM,KAAK,CAAC,EAAE;gBACjB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACrB;iBAAM;gBACN,QAAQ,GAAG,IAAI,CAAC;gBAChB,SAAS,GAAG,CAAC,CAAC;gBACd,MAAM;aACN;SACD;KACD;IAED,IAAI,aAAa,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;;IAG5C,KAAK,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,SAAS,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;QAC3D,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,eAAe,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,MAAM,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,eAAe,IAAI,IAAI,CAAC;QAEvD,KAAK,IAAI,MAAM,CAAC;KAChB;IAED,OAAO;QACN,SAAS,EAAE,YAAY,CAAC,MAAM,GAAG,aAAa;QAC9C,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC;KAC7B,CAAC;AACH,CAAC;AAED;;;;;SAKgB,OAAO,CAAC,MAAkB,EAAE,YAAoB,CAAC;IAChE,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACrC,IAAI,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;IAExB,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;IAErE,OAAO;QACN,SAAS,EAAE,GAAG,CAAC,SAAS;QACxB,KAAK,EAAE,WAAW;KAClB,CAAC;AACH,CAAC;AAED,gBAAe;IACd,OAAO;IACP,OAAO;IACP,OAAO;IACP,QAAQ;CACR;;ACvHD;;;;;AAQA,IAAI,SAAS,GAAG,CAAC,CAAC;AAuBlB;;;;;AAKA,SAAS,YAAY,CAAC,WAAW,EAAE,IAAI;IACtC,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,IAAI,WAAW,CAAC;IAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;QAC9B,IAAI,SAAS,IAAI,CAAC,EAAE;YACnB,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;YACxD,SAAS,IAAI,WAAW,CAAC,SAAS,CAAC;YAEnC,SAAS,GAAG,CAAC,SAAS,GAAG,WAAW,CAAC,KAAK,GAAG,GAAG,IAAI,GAAG,CAAC;SACxD;QAED,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;KAC3B;AACF,CAAC;AAED;;;;SAIgB,SAAS,CAAC,OAAmB;IAC5C,SAAS,GAAG,CAAC,CAAC;IAEd,IAAI,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAI,qBAAqB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IACvC,IAAI,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC3B,IAAI,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAGtC,+BAA+B,GAAG,EAAE;IACrC,IAAI,UAAU,CAAC;QAEd,QAAQ,EACR,SAAS,EACT,YAAY;IACb,IAAI,UAAU,GAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,EACxC,UAAU,GAAG,CAAC,CAAC;IAChB,IAAI,YAAoB,CAAC;IACzB,IAAI,GAAG,GAAG,CAAC,EACV,iBAAyB,EACzB,UAAkB,EAClB,qBAAqB,GAAY,IAAI,CAAC;;IAGvC,IAAI,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACxD,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC;IAE9B,IACC,WAAW,IAAI,GAAG;QAClB,WAAW,IAAI,GAAG;QAClB,WAAW,IAAI,GAAG;QAClB,WAAW,IAAI,GAAG;QAClB,WAAW,IAAI,EAAE;QACjB,WAAW,IAAI,EAAE;QACjB,WAAW,IAAI,EAAE;QACjB,WAAW,IAAI,GAAG;QAClB,WAAW,IAAI,GAAG,EACjB;;QAED,IAAI,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC7D,SAAS,IAAI,WAAW,CAAC,SAAS,CAAC;QAEnC,IAAI,WAAW,CAAC,KAAK,IAAI,CAAC,EAAE;;YAE3B,SAAS,IAAI,CAAC,CAAC;SACf;;QAGD,IAAI,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC3D,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC;;QAGjC,IAAI,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC3D,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC;;;QAIjC,SAAS,IAAI,CAAC,CAAC;;QAGf,+BAA+B,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC7E,SAAS,IAAI,CAAC,CAAC;QAEf,IAAI,+BAA+B,EAAE;YACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,WAAW,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC3D,IAAI,6BAA6B,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;gBAC/E,SAAS,IAAI,CAAC,CAAC;gBAEf,IAAI,6BAA6B,EAAE;oBAClC,IAAI,CAAC,GAAG,CAAC,EAAE;wBACV,YAAY,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;qBAC/B;yBAAM;wBACN,YAAY,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;qBAC/B;iBACD;aACD;SACD;KACD;;IAGD,IAAI,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC1D,SAAS,IAAI,QAAQ,CAAC,SAAS,CAAC;;IAGhC,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACzD,IAAI,kBAAkB,GAAG,OAAO,CAAC,KAAK,CAAC;IACvC,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;IAE/B,IAAI,kBAAkB,KAAK,CAAC,EAAE;;QAE7B,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACxD,SAAS,IAAI,UAAU,CAAC,SAAS,CAAC;KAClC;SAAM,IAAI,kBAAkB,KAAK,CAAC,EAAE;;QAEpC,SAAS,IAAI,CAAC,CAAC;;QAGf,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACtD,SAAS,IAAI,QAAQ,CAAC,SAAS,CAAC;;QAGhC,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACvD,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC;;QAGjC,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACzD,SAAS,IAAI,WAAW,CAAC,SAAS,CAAC;;QAGnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YAClD,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;;SAG5B;KACD;;;;IAKD,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACzD,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;;;IAI/B,SAAS,IAAI,CAAC,CAAC;;IAGf,IAAI,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC7D,SAAS,IAAI,WAAW,CAAC,SAAS,CAAC;;IAGnC,IAAI,YAAY,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC9D,SAAS,IAAI,YAAY,CAAC,SAAS,CAAC;;;;IAKpC,IAAI,mBAAmB,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACrE,SAAS,IAAI,CAAC,CAAC;IAEf,IAAI,CAAC,mBAAmB,EAAE;;;QAGzB,SAAS,IAAI,CAAC,CAAC;KACf;;;IAID,SAAS,IAAI,CAAC,CAAC;;IAGf,IAAI,mBAAmB,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACrE,SAAS,IAAI,CAAC,CAAC;IAEf,IAAI,QAAQ,GAAG,CAAC,EACf,SAAS,GAAG,CAAC,EACb,OAAO,GAAG,CAAC,EACX,UAAU,GAAG,CAAC,CAAC;IAChB,IAAI,mBAAmB,EAAE;QACxB,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACzD,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;QAC/B,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;QAEzB,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACzD,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;QAC/B,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC;QAE1B,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACzD,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;QAC/B,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;QAExB,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACzD,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;QAC/B,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC;KAC3B;;IAGD,IAAI,2BAA2B,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC7E,SAAS,IAAI,CAAC,CAAC;IAEf,IAAI,2BAA2B,EAAE;;;;QAKhC,IAAI,8BAA8B,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAChF,SAAS,IAAI,CAAC,CAAC;QAEf,IAAI,8BAA8B,EAAE;YACnC,MAAM,cAAc,GAAG,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YACnE,SAAS,IAAI,CAAC,CAAC;YAEf,QAAQ,cAAc;gBACrB,KAAK,CAAC;oBACL,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpB,MAAM;gBACP,KAAK,CAAC;oBACL,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtB,MAAM;gBACP,KAAK,CAAC;oBACL,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtB,MAAM;gBACP,KAAK,CAAC;oBACL,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtB,MAAM;gBACP,KAAK,CAAC;oBACL,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtB,MAAM;gBACP,KAAK,CAAC;oBACL,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtB,MAAM;gBACP,KAAK,CAAC;oBACL,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtB,MAAM;gBACP,KAAK,CAAC;oBACL,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtB,MAAM;gBACP,KAAK,CAAC;oBACL,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtB,MAAM;gBACP,KAAK,EAAE;oBACN,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtB,MAAM;gBACP,KAAK,EAAE;oBACN,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtB,MAAM;gBACP,KAAK,EAAE;oBACN,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtB,MAAM;gBACP,KAAK,EAAE;oBACN,UAAU,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;oBACvB,MAAM;gBACP,KAAK,EAAE;oBACN,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpB,MAAM;gBACP,KAAK,EAAE;oBACN,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpB,MAAM;gBACP,KAAK,EAAE;oBACN,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpB,MAAM;gBACP,KAAK,GAAG,EAAE;oBACT,IAAI,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;oBACzD,SAAS,IAAI,CAAC,CAAC;oBACf,IAAI,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;oBACzD,SAAS,IAAI,CAAC,CAAC;oBACf,IAAI,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;oBAC1D,SAAS,IAAI,CAAC,CAAC;oBACf,IAAI,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;oBAC1D,SAAS,IAAI,CAAC,CAAC;oBACf,UAAU,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,OAAO,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC;oBAChE,MAAM;iBACN;aACD;YAED,IAAI,UAAU,EAAE;gBACf,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;aAC3C;YAED,IAAI,cAAc,KAAK,GAAG,EAAE;;gBAE3B,SAAS,IAAI,EAAE,CAAC;;gBAEhB,SAAS,IAAI,EAAE,CAAC;aAChB;SACD;QAED,IAAI,0BAA0B,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC5E,SAAS,IAAI,CAAC,CAAC;QAEf,IAAI,0BAA0B,EAAE;YAC/B,SAAS,IAAI,CAAC,CAAC;;SAEf;QAED,IAAI,8BAA8B,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAChF,SAAS,IAAI,CAAC,CAAC;QAEf,IAAI,8BAA8B,EAAE;;;;;;;;;;;;;YAanC,YAAY,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YAC7D,SAAS,IAAI,CAAC,CAAC;;;;YAMf,SAAS,IAAI,CAAC,CAAC;YAEf,IAAI,+BAA+B,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YACjF,SAAS,IAAI,CAAC,CAAC;YAEf,IAAI,+BAA+B,EAAE;;;;gBAIpC,SAAS,IAAI,EAAE,CAAC;aAChB;SACD;QAED,IAAI,4BAA4B,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC9E,SAAS,IAAI,CAAC,CAAC;QAEf,IAAI,4BAA4B,EAAE;YACjC,IAAI,gCAAgC,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YAClF,SAAS,IAAI,gCAAgC,CAAC,SAAS,CAAC;YAExD,IAAI,mCAAmC,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YACrF,SAAS,IAAI,mCAAmC,CAAC,SAAS,CAAC;SAC3D;QAED,IAAI,wBAAwB,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC1E,SAAS,IAAI,CAAC,CAAC;QAEf,IAAI,wBAAwB,EAAE;YAC7B,iBAAiB,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;YACnE,SAAS,IAAI,EAAE,CAAC;YAEhB,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;YAC5D,SAAS,IAAI,EAAE,CAAC;YAEhB,qBAAqB,GAAG,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YACrE,SAAS,IAAI,CAAC,CAAC;YAEf,GAAG,GAAG,UAAU,IAAI,iBAAiB,GAAG,CAAC,CAAC,CAAC;SAC3C;;;KAID;;;IAKD,OAAO;QACN,OAAO,EAAE,YAAY;QAErB,WAAW;QACX,qBAAqB;QACrB,SAAS;QACT,MAAM,EAAE,MAAM,CAAC,KAAK;QACpB,yBAAyB,EAAE,OAAO,CAAC,KAAK;QACxC,kBAAkB;QAClB,iCAAiC,EAAE,UAAU,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC;QAEpE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,GAAG,QAAQ,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,IAAI,UAAU,CAAC;QAC5F,MAAM,EAAE,CAAC,CAAC,GAAG,mBAAmB,KAAK,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,OAAO,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC;QAEhG,UAAU;QACV,YAAY;QAEZ,GAAG;QACH,QAAQ,EAAE,qBAAqB;KAC/B,CAAC;AACH;;ACvaA;;;;;AAYA;;;;SAIgB,SAAS,CAAC,OAAmB;IAC5C,IAAI,SAAS,GAAG,CAAC,CAAC;IAElB,IAAI,YAAY,GAAG,OAAO,CAAC;IAC3B,IAAI,iCAAiC,GAAG,CAAC,EACxC,aAAa,GAAG,EAAE,CAAC;IACpB,IAAI,QAAQ,EAAE,UAAU,CAAC;IACzB,IAAI,CAAC,GAAG,CAAC,CAAC;;IAGV,IAAI,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACxD,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC;;IAG9B,IAAI,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACxD,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC;;;;IAK9B,IAAI,wBAAwB,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC1E,SAAS,IAAI,CAAC,CAAC;;IAGf,IAAI,4CAA4C,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC9F,SAAS,IAAI,CAAC,CAAC;;IAGf,IAAI,aAAa,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC/D,SAAS,IAAI,aAAa,CAAC,SAAS,CAAC;IAErC,IAAI,aAAa,CAAC,KAAK,GAAG,CAAC,EAAE;;QAE5B,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACzD,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;QAE/B,IAAI,MAAM,GAAG,CAAC,EACb,OAAO,CAAC;QAET,QAAQ,OAAO,CAAC,KAAK;YACpB,KAAK,CAAC;gBACL,KAAK,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;;oBAEnD,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;oBACrD,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;iBAC/B;gBACD,MAAM;YACP,KAAK,CAAC;gBACL,KAAK,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;;oBAEnD,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;oBACrD,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;;oBAE/B,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;oBACrD,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;iBAC/B;gBACD,MAAM;YACP,KAAK,CAAC,CAAC;YACP,KAAK,CAAC,CAAC;YACP,KAAK,CAAC;;gBAEL,iCAAiC,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;gBAC/E,SAAS,IAAI,CAAC,CAAC;;gBAEf,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;gBACtD,SAAS,IAAI,QAAQ,CAAC,SAAS,CAAC;gBAChC,MAAM;YACP,KAAK,CAAC;gBACL;;oBAEC,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;oBACxD,SAAS,IAAI,UAAU,CAAC,SAAS,CAAC;oBAElC,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC3D,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;;wBAEvC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;wBACvE,SAAS,IAAI,MAAM,CAAC;qBACpB;iBACD;gBACD,MAAM;SACP;KACD;;IAGD,IAAI,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC7D,SAAS,IAAI,WAAW,CAAC,SAAS,CAAC;;IAGnC,IAAI,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC7D,SAAS,IAAI,WAAW,CAAC,SAAS,CAAC;;IAGnC,IAAI,kBAAkB,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACpE,SAAS,IAAI,CAAC,CAAC;;IAGf,IAAI,mBAAmB,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;IACxE,SAAS,IAAI,CAAC,CAAC;;IAGf,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACzD,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;;IAE/B,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACzD,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;;IAE/B,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACzD,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;IAE/B,IAAI,sCAAsC,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACxF,SAAS,IAAI,CAAC,CAAC;IACf,IAAI,2BAA2B,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC7E,SAAS,IAAI,CAAC,CAAC;IACf,IAAI,8BAA8B,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAChF,SAAS,IAAI,CAAC,CAAC;;;;IAMf,OAAO;QACN,aAAa,EAAE,aAAa,CAAC,KAAK,GAAG,CAAC;KACtC,CAAC;AACH;;AC5IA;;;;;AAQA;;;;SAIgB,SAAS,CAAC,OAAmB;IAC5C,OAAO,EAAE,CAAC;AACX;;ACdA;;;;;AAaA;;;;;AAKA,SAAS,UAAU,CAAC,OAAmB;;;;;;;;;;;IAYtC,OAAO,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACxB,CAAC;MAEoB,IAAK,SAAQ,cAAc;IAa/C,YAAY,MAAkB;QAC7B,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;;QAGzC,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;;QAGvC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAElC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,QAAQ,IAAI,CAAC,SAAS;YACrB;gBACC,MAAM;YACP,uBAAyB;YACzB,uBAAyB;YACzB;;gBAEC,MAAM;YACP;;gBAEC,MAAM;YACP;gBACC,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChC,MAAM;YACP;gBACC,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChC,MAAM;YACP;gBACC,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChC,MAAM;YACP;gBACC,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9C,MAAM;SACP;KACD;;;ACpFF;;;;;MAmCa,QAAS,SAAQ,YAAY;IAGzC;QACC,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACxB;IAED,IAAI,CAAC,IAAkB;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,GAAG,CAAC,EACR,UAAU,GAAG,CAAC,EACd,mBAAmB,GAAG,CAAC,CAAC;QACzB,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC;QACjD,IAAI,SAAS,CAAC;QAEd,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI;gBACH,SAAS,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;aAC7E;YAAC,OAAO,CAAC,EAAE;gBACX,MAAM,wBAAwB,IAAI,CAAC,WAAW,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,EAAE,CAAC;aAClF;YACD,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAChC,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;SACpD;aAAM;YACN,SAAS,GAAG,OAAO,CAAC;SACpB;QAED,IAAI,CAAC,cAAc,EAAE;YACpB,IAAI,CAAC,GAAG,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;YACjC,IAAI,eAAe,GAAG,CAAC,CAAC;;;YAIxB,GAAG;gBACF,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;oBAC1B,eAAe,EAAE,CAAC;iBAClB;qBAAM;oBACN,MAAM;iBACN;gBAED,CAAC,EAAE,CAAC;aACJ,QAAQ,CAAC,GAAG,CAAC,EAAE;YAEhB,IAAI,eAAe,IAAI,CAAC,EAAE;;gBAEzB,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;aACzC;YAED,GAAG;gBACF,IAAI,MAAM,GACT,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC9F,IAAI,UAAU,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;gBACzD,IAAI,iBAAiB,GAAG,CAAC,CAAC;gBAC1B,IAAI,UAAU,GAAG,CAAC,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;gBAE5C,IAAI,UAAU,IAAI,CAAC,KAAK,CAAC,EAAE;;oBAE1B,iBAAiB,GAAG,CAAC,CAAC;iBACtB;qBAAM,IAAI,UAAU,KAAK,CAAC,EAAE;;oBAE5B,iBAAiB,GAAG,CAAC,CAAC;iBACtB;gBAED,IAAI,iBAAiB,KAAK,CAAC,IAAI,iBAAiB,KAAK,CAAC,IAAI,UAAU,EAAE;oBACrE,IAAI,QAAQ,GAAG,UAAU,GAAG,mBAAmB,CAAC;oBAChD,IAAI,aAAa,GAAG,UAAU,IAAI,eAAe,IAAI,CAAC,CAAC;oBAEvD,IAAI,CAAC,GAAG,UAAU,KAAK,CAAC,UAAU,IAAI,aAAa,CAAC,EAAE;wBACrD,IAAI,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,aAAa,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;wBACpE,IAAI,IAAI,GAAG,IAAIC,IAAO,CAAC,KAAK,CAAC,CAAC;;wBAG9B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;wBACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;wBAEf,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;wBACxB,UAAU,GAAG,CAAC,CAAC;qBACf;oBAED,IAAI,UAAU,EAAE;wBACf,IAAI,eAAe,GAAG,CAAC,EAAE;4BACxB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;4BAClD,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC;4BAC3B,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC;4BAC3B,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,mBAAmB,CAAC;yBACvD;6BAAM;4BACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;yBACxB;qBACD;oBAED,IAAI,CAAC,KAAK,UAAU,EAAE;;wBAErB,mBAAmB,GAAG,iBAAiB,CAAC;qBACxC;oBAED,CAAC,IAAI,iBAAiB,IAAI,CAAC,CAAC;iBAC5B;qBAAM;oBACN,CAAC,EAAE,CAAC;iBACJ;aACD,QAAQ,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE;SAC/B;aAAM;YACN,IAAI,QAAQ,GAAG,CAAC,EACf,IAAI,GAAG,CAAC,EACR,MAAM,GAAG,CAAC,CAAC;YACZ,GAAG;gBACF,IAAI,GAAG,CAAC,CAAC;gBACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;oBACxC,IAAI,GAAG,IAAI,IAAI,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC1E;;gBAED,QAAQ,IAAI,cAAc,CAAC;gBAC3B,MAAM,GAAG,QAAQ,GAAG,IAAI,CAAC;gBACzB,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE;oBAC9B,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;iBAC1B;gBAED,IAAI,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;gBACjD,IAAI,IAAI,GAAG,IAAIA,IAAO,CAAC,KAAK,CAAC,CAAC;;gBAE9B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;gBACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;gBAEf,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACxB,QAAQ,GAAG,MAAM,CAAC;aAClB,QAAQ,QAAQ,GAAG,SAAS,CAAC,MAAM,EAAE;SACtC;QAED,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,IAAI,GAAG,IAAIA,IAAO,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;YAEpF,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;YAChC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;YAEhC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAExB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACxB;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAClB;IAED,KAAK;QACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACxB;;;ACpLF;;;;;AAgBA;AACA;AACA;AACA,IAAY,cAIX;AAJD,WAAY,cAAc;IACzB,qEAAiB,CAAA;IACjB,mDAAQ,CAAA;IACR,mEAAgB,CAAA;AACjB,CAAC,EAJW,cAAc,KAAd,cAAc,QAIzB;AAED;;;;SAIgB,kCAAkC,CAAC,IAAgB;IAClE,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,oBAAoB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,cAAc,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IAC1C,IAAI,QAAQ,GAAG,EAAE,EAChB,QAAQ,GAAG,EAAE,CAAC;IAEf,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;IAEhC,IAAI,QAAQ,KAAK,CAAC,EAAE;QACnB,MAAM,CAAC,KAAK,CAAC,oDAAoD,CAAC,CAAC;KACnE;SAAM,IAAI,QAAQ,GAAG,CAAC,EAAE;QACxB,IAAI,QAAQ,GAAG,CAAC,EAAE;YACjB,MAAM,CAAC,IAAI,CAAC,2DAA2D,QAAQ,EAAE,CAAC,CAAC;SACnF;QAED,GAAG,EAAE,CAAC;QACN,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,aAAa,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACrD,GAAG,IAAI,CAAC,CAAC;YAET,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC;YACvD,GAAG,IAAI,aAAa,CAAC;SACrB;KACD;IAED,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAEzB,IAAI,QAAQ,KAAK,CAAC,EAAE;QACnB,MAAM,CAAC,KAAK,CAAC,oDAAoD,CAAC,CAAC;KACnE;SAAM,IAAI,QAAQ,GAAG,CAAC,EAAE;QACxB,IAAI,QAAQ,GAAG,CAAC,EAAE;YACjB,MAAM,CAAC,IAAI,CAAC,2DAA2D,QAAQ,EAAE,CAAC,CAAC;SACnF;QAED,GAAG,EAAE,CAAC;QACN,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,aAAa,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACrD,GAAG,IAAI,CAAC,CAAC;YAET,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC;YACvD,GAAG,IAAI,aAAa,CAAC;SACrB;KACD;IAED,OAAO;QACN,OAAO;QACP,OAAO;QACP,oBAAoB;QACpB,KAAK;QACL,cAAc;QACd,QAAQ;QACR,QAAQ;KACR,CAAC;AACH,CAAC;AAED,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAChC,MAAM,SAAS,GAAW,EAAE,CAAC;AAE7B,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAU;IAC9B,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC;AAEH;;;MAGqB,cAAe,SAAQ,cAAc;;;;IAczD,YAAY,OAAwB,EAAE,MAAkB,EAAE,SAAiB;QAC1E,KAAK,EAAE,CAAC;QAER,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;QAEjC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAE/B,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;YAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC;YACzD,IAAI,CAAC,GAAG,GAAG,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,CAAC;SAClC;aAAM;YACN,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;SACb;QAED,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAE/B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAElC,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,0BAA0B,GAAG,kCAAkC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEnF,GAAG,CAAC,0BAA0B,GAAG,IAAI,CAAC,0BAA0B,CAAC;SACjE;aAAM;YACN,IAAI,OAAO,CAAC,WAAW,EAAE;gBACxB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBAEnB,IAAI,GAAG,GAAiB;oBACvB,GAAG,EAAE,IAAI,CAAC,GAAG;oBACb,GAAG,EAAE,IAAI,CAAC,GAAG;oBACb,OAAO,EAAE,IAAI,CAAC,OAAO;iBACrB,CAAC;gBAEF,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE;oBACrC,IAAI,GAAG,CAAC,0BAA0B,EAAE;wBACnC,GAAG,CAAC,cAAc,GAAG,GAAG,CAAC,0BAA0B,CAAC,cAAc,CAAC;qBACnE;oBAED,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;oBAGnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;qBACjC;;oBAGD,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;iBACtC;aACD;SACD;KACD;;;AClKF;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAY,aAEX;AAFD,WAAY,aAAa;IACxB,+CAAO,CAAA;AACR,CAAC,EAFW,aAAa,KAAb,aAAa,QAExB;AAED;;;MAGqB,eAAgB,SAAQ,cAAc;;;;IAS1D,YAAY,OAAwB,EAAE,MAAkB,EAAE,SAAiB;QAC1E,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAEhC,QAAQ,IAAI,CAAC,OAAO;YACnB,KAAK,aAAa,CAAC,GAAG;gBACrB,IAAI,CAAC,SAAS,GAAG,IAAI,cAAc,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;gBAC5E,MAAM;YACP;gBACC,MAAM,CAAC,KAAK,CAAC,+CAA+C,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC7E;KACD;;;ACpDF;;;;;AAoBA,MAAM,UAAW,SAAQ,MAAM;IAK9B,YAAY,GAAY,EAAE,GAAc,EAAE,UAAyB,EAAE;QACpE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExB,IAAI,CAAC,OAAO,GAAG;YACd,GAAG;YACH,GAAG;YACH,OAAO;SACP,CAAC;KACF;IAED,IAAI,CAAC,GAAW;QACf,QAAQ,GAAG,CAAC,OAAO;YAClB,KAAKD,aAAW,CAAC,WAAW;gBAC3B,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACnC,MAAM;YACP,KAAKA,aAAW,CAAC,KAAK;gBACrB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBAC1B,MAAM;YACP,KAAKA,aAAW,CAAC,KAAK;gBACrB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBAC1B,MAAM;YACP;gBACC,MAAM,CAAC,KAAK,CAAC,oCAAoC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;SACjE;KACD;IAED,KAAK;QACJ,MAAM,IAAI,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAClB;IAED,KAAK;QACJ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnB;IAEO,gBAAgB,CAAC,MAAkB;QAC1C,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QACtB,IAAI,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;QAEpC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACjB,IAAI,EAAE,KAAK;YACX,OAAO,EAAEA,aAAW,CAAC,WAAW;YAChC,GAAG,MAAM;SACT,CAAC,CAAC;KACH;IAEO,eAAe,CAAC,GAAW;QAClC,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QACtB,MAAM,IAAI,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC;QAE3E,IAAI,GAAG,GAAgB;YACtB,IAAI,EAAE,KAAK;YACX,OAAO,EAAEA,aAAW,CAAC,KAAK;YAC1B,SAAS,EAAE,GAAG,CAAC,SAAS;YACxB,GAAG,IAAI;SACP,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KACvB;IAEO,eAAe,CAAC,GAAW;QAClC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAEhC,MAAM,IAAI,GAAG,IAAI,eAAe,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC;QAC7D,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QAEvC,IAAI,SAAS,CAAC,mBAAmB,EAAE;YAClC,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC,mBAAmB,CAAC;SAczD;QAED,IAAI,GAAG,GAAgB;YACtB,IAAI,EAAE,KAAK;YACX,OAAO,EAAEA,aAAW,CAAC,KAAK;YAC1B,SAAS,EAAE,GAAG,CAAC,SAAS;YACxB,GAAG,IAAI;SACP,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KACvB;;;ACxHF;;;;;AAWA;;;AAGA,MAAM,OAAQ,SAAQ,cAAc;;;;IAUnC,YAAY,MAAkB;QAC7B,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,SAAS;YACb,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC9B,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC9B,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;KACzC;IAED,KAAK;QACJ,OAAO,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;KAChC;;;ACxCF;;;AAcA;;;MAGa,QAAS,SAAQ,WAAW;IAMxC,YAAY,UAAyB,EAAE;QACtC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,EAAE,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC;;QAIrC,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC3D,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;;QAG3D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE5B,KAAK,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,IAAI,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KACjB;;;;;;IAOD,IAAI,CAAC,MAAgC,EAAE,OAAiB,EAAE;QACzD,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;QACrD,MAAM,IAAI,GAAe,KAAK,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAC3D,IAAI,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;QAEpD,MAAM,CAAC,GAAG,CAAC,sBAAsB,IAAI,CAAC,UAAU,iBAAiB,eAAe,SAAS,CAAC,CAAC;QAE3F,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAC7B,IAAI,eAAe,KAAK,CAAC,EAAE;gBAC1B,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,SAAS,EAAE;oBAChC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,8BAA8B,CAAC,CAAC;iBAChE;gBAED,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;aAC1B;SACD;QAED,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;QAG3B,IAAI,IAAI,CAAC,GAAG,GAAG,QAAQ,EAAE;YACxB,IAAI,CAAC,KAAK,KAAK,aAAa,CAAC,IAAI,CAAC;SAClC;aAAM;YACN,IAAI,CAAC,KAAK,KAAK,aAAa,CAAC,IAAI,CAAC;SAClC;QAED,OAAO,IAAI,EAAE;YACZ,IAAI,IAAI,CAAC,KAAK,KAAK,aAAa,CAAC,IAAI,EAAE;gBACtC,IAAI,aAAa,CAAC,UAAU,IAAI,QAAQ,EAAE;;oBAEzC,IAAI,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAExC,IAAI,IAAI,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;oBAE9B,IAAI,IAAI,CAAC,KAAK,EAAE,EAAE;wBACjB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;4BACjB,IAAI,EAAE,MAAM;4BACZ,SAAS,EAAE,IAAI,CAAC,SAAS;4BACzB,OAAO,EAAE,IAAI,CAAC,OAAO;4BACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;4BACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;4BACvB,MAAM,EAAE,IAAI,CAAC,MAAM;yBACnB,CAAC,CAAC;;wBAGH,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC;wBAChC,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC;qBACpB;yBAAM;wBACN,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,kBAAkB,CAAC,CAAC;wBACpD,MAAM;qBACN;iBACD;qBAAM;oBACN,MAAM;iBACN;aACD;iBAAM,IAAI,IAAI,CAAC,KAAK,KAAK,aAAa,CAAC,IAAI,EAAE;;gBAE7C,IAAI,aAAa,CAAC,UAAU,IAAI,YAAY,EAAE;oBAC7C,IAAI,KAAK,GAAG,aAAa,CAAC,UAAU,CAAC;oBACrC,IAAI,SAAS,GAAG,aAAa,CAAC,KAAK,CAAC;oBAEpC,aAAa,CAAC,KAAK,EAAE,CAAC;oBAEtB,IAAI,SAAS,EAAE;wBACd,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;qBAC7B;oBAED,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC;iBAClB;gBAED,MAAM;aACN;SACD;KACD;;;;;"}